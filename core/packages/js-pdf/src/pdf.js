export const pdfLibJsStr = 'var t={9306:(t,e,i)=>{var s=i(4901),n=i(6823),r=TypeError;t.exports=function(t){if(s(t))return t;throw new r(n(t)+" is not a function")}},3506:(t,e,i)=>{var s=i(3925),n=String,r=TypeError;t.exports=function(t){if(s(t))return t;throw new r("Can't set "+n(t)+" as a prototype")}},7080:(t,e,i)=>{var s=i(4402).has;t.exports=function(t){return s(t),t}},679:(t,e,i)=>{var s=i(1625),n=TypeError;t.exports=function(t,e){if(s(e,t))return t;throw new n("Incorrect invocation")}},8551:(t,e,i)=>{var s=i(34),n=String,r=TypeError;t.exports=function(t){if(s(t))return t;throw new r(n(t)+" is not an object")}},7811:t=>{t.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},7394:(t,e,i)=>{var s=i(4576),n=i(6706),r=i(2195),a=s.ArrayBuffer,o=s.TypeError;t.exports=a&&n(a.prototype,"byteLength","get")||function(t){if("ArrayBuffer"!==r(t))throw new o("ArrayBuffer expected");return t.byteLength}},3238:(t,e,i)=>{var s=i(4576),n=i(7476),r=i(7394),a=s.ArrayBuffer,o=a&&a.prototype,h=o&&n(o.slice);t.exports=function(t){if(0!==r(t))return!1;if(!h)return!1;try{return h(t,0,0),!1}catch(t){return!0}}},5169:(t,e,i)=>{var s=i(3238),n=TypeError;t.exports=function(t){if(s(t))throw new n("ArrayBuffer is detached");return t}},5636:(t,e,i)=>{var s=i(4576),n=i(9504),r=i(6706),a=i(7696),o=i(5169),h=i(7394),l=i(4483),c=i(1548),d=s.structuredClone,u=s.ArrayBuffer,p=s.DataView,g=Math.min,f=u.prototype,m=p.prototype,b=n(f.slice),v=r(f,"resizable","get"),y=r(f,"maxByteLength","get"),A=n(m.getInt8),w=n(m.setInt8);t.exports=(c||l)&&function(t,e,i){var s,n=h(t),r=void 0===e?n:a(e),f=!v||!v(t);if(o(t),c&&(t=d(t,{transfer:[t]}),n===r&&(i||f)))return t;if(n>=r&&(!i||f))s=b(t,0,r);else{var m=i&&!f&&y?{maxByteLength:y(t)}:void 0;s=new u(r,m);for(var x=new p(t),_=new p(s),E=g(r,n),C=0;C<E;C++)w(_,C,A(x,C))}return c||l(t),s}},4644:(t,e,i)=>{var s,n,r,a=i(7811),o=i(3724),h=i(4576),l=i(4901),c=i(34),d=i(9297),u=i(6955),p=i(6823),g=i(6699),f=i(6840),m=i(2106),b=i(1625),v=i(2787),y=i(2967),A=i(8227),w=i(3392),x=i(1181),_=x.enforce,E=x.get,C=h.Int8Array,S=C&&C.prototype,T=h.Uint8ClampedArray,M=T&&T.prototype,k=C&&v(C),I=S&&v(S),R=Object.prototype,P=h.TypeError,D=A("toStringTag"),L=w("TYPED_ARRAY_TAG"),F="TypedArrayConstructor",O=a&&!!y&&"Opera"!==u(h.opera),N=!1,B={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},z={BigInt64Array:8,BigUint64Array:8},H=function(t){var e=v(t);if(c(e)){var i=E(e);return i&&d(i,F)?i[F]:H(e)}},j=function(t){if(!c(t))return!1;var e=u(t);return d(B,e)||d(z,e)};for(s in B)(r=(n=h[s])&&n.prototype)?_(r)[F]=n:O=!1;for(s in z)(r=(n=h[s])&&n.prototype)&&(_(r)[F]=n);if((!O||!l(k)||k===Function.prototype)&&(k=function(){throw new P("Incorrect invocation")},O))for(s in B)h[s]&&y(h[s],k);if((!O||!I||I===R)&&(I=k.prototype,O))for(s in B)h[s]&&y(h[s].prototype,I);if(O&&v(M)!==I&&y(M,I),o&&!d(I,D))for(s in N=!0,m(I,D,{configurable:!0,get:function(){return c(this)?this[L]:void 0}}),B)h[s]&&g(h[s],L,s);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:O,TYPED_ARRAY_TAG:N&&L,aTypedArray:function(t){if(j(t))return t;throw new P("Target is not a typed array")},aTypedArrayConstructor:function(t){if(l(t)&&(!y||b(k,t)))return t;throw new P(p(t)+" is not a typed array constructor")},exportTypedArrayMethod:function(t,e,i,s){if(o){if(i)for(var n in B){var r=h[n];if(r&&d(r.prototype,t))try{delete r.prototype[t]}catch(i){try{r.prototype[t]=e}catch(t){}}}I[t]&&!i||f(I,t,i?e:O&&S[t]||e,s)}},exportTypedArrayStaticMethod:function(t,e,i){var s,n;if(o){if(y){if(i)for(s in B)if((n=h[s])&&d(n,t))try{delete n[t]}catch(t){}if(k[t]&&!i)return;try{return f(k,t,i?e:O&&k[t]||e)}catch(t){}}for(s in B)!(n=h[s])||n[t]&&!i||f(n,t,e)}},getTypedArrayConstructor:H,isView:function(t){if(!c(t))return!1;var e=u(t);return"DataView"===e||d(B,e)||d(z,e)},isTypedArray:j,TypedArray:k,TypedArrayPrototype:I}},5370:(t,e,i)=>{var s=i(6198);t.exports=function(t,e,i){for(var n=0,r=arguments.length>2?i:s(e),a=new t(r);r>n;)a[n]=e[n++];return a}},9617:(t,e,i)=>{var s=i(5397),n=i(5610),r=i(6198),a=function(t){return function(e,i,a){var o=s(e),h=r(o);if(0===h)return!t&&-1;var l,c=n(a,h);if(t&&i!=i){for(;h>c;)if((l=o[c++])!=l)return!0}else for(;h>c;c++)if((t||c in o)&&o[c]===i)return t||c||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},4527:(t,e,i)=>{var s=i(3724),n=i(4376),r=TypeError,a=Object.getOwnPropertyDescriptor,o=s&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(t){return t instanceof TypeError}}();t.exports=o?function(t,e){if(n(t)&&!a(t,"length").writable)throw new r("Cannot set read only .length");return t.length=e}:function(t,e){return t.length=e}},7628:(t,e,i)=>{var s=i(6198);t.exports=function(t,e){for(var i=s(t),n=new e(i),r=0;r<i;r++)n[r]=t[i-r-1];return n}},9928:(t,e,i)=>{var s=i(6198),n=i(1291),r=RangeError;t.exports=function(t,e,i,a){var o=s(t),h=n(i),l=h<0?o+h:h;if(l>=o||l<0)throw new r("Incorrect index");for(var c=new e(o),d=0;d<o;d++)c[d]=d===l?a:t[d];return c}},6319:(t,e,i)=>{var s=i(8551),n=i(9539);t.exports=function(t,e,i,r){try{return r?e(s(i)[0],i[1]):e(i)}catch(e){n(t,"throw",e)}}},2195:(t,e,i)=>{var s=i(9504),n=s({}.toString),r=s("".slice);t.exports=function(t){return r(n(t),8,-1)}},6955:(t,e,i)=>{var s=i(2140),n=i(4901),r=i(2195),a=i(8227)("toStringTag"),o=Object,h="Arguments"===r(function(){return arguments}());t.exports=s?r:function(t){var e,i,s;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(i=function(t,e){try{return t[e]}catch(t){}}(e=o(t),a))?i:h?r(e):"Object"===(s=r(e))&&n(e.callee)?"Arguments":s}},7740:(t,e,i)=>{var s=i(9297),n=i(5031),r=i(7347),a=i(4913);t.exports=function(t,e,i){for(var o=n(e),h=a.f,l=r.f,c=0;c<o.length;c++){var d=o[c];s(t,d)||i&&s(i,d)||h(t,d,l(e,d))}}},2211:(t,e,i)=>{var s=i(9039);t.exports=!s((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},2529:t=>{t.exports=function(t,e){return{value:t,done:e}}},6699:(t,e,i)=>{var s=i(3724),n=i(4913),r=i(6980);t.exports=s?function(t,e,i){return n.f(t,e,r(1,i))}:function(t,e,i){return t[e]=i,t}},6980:t=>{t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},4659:(t,e,i)=>{var s=i(3724),n=i(4913),r=i(6980);t.exports=function(t,e,i){s?n.f(t,e,r(0,i)):t[e]=i}},2106:(t,e,i)=>{var s=i(283),n=i(4913);t.exports=function(t,e,i){return i.get&&s(i.get,e,{getter:!0}),i.set&&s(i.set,e,{setter:!0}),n.f(t,e,i)}},6840:(t,e,i)=>{var s=i(4901),n=i(4913),r=i(283),a=i(9433);t.exports=function(t,e,i,o){o||(o={});var h=o.enumerable,l=void 0!==o.name?o.name:e;if(s(i)&&r(i,l,o),o.global)h?t[e]=i:a(e,i);else{try{o.unsafe?t[e]&&(h=!0):delete t[e]}catch(t){}h?t[e]=i:n.f(t,e,{value:i,enumerable:!1,configurable:!o.nonConfigurable,writable:!o.nonWritable})}return t}},6279:(t,e,i)=>{var s=i(6840);t.exports=function(t,e,i){for(var n in e)s(t,n,e[n],i);return t}},9433:(t,e,i)=>{var s=i(4576),n=Object.defineProperty;t.exports=function(t,e){try{n(s,t,{value:e,configurable:!0,writable:!0})}catch(i){s[t]=e}return e}},3724:(t,e,i)=>{var s=i(9039);t.exports=!s((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4483:(t,e,i)=>{var s,n,r,a,o=i(4576),h=i(9429),l=i(1548),c=o.structuredClone,d=o.ArrayBuffer,u=o.MessageChannel,p=!1;if(l)p=function(t){c(t,{transfer:[t]})};else if(d)try{u||(s=h("worker_threads"))&&(u=s.MessageChannel),u&&(n=new u,r=new d(2),a=function(t){n.port1.postMessage(null,[t])},2===r.byteLength&&(a(r),0===r.byteLength&&(p=a)))}catch(t){}t.exports=p},4055:(t,e,i)=>{var s=i(4576),n=i(34),r=s.document,a=n(r)&&n(r.createElement);t.exports=function(t){return a?r.createElement(t):{}}},6837:t=>{var e=TypeError;t.exports=function(t){if(t>9007199254740991)throw e("Maximum allowed index exceeded");return t}},5002:t=>{t.exports={IndexSizeError:{s:"INDEX_SIZE_ERR",c:1,m:1},DOMStringSizeError:{s:"DOMSTRING_SIZE_ERR",c:2,m:0},HierarchyRequestError:{s:"HIERARCHY_REQUEST_ERR",c:3,m:1},WrongDocumentError:{s:"WRONG_DOCUMENT_ERR",c:4,m:1},InvalidCharacterError:{s:"INVALID_CHARACTER_ERR",c:5,m:1},NoDataAllowedError:{s:"NO_DATA_ALLOWED_ERR",c:6,m:0},NoModificationAllowedError:{s:"NO_MODIFICATION_ALLOWED_ERR",c:7,m:1},NotFoundError:{s:"NOT_FOUND_ERR",c:8,m:1},NotSupportedError:{s:"NOT_SUPPORTED_ERR",c:9,m:1},InUseAttributeError:{s:"INUSE_ATTRIBUTE_ERR",c:10,m:1},InvalidStateError:{s:"INVALID_STATE_ERR",c:11,m:1},SyntaxError:{s:"SYNTAX_ERR",c:12,m:1},InvalidModificationError:{s:"INVALID_MODIFICATION_ERR",c:13,m:1},NamespaceError:{s:"NAMESPACE_ERR",c:14,m:1},InvalidAccessError:{s:"INVALID_ACCESS_ERR",c:15,m:1},ValidationError:{s:"VALIDATION_ERR",c:16,m:0},TypeMismatchError:{s:"TYPE_MISMATCH_ERR",c:17,m:1},SecurityError:{s:"SECURITY_ERR",c:18,m:1},NetworkError:{s:"NETWORK_ERR",c:19,m:1},AbortError:{s:"ABORT_ERR",c:20,m:1},URLMismatchError:{s:"URL_MISMATCH_ERR",c:21,m:1},QuotaExceededError:{s:"QUOTA_EXCEEDED_ERR",c:22,m:1},TimeoutError:{s:"TIMEOUT_ERR",c:23,m:1},InvalidNodeTypeError:{s:"INVALID_NODE_TYPE_ERR",c:24,m:1},DataCloneError:{s:"DATA_CLONE_ERR",c:25,m:1}}},8727:t=>{t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},6193:(t,e,i)=>{var s=i(4215);t.exports="NODE"===s},2839:(t,e,i)=>{var s=i(4576).navigator,n=s&&s.userAgent;t.exports=n?String(n):""},9519:(t,e,i)=>{var s,n,r=i(4576),a=i(2839),o=r.process,h=r.Deno,l=o&&o.versions||h&&h.version,c=l&&l.v8;c&&(n=(s=c.split("."))[0]>0&&s[0]<4?1:+(s[0]+s[1])),!n&&a&&(!(s=a.match(/Edge\/(\d+)/))||s[1]>=74)&&(s=a.match(/Chrome\/(\d+)/))&&(n=+s[1]),t.exports=n},4215:(t,e,i)=>{var s=i(4576),n=i(2839),r=i(2195),a=function(t){return n.slice(0,t.length)===t};t.exports=a("Bun/")?"BUN":a("Cloudflare-Workers")?"CLOUDFLARE":a("Deno/")?"DENO":a("Node.js/")?"NODE":s.Bun&&"string"==typeof Bun.version?"BUN":s.Deno&&"object"==typeof Deno.version?"DENO":"process"===r(s.process)?"NODE":s.window&&s.document?"BROWSER":"REST"},8574:(t,e,i)=>{var s=i(9504),n=Error,r=s("".replace),a=String(new n("zxcasd").stack),o=/\n\s*at [^:]*:[^\n]*/,h=o.test(a);t.exports=function(t,e){if(h&&"string"==typeof t&&!n.prepareStackTrace)for(;e--;)t=r(t,o,"");return t}},6518:(t,e,i)=>{var s=i(4576),n=i(7347).f,r=i(6699),a=i(6840),o=i(9433),h=i(7740),l=i(2796);t.exports=function(t,e){var i,c,d,u,p,g=t.target,f=t.global,m=t.stat;if(i=f?s:m?s[g]||o(g,{}):s[g]&&s[g].prototype)for(c in e){if(u=e[c],d=t.dontCallGetSet?(p=n(i,c))&&p.value:i[c],!l(f?c:g+(m?".":"#")+c,t.forced)&&void 0!==d){if(typeof u==typeof d)continue;h(u,d)}(t.sham||d&&d.sham)&&r(u,"sham",!0),a(i,c,u,t)}}},9039:t=>{t.exports=function(t){try{return!!t()}catch(t){return!0}}},6080:(t,e,i)=>{var s=i(7476),n=i(9306),r=i(616),a=s(s.bind);t.exports=function(t,e){return n(t),void 0===e?t:r?a(t,e):function(){return t.apply(e,arguments)}}},616:(t,e,i)=>{var s=i(9039);t.exports=!s((function(){var t=function(){}.bind();return"function"!=typeof t||t.hasOwnProperty("prototype")}))},9565:(t,e,i)=>{var s=i(616),n=Function.prototype.call;t.exports=s?n.bind(n):function(){return n.apply(n,arguments)}},350:(t,e,i)=>{var s=i(3724),n=i(9297),r=Function.prototype,a=s&&Object.getOwnPropertyDescriptor,o=n(r,"name"),h=o&&"something"===function(){}.name,l=o&&(!s||s&&a(r,"name").configurable);t.exports={EXISTS:o,PROPER:h,CONFIGURABLE:l}},6706:(t,e,i)=>{var s=i(9504),n=i(9306);t.exports=function(t,e,i){try{return s(n(Object.getOwnPropertyDescriptor(t,e)[i]))}catch(t){}}},7476:(t,e,i)=>{var s=i(2195),n=i(9504);t.exports=function(t){if("Function"===s(t))return n(t)}},9504:(t,e,i)=>{var s=i(616),n=Function.prototype,r=n.call,a=s&&n.bind.bind(r,r);t.exports=s?a:function(t){return function(){return r.apply(t,arguments)}}},9429:(t,e,i)=>{var s=i(4576),n=i(6193);t.exports=function(t){if(n){try{return s.process.getBuiltinModule(t)}catch(t){}try{return Function('return require("'+t+'")')()}catch(t){}}}},7751:(t,e,i)=>{var s=i(4576),n=i(4901);t.exports=function(t,e){return arguments.length<2?(i=s[t],n(i)?i:void 0):s[t]&&s[t][e];var i}},1767:t=>{t.exports=function(t){return{iterator:t,next:t.next,done:!1}}},8646:(t,e,i)=>{var s=i(9565),n=i(8551),r=i(1767),a=i(851);t.exports=function(t,e){e&&"string"==typeof t||n(t);var i=a(t);return r(n(void 0!==i?s(i,t):t))}},851:(t,e,i)=>{var s=i(6955),n=i(5966),r=i(4117),a=i(6269),o=i(8227)("iterator");t.exports=function(t){if(!r(t))return n(t,o)||n(t,"@@iterator")||a[s(t)]}},81:(t,e,i)=>{var s=i(9565),n=i(9306),r=i(8551),a=i(6823),o=i(851),h=TypeError;t.exports=function(t,e){var i=arguments.length<2?o(t):e;if(n(i))return r(s(i,t));throw new h(a(t)+" is not iterable")}},5966:(t,e,i)=>{var s=i(9306),n=i(4117);t.exports=function(t,e){var i=t[e];return n(i)?void 0:s(i)}},3789:(t,e,i)=>{var s=i(9306),n=i(8551),r=i(9565),a=i(1291),o=i(1767),h="Invalid size",l=RangeError,c=TypeError,d=Math.max,u=function(t,e){this.set=t,this.size=d(e,0),this.has=s(t.has),this.keys=s(t.keys)};u.prototype={getIterator:function(){return o(n(r(this.keys,this.set)))},includes:function(t){return r(this.has,this.set,t)}},t.exports=function(t){n(t);var e=+t.size;if(e!=e)throw new c(h);var i=a(e);if(i<0)throw new l(h);return new u(t,i)}},4576:function(t){var e=function(t){return t&&t.Math===Math&&t};t.exports=e("object"==typeof globalThis&&globalThis)||e("object"==typeof window&&window)||e("object"==typeof self&&self)||e("object"==typeof global&&global)||e("object"==typeof this&&this)||function(){return this}()||Function("return this")()},9297:(t,e,i)=>{var s=i(9504),n=i(8981),r=s({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,e){return r(n(t),e)}},421:t=>{t.exports={}},397:(t,e,i)=>{var s=i(7751);t.exports=s("document","documentElement")},5917:(t,e,i)=>{var s=i(3724),n=i(9039),r=i(4055);t.exports=!s&&!n((function(){return 7!==Object.defineProperty(r("div"),"a",{get:function(){return 7}}).a}))},7055:(t,e,i)=>{var s=i(9504),n=i(9039),r=i(2195),a=Object,o=s("".split);t.exports=n((function(){return!a("z").propertyIsEnumerable(0)}))?function(t){return"String"===r(t)?o(t,""):a(t)}:a},3167:(t,e,i)=>{var s=i(4901),n=i(34),r=i(2967);t.exports=function(t,e,i){var a,o;return r&&s(a=e.constructor)&&a!==i&&n(o=a.prototype)&&o!==i.prototype&&r(t,o),t}},3706:(t,e,i)=>{var s=i(9504),n=i(4901),r=i(7629),a=s(Function.toString);n(r.inspectSource)||(r.inspectSource=function(t){return a(t)}),t.exports=r.inspectSource},1181:(t,e,i)=>{var s,n,r,a=i(8622),o=i(4576),h=i(34),l=i(6699),c=i(9297),d=i(7629),u=i(6119),p=i(421),g="Object already initialized",f=o.TypeError,m=o.WeakMap;if(a||d.state){var b=d.state||(d.state=new m);b.get=b.get,b.has=b.has,b.set=b.set,s=function(t,e){if(b.has(t))throw new f(g);return e.facade=t,b.set(t,e),e},n=function(t){return b.get(t)||{}},r=function(t){return b.has(t)}}else{var v=u("state");p[v]=!0,s=function(t,e){if(c(t,v))throw new f(g);return e.facade=t,l(t,v,e),e},n=function(t){return c(t,v)?t[v]:{}},r=function(t){return c(t,v)}}t.exports={set:s,get:n,has:r,enforce:function(t){return r(t)?n(t):s(t,{})},getterFor:function(t){return function(e){var i;if(!h(e)||(i=n(e)).type!==t)throw new f("Incompatible receiver, "+t+" required");return i}}}},4209:(t,e,i)=>{var s=i(8227),n=i(6269),r=s("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(n.Array===t||a[r]===t)}},4376:(t,e,i)=>{var s=i(2195);t.exports=Array.isArray||function(t){return"Array"===s(t)}},1108:(t,e,i)=>{var s=i(6955);t.exports=function(t){var e=s(t);return"BigInt64Array"===e||"BigUint64Array"===e}},4901:t=>{var e="object"==typeof document&&document.all;t.exports=void 0===e&&void 0!==e?function(t){return"function"==typeof t||t===e}:function(t){return"function"==typeof t}},2796:(t,e,i)=>{var s=i(9039),n=i(4901),r=/#|\.prototype\./,a=function(t,e){var i=h[o(t)];return i===c||i!==l&&(n(e)?s(e):!!e)},o=a.normalize=function(t){return String(t).replace(r,".").toLowerCase()},h=a.data={},l=a.NATIVE="N",c=a.POLYFILL="P";t.exports=a},4117:t=>{t.exports=function(t){return null==t}},34:(t,e,i)=>{var s=i(4901);t.exports=function(t){return"object"==typeof t?null!==t:s(t)}},3925:(t,e,i)=>{var s=i(34);t.exports=function(t){return s(t)||null===t}},6395:t=>{t.exports=!1},757:(t,e,i)=>{var s=i(7751),n=i(4901),r=i(1625),a=i(7040),o=Object;t.exports=a?function(t){return"symbol"==typeof t}:function(t){var e=s("Symbol");return n(e)&&r(e.prototype,o(t))}},507:(t,e,i)=>{var s=i(9565);t.exports=function(t,e,i){for(var n,r,a=i?t:t.iterator,o=t.next;!(n=s(o,a)).done;)if(void 0!==(r=e(n.value)))return r}},2652:(t,e,i)=>{var s=i(6080),n=i(9565),r=i(8551),a=i(6823),o=i(4209),h=i(6198),l=i(1625),c=i(81),d=i(851),u=i(9539),p=TypeError,g=function(t,e){this.stopped=t,this.result=e},f=g.prototype;t.exports=function(t,e,i){var m,b,v,y,A,w,x,_=i&&i.that,E=!(!i||!i.AS_ENTRIES),C=!(!i||!i.IS_RECORD),S=!(!i||!i.IS_ITERATOR),T=!(!i||!i.INTERRUPTED),M=s(e,_),k=function(t){return m&&u(m,"normal",t),new g(!0,t)},I=function(t){return E?(r(t),T?M(t[0],t[1],k):M(t[0],t[1])):T?M(t,k):M(t)};if(C)m=t.iterator;else if(S)m=t;else{if(!(b=d(t)))throw new p(a(t)+" is not iterable");if(o(b)){for(v=0,y=h(t);y>v;v++)if((A=I(t[v]))&&l(f,A))return A;return new g(!1)}m=c(t,b)}for(w=C?t.next:m.next;!(x=n(w,m)).done;){try{A=I(x.value)}catch(t){u(m,"throw",t)}if("object"==typeof A&&A&&l(f,A))return A}return new g(!1)}},9539:(t,e,i)=>{var s=i(9565),n=i(8551),r=i(5966);t.exports=function(t,e,i){var a,o;n(t);try{if(!(a=r(t,"return"))){if("throw"===e)throw i;return i}a=s(a,t)}catch(t){o=!0,a=t}if("throw"===e)throw i;if(o)throw a;return n(a),i}},9462:(t,e,i)=>{var s=i(9565),n=i(2360),r=i(6699),a=i(6279),o=i(8227),h=i(1181),l=i(5966),c=i(7657).IteratorPrototype,d=i(2529),u=i(9539),p=o("toStringTag"),g="IteratorHelper",f="WrapForValidIterator",m=h.set,b=function(t){var e=h.getterFor(t?f:g);return a(n(c),{next:function(){var i=e(this);if(t)return i.nextHandler();try{var s=i.done?void 0:i.nextHandler();return d(s,i.done)}catch(t){throw i.done=!0,t}},return:function(){var i=e(this),n=i.iterator;if(i.done=!0,t){var r=l(n,"return");return r?s(r,n):d(void 0,!0)}if(i.inner)try{u(i.inner.iterator,"normal")}catch(t){return u(n,"throw",t)}return u(n,"normal"),d(void 0,!0)}})},v=b(!0),y=b(!1);r(y,p,"Iterator Helper"),t.exports=function(t,e){var i=function(i,s){s?(s.iterator=i.iterator,s.next=i.next):s=i,s.type=e?f:g,s.nextHandler=t,s.counter=0,s.done=!1,m(this,s)};return i.prototype=e?v:y,i}},713:(t,e,i)=>{var s=i(9565),n=i(9306),r=i(8551),a=i(1767),o=i(9462),h=i(6319),l=o((function(){var t=this.iterator,e=r(s(this.next,t));if(!(this.done=!!e.done))return h(t,this.mapper,[e.value,this.counter++],!0)}));t.exports=function(t){return r(this),n(t),new l(a(this),{mapper:t})}},7657:(t,e,i)=>{var s,n,r,a=i(9039),o=i(4901),h=i(34),l=i(2360),c=i(2787),d=i(6840),u=i(8227),p=i(6395),g=u("iterator"),f=!1;[].keys&&("next"in(r=[].keys())?(n=c(c(r)))!==Object.prototype&&(s=n):f=!0),!h(s)||a((function(){var t={};return s[g].call(t)!==t}))?s={}:p&&(s=l(s)),o(s[g])||d(s,g,(function(){return this})),t.exports={IteratorPrototype:s,BUGGY_SAFARI_ITERATORS:f}},6269:t=>{t.exports={}},6198:(t,e,i)=>{var s=i(8014);t.exports=function(t){return s(t.length)}},283:(t,e,i)=>{var s=i(9504),n=i(9039),r=i(4901),a=i(9297),o=i(3724),h=i(350).CONFIGURABLE,l=i(3706),c=i(1181),d=c.enforce,u=c.get,p=String,g=Object.defineProperty,f=s("".slice),m=s("".replace),b=s([].join),v=o&&!n((function(){return 8!==g((function(){}),"length",{value:8}).length})),y=String(String).split("String"),A=t.exports=function(t,e,i){"Symbol("===f(p(e),0,7)&&(e="["+m(p(e),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),i&&i.getter&&(e="get "+e),i&&i.setter&&(e="set "+e),(!a(t,"name")||h&&t.name!==e)&&(o?g(t,"name",{value:e,configurable:!0}):t.name=e),v&&i&&a(i,"arity")&&t.length!==i.arity&&g(t,"length",{value:i.arity});try{i&&a(i,"constructor")&&i.constructor?o&&g(t,"prototype",{writable:!1}):t.prototype&&(t.prototype=void 0)}catch(t){}var s=d(t);return a(s,"source")||(s.source=b(y,"string"==typeof e?e:"")),t};Function.prototype.toString=A((function(){return r(this)&&u(this).source||l(this)}),"toString")},741:t=>{var e=Math.ceil,i=Math.floor;t.exports=Math.trunc||function(t){var s=+t;return(s>0?i:e)(s)}},6043:(t,e,i)=>{var s=i(9306),n=TypeError,r=function(t){var e,i;this.promise=new t((function(t,s){if(void 0!==e||void 0!==i)throw new n("Bad Promise constructor");e=t,i=s})),this.resolve=s(e),this.reject=s(i)};t.exports.f=function(t){return new r(t)}},2603:(t,e,i)=>{var s=i(655);t.exports=function(t,e){return void 0===t?arguments.length<2?"":e:s(t)}},4149:t=>{var e=RangeError;t.exports=function(t){if(t==t)return t;throw new e("NaN is not allowed")}},2360:(t,e,i)=>{var s,n=i(8551),r=i(6801),a=i(8727),o=i(421),h=i(397),l=i(4055),c=i(6119),d="prototype",u="script",p=c("IE_PROTO"),g=function(){},f=function(t){return"<"+u+">"+t+"</"+u+">"},m=function(t){t.write(f("")),t.close();var e=t.parentWindow.Object;return t=null,e},b=function(){try{s=new ActiveXObject("htmlfile")}catch(t){}var t,e,i;b="undefined"!=typeof document?document.domain&&s?m(s):(e=l("iframe"),i="java"+u+":",e.style.display="none",h.appendChild(e),e.src=String(i),(t=e.contentWindow.document).open(),t.write(f("document.F=Object")),t.close(),t.F):m(s);for(var n=a.length;n--;)delete b[d][a[n]];return b()};o[p]=!0,t.exports=Object.create||function(t,e){var i;return null!==t?(g[d]=n(t),i=new g,g[d]=null,i[p]=t):i=b(),void 0===e?i:r.f(i,e)}},6801:(t,e,i)=>{var s=i(3724),n=i(8686),r=i(4913),a=i(8551),o=i(5397),h=i(1072);e.f=s&&!n?Object.defineProperties:function(t,e){a(t);for(var i,s=o(e),n=h(e),l=n.length,c=0;l>c;)r.f(t,i=n[c++],s[i]);return t}},4913:(t,e,i)=>{var s=i(3724),n=i(5917),r=i(8686),a=i(8551),o=i(6969),h=TypeError,l=Object.defineProperty,c=Object.getOwnPropertyDescriptor,d="enumerable",u="configurable",p="writable";e.f=s?r?function(t,e,i){if(a(t),e=o(e),a(i),"function"==typeof t&&"prototype"===e&&"value"in i&&p in i&&!i[p]){var s=c(t,e);s&&s[p]&&(t[e]=i.value,i={configurable:u in i?i[u]:s[u],enumerable:d in i?i[d]:s[d],writable:!1})}return l(t,e,i)}:l:function(t,e,i){if(a(t),e=o(e),a(i),n)try{return l(t,e,i)}catch(t){}if("get"in i||"set"in i)throw new h("Accessors not supported");return"value"in i&&(t[e]=i.value),t}},7347:(t,e,i)=>{var s=i(3724),n=i(9565),r=i(8773),a=i(6980),o=i(5397),h=i(6969),l=i(9297),c=i(5917),d=Object.getOwnPropertyDescriptor;e.f=s?d:function(t,e){if(t=o(t),e=h(e),c)try{return d(t,e)}catch(t){}if(l(t,e))return a(!n(r.f,t,e),t[e])}},8480:(t,e,i)=>{var s=i(1828),n=i(8727).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return s(t,n)}},3717:(t,e)=>{e.f=Object.getOwnPropertySymbols},2787:(t,e,i)=>{var s=i(9297),n=i(4901),r=i(8981),a=i(6119),o=i(2211),h=a("IE_PROTO"),l=Object,c=l.prototype;t.exports=o?l.getPrototypeOf:function(t){var e=r(t);if(s(e,h))return e[h];var i=e.constructor;return n(i)&&e instanceof i?i.prototype:e instanceof l?c:null}},1625:(t,e,i)=>{var s=i(9504);t.exports=s({}.isPrototypeOf)},1828:(t,e,i)=>{var s=i(9504),n=i(9297),r=i(5397),a=i(9617).indexOf,o=i(421),h=s([].push);t.exports=function(t,e){var i,s=r(t),l=0,c=[];for(i in s)!n(o,i)&&n(s,i)&&h(c,i);for(;e.length>l;)n(s,i=e[l++])&&(~a(c,i)||h(c,i));return c}},1072:(t,e,i)=>{var s=i(1828),n=i(8727);t.exports=Object.keys||function(t){return s(t,n)}},8773:(t,e)=>{var i={}.propertyIsEnumerable,s=Object.getOwnPropertyDescriptor,n=s&&!i.call({1:2},1);e.f=n?function(t){var e=s(this,t);return!!e&&e.enumerable}:i},2967:(t,e,i)=>{var s=i(6706),n=i(34),r=i(7750),a=i(3506);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,i={};try{(t=s(Object.prototype,"__proto__","set"))(i,[]),e=i instanceof Array}catch(t){}return function(i,s){return r(i),a(s),n(i)?(e?t(i,s):i.__proto__=s,i):i}}():void 0)},4270:(t,e,i)=>{var s=i(9565),n=i(4901),r=i(34),a=TypeError;t.exports=function(t,e){var i,o;if("string"===e&&n(i=t.toString)&&!r(o=s(i,t)))return o;if(n(i=t.valueOf)&&!r(o=s(i,t)))return o;if("string"!==e&&n(i=t.toString)&&!r(o=s(i,t)))return o;throw new a("Can't convert object to primitive value")}},5031:(t,e,i)=>{var s=i(7751),n=i(9504),r=i(8480),a=i(3717),o=i(8551),h=n([].concat);t.exports=s("Reflect","ownKeys")||function(t){var e=r.f(o(t)),i=a.f;return i?h(e,i(t)):e}},8235:(t,e,i)=>{var s=i(9504),n=i(9297),r=SyntaxError,a=parseInt,o=String.fromCharCode,h=s("".charAt),l=s("".slice),c=s(/./.exec),d={'\\"':'"',"\\\\":"\\","\\/":"/","\\b":"\b","\\f":"\f","\\n":"\n","\\r":"\r","\\t":"\t"},u=/^[\da-f]{4}$/i,p=/^[\u0000-\u001F]$/;t.exports=function(t,e){for(var i=!0,s="";e<t.length;){var g=h(t,e);if("\\"===g){var f=l(t,e,e+2);if(n(d,f))s+=d[f],e+=2;else{if("\\u"!==f)throw new r('Unknown escape sequence: "'+f+'"');var m=l(t,e+=2,e+4);if(!c(u,m))throw new r("Bad Unicode escape at: "+e);s+=o(a(m,16)),e+=4}}else{if('"'===g){i=!1,e++;break}if(c(p,g))throw new r("Bad control character in string literal at: "+e);s+=g,e++}}if(i)throw new r("Unterminated string at: "+e);return{value:s,end:e}}},7750:(t,e,i)=>{var s=i(4117),n=TypeError;t.exports=function(t){if(s(t))throw new n("Can't call method on "+t);return t}},9286:(t,e,i)=>{var s=i(4402),n=i(8469),r=s.Set,a=s.add;t.exports=function(t){var e=new r;return n(t,(function(t){a(e,t)})),e}},3440:(t,e,i)=>{var s=i(7080),n=i(4402),r=i(9286),a=i(5170),o=i(3789),h=i(8469),l=i(507),c=n.has,d=n.remove;t.exports=function(t){var e=s(this),i=o(t),n=r(e);return a(e)<=i.size?h(e,(function(t){i.includes(t)&&d(n,t)})):l(i.getIterator(),(function(t){c(e,t)&&d(n,t)})),n}},4402:(t,e,i)=>{var s=i(9504),n=Set.prototype;t.exports={Set,add:s(n.add),has:s(n.has),remove:s(n.delete),proto:n}},8750:(t,e,i)=>{var s=i(7080),n=i(4402),r=i(5170),a=i(3789),o=i(8469),h=i(507),l=n.Set,c=n.add,d=n.has;t.exports=function(t){var e=s(this),i=a(t),n=new l;return r(e)>i.size?h(i.getIterator(),(function(t){d(e,t)&&c(n,t)})):o(e,(function(t){i.includes(t)&&c(n,t)})),n}},4449:(t,e,i)=>{var s=i(7080),n=i(4402).has,r=i(5170),a=i(3789),o=i(8469),h=i(507),l=i(9539);t.exports=function(t){var e=s(this),i=a(t);if(r(e)<=i.size)return!1!==o(e,(function(t){if(i.includes(t))return!1}),!0);var c=i.getIterator();return!1!==h(c,(function(t){if(n(e,t))return l(c,"normal",!1)}))}},3838:(t,e,i)=>{var s=i(7080),n=i(5170),r=i(8469),a=i(3789);t.exports=function(t){var e=s(this),i=a(t);return!(n(e)>i.size)&&!1!==r(e,(function(t){if(!i.includes(t))return!1}),!0)}},8527:(t,e,i)=>{var s=i(7080),n=i(4402).has,r=i(5170),a=i(3789),o=i(507),h=i(9539);t.exports=function(t){var e=s(this),i=a(t);if(r(e)<i.size)return!1;var l=i.getIterator();return!1!==o(l,(function(t){if(!n(e,t))return h(l,"normal",!1)}))}},8469:(t,e,i)=>{var s=i(9504),n=i(507),r=i(4402),a=r.Set,o=r.proto,h=s(o.forEach),l=s(o.keys),c=l(new a).next;t.exports=function(t,e,i){return i?n({iterator:l(t),next:c},e):h(t,e)}},4916:(t,e,i)=>{var s=i(7751),n=function(t){return{size:t,has:function(){return!1},keys:function(){return{next:function(){return{done:!0}}}}}};t.exports=function(t){var e=s("Set");try{(new e)[t](n(0));try{return(new e)[t](n(-1)),!1}catch(t){return!0}}catch(t){return!1}}},5170:(t,e,i)=>{var s=i(6706),n=i(4402);t.exports=s(n.proto,"size","get")||function(t){return t.size}},3650:(t,e,i)=>{var s=i(7080),n=i(4402),r=i(9286),a=i(3789),o=i(507),h=n.add,l=n.has,c=n.remove;t.exports=function(t){var e=s(this),i=a(t).getIterator(),n=r(e);return o(i,(function(t){l(e,t)?c(n,t):h(n,t)})),n}},4204:(t,e,i)=>{var s=i(7080),n=i(4402).add,r=i(9286),a=i(3789),o=i(507);t.exports=function(t){var e=s(this),i=a(t).getIterator(),h=r(e);return o(i,(function(t){n(h,t)})),h}},6119:(t,e,i)=>{var s=i(5745),n=i(3392),r=s("keys");t.exports=function(t){return r[t]||(r[t]=n(t))}},7629:(t,e,i)=>{var s=i(6395),n=i(4576),r=i(9433),a="__core-js_shared__",o=t.exports=n[a]||r(a,{});(o.versions||(o.versions=[])).push({version:"3.38.1",mode:s?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.38.1/LICENSE",source:"https://github.com/zloirock/core-js"})},5745:(t,e,i)=>{var s=i(7629);t.exports=function(t,e){return s[t]||(s[t]=e||{})}},1548:(t,e,i)=>{var s=i(4576),n=i(9039),r=i(9519),a=i(4215),o=s.structuredClone;t.exports=!!o&&!n((function(){if("DENO"===a&&r>92||"NODE"===a&&r>94||"BROWSER"===a&&r>97)return!1;var t=new ArrayBuffer(8),e=o(t,{transfer:[t]});return 0!==t.byteLength||8!==e.byteLength}))},4495:(t,e,i)=>{var s=i(9519),n=i(9039),r=i(4576).String;t.exports=!!Object.getOwnPropertySymbols&&!n((function(){var t=Symbol("symbol detection");return!r(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&s&&s<41}))},5610:(t,e,i)=>{var s=i(1291),n=Math.max,r=Math.min;t.exports=function(t,e){var i=s(t);return i<0?n(i+e,0):r(i,e)}},5854:(t,e,i)=>{var s=i(2777),n=TypeError;t.exports=function(t){var e=s(t,"number");if("number"==typeof e)throw new n("Can't convert number to bigint");return BigInt(e)}},7696:(t,e,i)=>{var s=i(1291),n=i(8014),r=RangeError;t.exports=function(t){if(void 0===t)return 0;var e=s(t),i=n(e);if(e!==i)throw new r("Wrong length or index");return i}},5397:(t,e,i)=>{var s=i(7055),n=i(7750);t.exports=function(t){return s(n(t))}},1291:(t,e,i)=>{var s=i(741);t.exports=function(t){var e=+t;return e!=e||0===e?0:s(e)}},8014:(t,e,i)=>{var s=i(1291),n=Math.min;t.exports=function(t){var e=s(t);return e>0?n(e,9007199254740991):0}},8981:(t,e,i)=>{var s=i(7750),n=Object;t.exports=function(t){return n(s(t))}},9590:(t,e,i)=>{var s=i(1291),n=RangeError;t.exports=function(t){var e=s(t);if(e<0)throw new n("The argument can't be less than 0");return e}},2777:(t,e,i)=>{var s=i(9565),n=i(34),r=i(757),a=i(5966),o=i(4270),h=i(8227),l=TypeError,c=h("toPrimitive");t.exports=function(t,e){if(!n(t)||r(t))return t;var i,h=a(t,c);if(h){if(void 0===e&&(e="default"),i=s(h,t,e),!n(i)||r(i))return i;throw new l("Can't convert object to primitive value")}return void 0===e&&(e="number"),o(t,e)}},6969:(t,e,i)=>{var s=i(2777),n=i(757);t.exports=function(t){var e=s(t,"string");return n(e)?e:e+""}},2140:(t,e,i)=>{var s={};s[i(8227)("toStringTag")]="z",t.exports="[object z]"===String(s)},655:(t,e,i)=>{var s=i(6955),n=String;t.exports=function(t){if("Symbol"===s(t))throw new TypeError("Cannot convert a Symbol value to a string");return n(t)}},6823:t=>{var e=String;t.exports=function(t){try{return e(t)}catch(t){return"Object"}}},3392:(t,e,i)=>{var s=i(9504),n=0,r=Math.random(),a=s(1..toString);t.exports=function(t){return"Symbol("+(void 0===t?"":t)+")_"+a(++n+r,36)}},7040:(t,e,i)=>{var s=i(4495);t.exports=s&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},8686:(t,e,i)=>{var s=i(3724),n=i(9039);t.exports=s&&n((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},2812:t=>{var e=TypeError;t.exports=function(t,i){if(t<i)throw new e("Not enough arguments");return t}},8622:(t,e,i)=>{var s=i(4576),n=i(4901),r=s.WeakMap;t.exports=n(r)&&/native code/.test(String(r))},8227:(t,e,i)=>{var s=i(4576),n=i(5745),r=i(9297),a=i(3392),o=i(4495),h=i(7040),l=s.Symbol,c=n("wks"),d=h?l.for||l:l&&l.withoutSetter||a;t.exports=function(t){return r(c,t)||(c[t]=o&&r(l,t)?l[t]:d("Symbol."+t)),c[t]}},6573:(t,e,i)=>{var s=i(3724),n=i(2106),r=i(3238),a=ArrayBuffer.prototype;s&&!("detached"in a)&&n(a,"detached",{configurable:!0,get:function(){return r(this)}})},7936:(t,e,i)=>{var s=i(6518),n=i(5636);n&&s({target:"ArrayBuffer",proto:!0},{transferToFixedLength:function(){return n(this,arguments.length?arguments[0]:void 0,!1)}})},8100:(t,e,i)=>{var s=i(6518),n=i(5636);n&&s({target:"ArrayBuffer",proto:!0},{transfer:function(){return n(this,arguments.length?arguments[0]:void 0,!0)}})},4114:(t,e,i)=>{var s=i(6518),n=i(8981),r=i(6198),a=i(4527),o=i(6837);s({target:"Array",proto:!0,arity:1,forced:i(9039)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(t){return t instanceof TypeError}}()},{push:function(t){var e=n(this),i=r(e),s=arguments.length;o(i+s);for(var h=0;h<s;h++)e[i]=arguments[h],i++;return a(e,i),i}})},4628:(t,e,i)=>{var s=i(6518),n=i(6043);s({target:"Promise",stat:!0},{withResolvers:function(){var t=n.f(this);return{promise:t.promise,resolve:t.resolve,reject:t.reject}}})},7642:(t,e,i)=>{var s=i(6518),n=i(3440);s({target:"Set",proto:!0,real:!0,forced:!i(4916)("difference")},{difference:n})},8004:(t,e,i)=>{var s=i(6518),n=i(9039),r=i(8750);s({target:"Set",proto:!0,real:!0,forced:!i(4916)("intersection")||n((function(){return"3,2"!==String(Array.from(new Set([1,2,3]).intersection(new Set([3,2]))))}))},{intersection:r})},3853:(t,e,i)=>{var s=i(6518),n=i(4449);s({target:"Set",proto:!0,real:!0,forced:!i(4916)("isDisjointFrom")},{isDisjointFrom:n})},5876:(t,e,i)=>{var s=i(6518),n=i(3838);s({target:"Set",proto:!0,real:!0,forced:!i(4916)("isSubsetOf")},{isSubsetOf:n})},2475:(t,e,i)=>{var s=i(6518),n=i(8527);s({target:"Set",proto:!0,real:!0,forced:!i(4916)("isSupersetOf")},{isSupersetOf:n})},5024:(t,e,i)=>{var s=i(6518),n=i(3650);s({target:"Set",proto:!0,real:!0,forced:!i(4916)("symmetricDifference")},{symmetricDifference:n})},1698:(t,e,i)=>{var s=i(6518),n=i(4204);s({target:"Set",proto:!0,real:!0,forced:!i(4916)("union")},{union:n})},7467:(t,e,i)=>{var s=i(7628),n=i(4644),r=n.aTypedArray,a=n.exportTypedArrayMethod,o=n.getTypedArrayConstructor;a("toReversed",(function(){return s(r(this),o(this))}))},4732:(t,e,i)=>{var s=i(4644),n=i(9504),r=i(9306),a=i(5370),o=s.aTypedArray,h=s.getTypedArrayConstructor,l=s.exportTypedArrayMethod,c=n(s.TypedArrayPrototype.sort);l("toSorted",(function(t){void 0!==t&&r(t);var e=o(this),i=a(h(e),e);return c(i,t)}))},9577:(t,e,i)=>{var s=i(9928),n=i(4644),r=i(1108),a=i(1291),o=i(5854),h=n.aTypedArray,l=n.getTypedArrayConstructor,c=n.exportTypedArrayMethod,d=!!function(){try{new Int8Array(1).with(2,{valueOf:function(){throw 8}})}catch(t){return 8===t}}();c("with",{with:function(t,e){var i=h(this),n=a(t),c=r(i)?o(e):+e;return s(i,l(i),n,c)}}.with,!d)},8992:(t,e,i)=>{var s=i(6518),n=i(4576),r=i(679),a=i(8551),o=i(4901),h=i(2787),l=i(2106),c=i(4659),d=i(9039),u=i(9297),p=i(8227),g=i(7657).IteratorPrototype,f=i(3724),m=i(6395),b="constructor",v="Iterator",y=p("toStringTag"),A=TypeError,w=n[v],x=m||!o(w)||w.prototype!==g||!d((function(){w({})})),_=function(){if(r(this,g),h(this)===g)throw new A("Abstract class Iterator not directly constructable")},E=function(t,e){f?l(g,t,{configurable:!0,get:function(){return e},set:function(e){if(a(this),this===g)throw new A("You can't redefine this property");u(this,t)?this[t]=e:c(this,t,e)}}):g[t]=e};u(g,y)||E(y,v),!x&&u(g,b)&&g[b]!==Object||E(b,_),_.prototype=g,s({global:!0,constructor:!0,forced:x},{Iterator:_})},4743:(t,e,i)=>{var s=i(6518),n=i(9565),r=i(8551),a=i(1767),o=i(4149),h=i(9590),l=i(9462),c=i(6395),d=l((function(){for(var t,e=this.iterator,i=this.next;this.remaining;)if(this.remaining--,t=r(n(i,e)),this.done=!!t.done)return;if(t=r(n(i,e)),!(this.done=!!t.done))return t.value}));s({target:"Iterator",proto:!0,real:!0,forced:c},{drop:function(t){r(this);var e=h(o(+t));return new d(a(this),{remaining:e})}})},3215:(t,e,i)=>{var s=i(6518),n=i(2652),r=i(9306),a=i(8551),o=i(1767);s({target:"Iterator",proto:!0,real:!0},{every:function(t){a(this),r(t);var e=o(this),i=0;return!n(e,(function(e,s){if(!t(e,i++))return s()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},4520:(t,e,i)=>{var s=i(6518),n=i(9565),r=i(9306),a=i(8551),o=i(1767),h=i(9462),l=i(6319),c=i(6395),d=h((function(){for(var t,e,i=this.iterator,s=this.predicate,r=this.next;;){if(t=a(n(r,i)),this.done=!!t.done)return;if(e=t.value,l(i,s,[e,this.counter++],!0))return e}}));s({target:"Iterator",proto:!0,real:!0,forced:c},{filter:function(t){return a(this),r(t),new d(o(this),{predicate:t})}})},670:(t,e,i)=>{var s=i(6518),n=i(9565),r=i(9306),a=i(8551),o=i(1767),h=i(8646),l=i(9462),c=i(9539),d=i(6395),u=l((function(){for(var t,e,i=this.iterator,s=this.mapper;;){if(e=this.inner)try{if(!(t=a(n(e.next,e.iterator))).done)return t.value;this.inner=null}catch(t){c(i,"throw",t)}if(t=a(n(this.next,i)),this.done=!!t.done)return;try{this.inner=h(s(t.value,this.counter++),!1)}catch(t){c(i,"throw",t)}}}));s({target:"Iterator",proto:!0,real:!0,forced:d},{flatMap:function(t){return a(this),r(t),new u(o(this),{mapper:t,inner:null})}})},1454:(t,e,i)=>{var s=i(6518),n=i(713);s({target:"Iterator",proto:!0,real:!0,forced:i(6395)},{map:n})},7550:(t,e,i)=>{var s=i(6518),n=i(2652),r=i(9306),a=i(8551),o=i(1767);s({target:"Iterator",proto:!0,real:!0},{some:function(t){a(this),r(t);var e=o(this),i=0;return n(e,(function(e,s){if(t(e,i++))return s()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},8335:(t,e,i)=>{var s=i(6518),n=i(3724),r=i(4576),a=i(7751),o=i(9504),h=i(9565),l=i(4901),c=i(34),d=i(4376),u=i(9297),p=i(655),g=i(6198),f=i(4659),m=i(9039),b=i(8235),v=i(4495),y=r.JSON,A=r.Number,w=r.SyntaxError,x=y&&y.parse,_=a("Object","keys"),E=Object.getOwnPropertyDescriptor,C=o("".charAt),S=o("".slice),T=o(/./.exec),M=o([].push),k=/^\d$/,I=/^[1-9]$/,R=/^[\d-]$/,P=/^[\t\n\r ]$/,D=function(t,e,i,s){var n,r,a,o,l,p=t[e],f=s&&p===s.value,m=f&&"string"==typeof s.source?{source:s.source}:{};if(c(p)){var b=d(p),v=f?s.nodes:b?[]:{};if(b)for(n=v.length,a=g(p),o=0;o<a;o++)L(p,o,D(p,""+o,i,o<n?v[o]:void 0));else for(r=_(p),a=g(r),o=0;o<a;o++)l=r[o],L(p,l,D(p,l,i,u(v,l)?v[l]:void 0))}return h(i,t,e,p,m)},L=function(t,e,i){if(n){var s=E(t,e);if(s&&!s.configurable)return}void 0===i?delete t[e]:f(t,e,i)},F=function(t,e,i,s){this.value=t,this.end=e,this.source=i,this.nodes=s},O=function(t,e){this.source=t,this.index=e};O.prototype={fork:function(t){return new O(this.source,t)},parse:function(){var t=this.source,e=this.skip(P,this.index),i=this.fork(e),s=C(t,e);if(T(R,s))return i.number();switch(s){case"{":return i.object();case"[":return i.array();case'"':return i.string();case"t":return i.keyword(!0);case"f":return i.keyword(!1);case"n":return i.keyword(null)}throw new w('Unexpected character: "'+s+'" at: '+e)},node:function(t,e,i,s,n){return new F(e,s,t?null:S(this.source,i,s),n)},object:function(){for(var t=this.source,e=this.index+1,i=!1,s={},n={};e<t.length;){if(e=this.until(['"',"}"],e),"}"===C(t,e)&&!i){e++;break}var r=this.fork(e).string(),a=r.value;e=r.end,e=this.until([":"],e)+1,e=this.skip(P,e),r=this.fork(e).parse(),f(n,a,r),f(s,a,r.value),e=this.until([",","}"],r.end);var o=C(t,e);if(","===o)i=!0,e++;else if("}"===o){e++;break}}return this.node(1,s,this.index,e,n)},array:function(){for(var t=this.source,e=this.index+1,i=!1,s=[],n=[];e<t.length;){if(e=this.skip(P,e),"]"===C(t,e)&&!i){e++;break}var r=this.fork(e).parse();if(M(n,r),M(s,r.value),e=this.until([",","]"],r.end),","===C(t,e))i=!0,e++;else if("]"===C(t,e)){e++;break}}return this.node(1,s,this.index,e,n)},string:function(){var t=this.index,e=b(this.source,this.index+1);return this.node(0,e.value,t,e.end)},number:function(){var t=this.source,e=this.index,i=e;if("-"===C(t,i)&&i++,"0"===C(t,i))i++;else{if(!T(I,C(t,i)))throw new w("Failed to parse number at: "+i);i=this.skip(k,i+1)}if(!("."===C(t,i)&&(i=this.skip(k,i+1)),"e"!==C(t,i)&&"E"!==C(t,i)||(i++,"+"!==C(t,i)&&"-"!==C(t,i)||i++,i!==(i=this.skip(k,i)))))throw new w("Failed to parse number's exponent value at: "+i);return this.node(0,A(S(t,e,i)),e,i)},keyword:function(t){var e=""+t,i=this.index,s=i+e.length;if(S(this.source,i,s)!==e)throw new w("Failed to parse value at: "+i);return this.node(0,t,i,s)},skip:function(t,e){for(var i=this.source;e<i.length&&T(t,C(i,e));e++);return e},until:function(t,e){e=this.skip(P,e);for(var i=C(this.source,e),s=0;s<t.length;s++)if(t[s]===i)return e;throw new w('Unexpected character: "'+i+'" at: '+e)}};var N=m((function(){var t,e="9007199254740993";return x(e,(function(e,i,s){t=s.source})),t!==e})),B=v&&!m((function(){return 1/x("-0 \t")!=-1/0}));s({target:"JSON",stat:!0,forced:N},{parse:function(t,e){return B&&!l(e)?x(t):function(t,e){t=p(t);var i=new O(t,0,""),s=i.parse(),n=s.value,r=i.skip(P,s.end);if(r<t.length)throw new w('Unexpected extra character: "'+C(t,r)+'" after the parsed data at: '+r);return l(e)?D({"":n},"",e,s):n}(t,e)}})},4979:(t,e,i)=>{var s=i(6518),n=i(4576),r=i(7751),a=i(6980),o=i(4913).f,h=i(9297),l=i(679),c=i(3167),d=i(2603),u=i(5002),p=i(8574),g=i(3724),f=i(6395),m="DOMException",b=r("Error"),v=r(m),y=function(){l(this,A);var t=arguments.length,e=d(t<1?void 0:arguments[0]),i=d(t<2?void 0:arguments[1],"Error"),s=new v(e,i),n=new b(e);return n.name=m,o(s,"stack",a(1,p(n.stack,1))),c(s,this,y),s},A=y.prototype=v.prototype,w="stack"in new b(m),x="stack"in new v(1,2),_=v&&g&&Object.getOwnPropertyDescriptor(n,m),E=!(!_||_.writable&&_.configurable),C=w&&!E&&!x;s({global:!0,constructor:!0,forced:f||C},{DOMException:C?y:v});var S=r(m),T=S.prototype;if(T.constructor!==S)for(var M in f||o(T,"constructor",a(1,S)),u)if(h(u,M)){var k=u[M],I=k.s;h(S,I)||o(S,I,a(6,k.c))}},4603:(t,e,i)=>{var s=i(6840),n=i(9504),r=i(655),a=i(2812),o=URLSearchParams,h=o.prototype,l=n(h.append),c=n(h.delete),d=n(h.forEach),u=n([].push),p=new o("a=1&a=2&b=3");p.delete("a",1),p.delete("b",void 0),p+""!="a=2"&&s(h,"delete",(function(t){var e=arguments.length,i=e<2?void 0:arguments[1];if(e&&void 0===i)return c(this,t);var s=[];d(this,(function(t,e){u(s,{key:e,value:t})})),a(e,1);for(var n,o=r(t),h=r(i),p=0,g=0,f=!1,m=s.length;p<m;)n=s[p++],f||n.key===o?(f=!0,c(this,n.key)):g++;for(;g<m;)(n=s[g++]).key===o&&n.value===h||l(this,n.key,n.value)}),{enumerable:!0,unsafe:!0})},7566:(t,e,i)=>{var s=i(6840),n=i(9504),r=i(655),a=i(2812),o=URLSearchParams,h=o.prototype,l=n(h.getAll),c=n(h.has),d=new o("a=1");!d.has("a",2)&&d.has("a",void 0)||s(h,"has",(function(t){var e=arguments.length,i=e<2?void 0:arguments[1];if(e&&void 0===i)return c(this,t);var s=l(this,t);a(e,1);for(var n=r(i),o=0;o<s.length;)if(s[o++]===n)return!0;return!1}),{enumerable:!0,unsafe:!0})},8721:(t,e,i)=>{var s=i(3724),n=i(9504),r=i(2106),a=URLSearchParams.prototype,o=n(a.forEach);s&&!("size"in a)&&r(a,"size",{get:function(){var t=0;return o(this,(function(){t++})),t},configurable:!0,enumerable:!0})}},e={};function i(s){var n=e[s];if(void 0!==n)return n.exports;var r=e[s]={exports:{}};return t[s].call(r.exports,r,r.exports,i),r.exports}i.d=(t,e)=>{for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var s=globalThis.pdfjsLib={};i.d(s,{AbortException:()=>D,AnnotationEditorLayer:()=>cs,AnnotationEditorParamsType:()=>c,AnnotationEditorType:()=>l,AnnotationEditorUIManager:()=>Tt,AnnotationLayer:()=>Ji,AnnotationMode:()=>h,CMapCompressionType:()=>g,ColorPicker:()=>as,DOMSVGFactory:()=>tt,DrawLayer:()=>ds,FeatureTest:()=>N,GlobalWorkerOptions:()=>me,ImageKind:()=>u,InvalidPDFException:()=>k,MissingPDFException:()=>I,OPS:()=>f,OutputScale:()=>vt,PDFDataRangeTransport:()=>ai,PDFDateString:()=>ut,PDFWorker:()=>ci,PasswordResponses:()=>m,PermissionFlag:()=>d,PixelsPerInch:()=>Y,RenderingCancelledException:()=>it,TextLayer:()=>Ye,UnexpectedResponseException:()=>R,Util:()=>z,VerbosityLevel:()=>p,XfaLayer:()=>wi,build:()=>bi,createValidAbsoluteUrl:()=>E,fetchData:()=>Q,getDocument:()=>si,getFilenameFromUrl:()=>rt,getPdfFilenameFromUrl:()=>at,getXfaPageViewport:()=>pt,isDataScheme:()=>st,isPdfFile:()=>nt,noContextMenu:()=>lt,normalizeUnicode:()=>U,setLayerDimensions:()=>bt,shadow:()=>C,version:()=>mi}),i(4114),i(6573),i(8100),i(7936),i(7467),i(4732),i(9577),i(4603),i(7566),i(8721);const n=!("object"!=typeof process||process+""!="[object process]"||process.versions.nw||process.versions.electron&&process.type&&"browser"!==process.type),r=[1,0,0,1,0,0],a=[.001,0,0,.001,0,0],o=1.35,h={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3},l={DISABLE:-1,NONE:0,FREETEXT:3,HIGHLIGHT:9,STAMP:13,INK:15},c={RESIZE:1,CREATE:2,FREETEXT_SIZE:11,FREETEXT_COLOR:12,FREETEXT_OPACITY:13,INK_COLOR:21,INK_THICKNESS:22,INK_OPACITY:23,HIGHLIGHT_COLOR:31,HIGHLIGHT_DEFAULT_COLOR:32,HIGHLIGHT_THICKNESS:33,HIGHLIGHT_FREE:34,HIGHLIGHT_SHOW_ALL:35},d={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048},u={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},p={ERRORS:0,WARNINGS:1,INFOS:5},g={NONE:0,BINARY:1},f={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91,setStrokeTransparent:92,setFillTransparent:93},m={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let b=p.WARNINGS;function v(t){Number.isInteger(t)&&(b=t)}function y(){return b}function A(t){b>=p.INFOS&&console.log(`Info: ${t}`)}function w(t){b>=p.WARNINGS&&console.log(`Warning: ${t}`)}function x(t){throw new Error(t)}function _(t,e){t||x(e)}function E(t,e=null,i=null){if(!t)return null;try{if(i&&"string"==typeof t){if(i.addDefaultProtocol&&t.startsWith("www.")){const e=t.match(/\./g);e?.length>=2&&(t=`http://${t}`)}if(i.tryConvertEncoding)try{t=decodeURIComponent(escape(t))}catch{}}const s=e?new URL(t,e):new URL(t);if(function(t){switch(t?.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}(s))return s}catch{}return null}function C(t,e,i,s=!1){return Object.defineProperty(t,e,{value:i,enumerable:!s,configurable:!0,writable:!1}),i}const S=function(){function t(t,e){this.message=t,this.name=e}return t.prototype=new Error,t.constructor=t,t}();class T extends S{constructor(t,e){super(t,"PasswordException"),this.code=e}}class M extends S{constructor(t,e){super(t,"UnknownErrorException"),this.details=e}}class k extends S{constructor(t){super(t,"InvalidPDFException")}}class I extends S{constructor(t){super(t,"MissingPDFException")}}class R extends S{constructor(t,e){super(t,"UnexpectedResponseException"),this.status=e}}class P extends S{constructor(t){super(t,"FormatError")}}class D extends S{constructor(t){super(t,"AbortException")}}function L(t){"object"==typeof t&&void 0!==t?.length||x("Invalid argument for bytesToString");const e=t.length,i=8192;if(e<i)return String.fromCharCode.apply(null,t);const s=[];for(let n=0;n<e;n+=i){const r=Math.min(n+i,e),a=t.subarray(n,r);s.push(String.fromCharCode.apply(null,a))}return s.join("")}function F(t){"string"!=typeof t&&x("Invalid argument for stringToBytes");const e=t.length,i=new Uint8Array(e);for(let s=0;s<e;++s)i[s]=255&t.charCodeAt(s);return i}function O(t){const e=Object.create(null);for(const[i,s]of t)e[i]=s;return e}class N{static get isLittleEndian(){return C(this,"isLittleEndian",function(){const t=new Uint8Array(4);return t[0]=1,1===new Uint32Array(t.buffer,0,1)[0]}())}static get isEvalSupported(){return C(this,"isEvalSupported",function(){try{return new Function(""),!0}catch{return!1}}())}static get isOffscreenCanvasSupported(){return C(this,"isOffscreenCanvasSupported","undefined"!=typeof OffscreenCanvas)}static get platform(){return"undefined"!=typeof navigator&&"string"==typeof navigator?.platform?C(this,"platform",{isMac:navigator.platform.includes("Mac"),isWindows:navigator.platform.includes("Win"),isFirefox:"string"==typeof navigator?.userAgent&&navigator.userAgent.includes("Firefox")}):C(this,"platform",{isMac:!1,isWindows:!1,isFirefox:!1})}static get isCSSRoundSupported(){return C(this,"isCSSRoundSupported",globalThis.CSS?.supports?.("width: round(1.5px, 1px)"))}}const B=Array.from(Array(256).keys(),(t=>t.toString(16).padStart(2,"0")));class z{static makeHexColor(t,e,i){return`#${B[t]}${B[e]}${B[i]}`}static scaleMinMax(t,e){let i;t[0]?(t[0]<0&&(i=e[0],e[0]=e[2],e[2]=i),e[0]*=t[0],e[2]*=t[0],t[3]<0&&(i=e[1],e[1]=e[3],e[3]=i),e[1]*=t[3],e[3]*=t[3]):(i=e[0],e[0]=e[1],e[1]=i,i=e[2],e[2]=e[3],e[3]=i,t[1]<0&&(i=e[1],e[1]=e[3],e[3]=i),e[1]*=t[1],e[3]*=t[1],t[2]<0&&(i=e[0],e[0]=e[2],e[2]=i),e[0]*=t[2],e[2]*=t[2]),e[0]+=t[4],e[1]+=t[5],e[2]+=t[4],e[3]+=t[5]}static transform(t,e){return[t[0]*e[0]+t[2]*e[1],t[1]*e[0]+t[3]*e[1],t[0]*e[2]+t[2]*e[3],t[1]*e[2]+t[3]*e[3],t[0]*e[4]+t[2]*e[5]+t[4],t[1]*e[4]+t[3]*e[5]+t[5]]}static applyTransform(t,e){return[t[0]*e[0]+t[1]*e[2]+e[4],t[0]*e[1]+t[1]*e[3]+e[5]]}static applyInverseTransform(t,e){const i=e[0]*e[3]-e[1]*e[2];return[(t[0]*e[3]-t[1]*e[2]+e[2]*e[5]-e[4]*e[3])/i,(-t[0]*e[1]+t[1]*e[0]+e[4]*e[1]-e[5]*e[0])/i]}static getAxialAlignedBoundingBox(t,e){const i=this.applyTransform(t,e),s=this.applyTransform(t.slice(2,4),e),n=this.applyTransform([t[0],t[3]],e),r=this.applyTransform([t[2],t[1]],e);return[Math.min(i[0],s[0],n[0],r[0]),Math.min(i[1],s[1],n[1],r[1]),Math.max(i[0],s[0],n[0],r[0]),Math.max(i[1],s[1],n[1],r[1])]}static inverseTransform(t){const e=t[0]*t[3]-t[1]*t[2];return[t[3]/e,-t[1]/e,-t[2]/e,t[0]/e,(t[2]*t[5]-t[4]*t[3])/e,(t[4]*t[1]-t[5]*t[0])/e]}static singularValueDecompose2dScale(t){const e=[t[0],t[2],t[1],t[3]],i=t[0]*e[0]+t[1]*e[2],s=t[0]*e[1]+t[1]*e[3],n=t[2]*e[0]+t[3]*e[2],r=t[2]*e[1]+t[3]*e[3],a=(i+r)/2,o=Math.sqrt((i+r)**2-4*(i*r-n*s))/2,h=a+o||1,l=a-o||1;return[Math.sqrt(h),Math.sqrt(l)]}static normalizeRect(t){const e=t.slice(0);return t[0]>t[2]&&(e[0]=t[2],e[2]=t[0]),t[1]>t[3]&&(e[1]=t[3],e[3]=t[1]),e}static intersect(t,e){const i=Math.max(Math.min(t[0],t[2]),Math.min(e[0],e[2])),s=Math.min(Math.max(t[0],t[2]),Math.max(e[0],e[2]));if(i>s)return null;const n=Math.max(Math.min(t[1],t[3]),Math.min(e[1],e[3])),r=Math.min(Math.max(t[1],t[3]),Math.max(e[1],e[3]));return n>r?null:[i,n,s,r]}static#t(t,e,i,s,n,r,a,o,h,l){if(h<=0||h>=1)return;const c=1-h,d=h*h,u=d*h,p=c*(c*(c*t+3*h*e)+3*d*i)+u*s,g=c*(c*(c*n+3*h*r)+3*d*a)+u*o;l[0]=Math.min(l[0],p),l[1]=Math.min(l[1],g),l[2]=Math.max(l[2],p),l[3]=Math.max(l[3],g)}static#e(t,e,i,s,n,r,a,o,h,l,c,d){if(Math.abs(h)<1e-12)return void(Math.abs(l)>=1e-12&&this.#t(t,e,i,s,n,r,a,o,-c/l,d));const u=l**2-4*c*h;if(u<0)return;const p=Math.sqrt(u),g=2*h;this.#t(t,e,i,s,n,r,a,o,(-l+p)/g,d),this.#t(t,e,i,s,n,r,a,o,(-l-p)/g,d)}static bezierBoundingBox(t,e,i,s,n,r,a,o,h){return h?(h[0]=Math.min(h[0],t,a),h[1]=Math.min(h[1],e,o),h[2]=Math.max(h[2],t,a),h[3]=Math.max(h[3],e,o)):h=[Math.min(t,a),Math.min(e,o),Math.max(t,a),Math.max(e,o)],this.#e(t,i,n,a,e,s,r,o,3*(3*(i-n)-t+a),6*(t-2*i+n),3*(i-t),h),this.#e(t,i,n,a,e,s,r,o,3*(3*(s-r)-e+o),6*(e-2*s+r),3*(s-e),h),h}}let H=null,j=null;function U(t){return H||(H=/([\u00a0\u00b5\u037e\u0eb3\u2000-\u200a\u202f\u2126\ufb00-\ufb04\ufb06\ufb20-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufba1\ufba4-\ufba9\ufbae-\ufbb1\ufbd3-\ufbdc\ufbde-\ufbe7\ufbea-\ufbf8\ufbfc-\ufbfd\ufc00-\ufc5d\ufc64-\ufcf1\ufcf5-\ufd3d\ufd88\ufdf4\ufdfa-\ufdfb\ufe71\ufe77\ufe79\ufe7b\ufe7d]+)|(\ufb05+)/gu,j=new Map([["ﬅ","ſt"]])),t.replaceAll(H,((t,e,i)=>e?e.normalize("NFKC"):j.get(i)))}const $="pdfjs_internal_id_";i(4628),i(7642),i(8004),i(3853),i(5876),i(2475),i(5024),i(1698),i(1454),i(4979),i(8992),i(4743),i(3215),i(7550),i(8335),i(4520);class W{addFilter(t){return"none"}addHCMFilter(t,e){return"none"}addAlphaFilter(t){return"none"}addLuminosityFilter(t){return"none"}addHighlightHCMFilter(t,e,i,s,n){return"none"}destroy(t=!1){}}class G{#i=!1;constructor({enableHWA:t=!1}){this.#i=t}create(t,e){if(t<=0||e<=0)throw new Error("Invalid canvas size");const i=this._createCanvas(t,e);return{canvas:i,context:i.getContext("2d",{willReadFrequently:!this.#i})}}reset(t,e,i){if(!t.canvas)throw new Error("Canvas is not specified");if(e<=0||i<=0)throw new Error("Invalid canvas size");t.canvas.width=e,t.canvas.height=i}destroy(t){if(!t.canvas)throw new Error("Canvas is not specified");t.canvas.width=0,t.canvas.height=0,t.canvas=null,t.context=null}_createCanvas(t,e){x("Abstract method `_createCanvas` called.")}}class V{constructor({baseUrl:t=null,isCompressed:e=!0}){this.baseUrl=t,this.isCompressed=e}async fetch({name:t}){if(!this.baseUrl)throw new Error("Ensure that the `cMapUrl` and `cMapPacked` API parameters are provided.");if(!t)throw new Error("CMap name must be specified.");const e=this.baseUrl+t+(this.isCompressed?".bcmap":""),i=this.isCompressed?g.BINARY:g.NONE;return this._fetchData(e,i).catch((t=>{throw new Error(`Unable to load ${this.isCompressed?"binary ":""}CMap at: ${e}`)}))}_fetchData(t,e){x("Abstract method `_fetchData` called.")}}class q{constructor({baseUrl:t=null}){this.baseUrl=t}async fetch({filename:t}){if(!this.baseUrl)throw new Error("Ensure that the `standardFontDataUrl` API parameter is provided.");if(!t)throw new Error("Font filename must be specified.");const e=`${this.baseUrl}${t}`;return this._fetchData(e).catch((t=>{throw new Error(`Unable to load font data at: ${e}`)}))}_fetchData(t){x("Abstract method `_fetchData` called.")}}class X{create(t,e,i=!1){if(t<=0||e<=0)throw new Error("Invalid SVG dimensions");const s=this._createSVG("svg:svg");return s.setAttribute("version","1.1"),i||(s.setAttribute("width",`${t}px`),s.setAttribute("height",`${e}px`)),s.setAttribute("preserveAspectRatio","none"),s.setAttribute("viewBox",`0 0 ${t} ${e}`),s}createElement(t){if("string"!=typeof t)throw new Error("Invalid SVG element type");return this._createSVG(t)}_createSVG(t){x("Abstract method `_createSVG` called.")}}const K="http://www.w3.org/2000/svg";class Y{static CSS=96;static PDF=72;static PDF_TO_CSS_UNITS=this.CSS/this.PDF}async function Q(t,e="text"){if(ht(t,document.baseURI)){const i=await fetch(t);if(!i.ok)throw new Error(i.statusText);switch(e){case"arraybuffer":return i.arrayBuffer();case"blob":return i.blob();case"json":return i.json()}return i.text()}return new Promise(((i,s)=>{const n=new XMLHttpRequest;n.open("GET",t,!0),n.responseType=e,n.onreadystatechange=()=>{if(n.readyState===XMLHttpRequest.DONE)if(200!==n.status&&0!==n.status)s(new Error(n.statusText));else{switch(e){case"arraybuffer":case"blob":case"json":return void i(n.response)}i(n.responseText)}},n.send(null)}))}class J extends V{_fetchData(t,e){return Q(t,this.isCompressed?"arraybuffer":"text").then((t=>({cMapData:t instanceof ArrayBuffer?new Uint8Array(t):F(t),compressionType:e})))}}class Z extends q{_fetchData(t){return Q(t,"arraybuffer").then((t=>new Uint8Array(t)))}}class tt extends X{_createSVG(t){return document.createElementNS(K,t)}}class et{constructor({viewBox:t,scale:e,rotation:i,offsetX:s=0,offsetY:n=0,dontFlip:r=!1}){this.viewBox=t,this.scale=e,this.rotation=i,this.offsetX=s,this.offsetY=n;const a=(t[2]+t[0])/2,o=(t[3]+t[1])/2;let h,l,c,d,u,p,g,f;switch((i%=360)<0&&(i+=360),i){case 180:h=-1,l=0,c=0,d=1;break;case 90:h=0,l=1,c=1,d=0;break;case 270:h=0,l=-1,c=-1,d=0;break;case 0:h=1,l=0,c=0,d=-1;break;default:throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.")}r&&(c=-c,d=-d),0===h?(u=Math.abs(o-t[1])*e+s,p=Math.abs(a-t[0])*e+n,g=(t[3]-t[1])*e,f=(t[2]-t[0])*e):(u=Math.abs(a-t[0])*e+s,p=Math.abs(o-t[1])*e+n,g=(t[2]-t[0])*e,f=(t[3]-t[1])*e),this.transform=[h*e,l*e,c*e,d*e,u-h*e*a-c*e*o,p-l*e*a-d*e*o],this.width=g,this.height=f}get rawDims(){const{viewBox:t}=this;return C(this,"rawDims",{pageWidth:t[2]-t[0],pageHeight:t[3]-t[1],pageX:t[0],pageY:t[1]})}clone({scale:t=this.scale,rotation:e=this.rotation,offsetX:i=this.offsetX,offsetY:s=this.offsetY,dontFlip:n=!1}={}){return new et({viewBox:this.viewBox.slice(),scale:t,rotation:e,offsetX:i,offsetY:s,dontFlip:n})}convertToViewportPoint(t,e){return z.applyTransform([t,e],this.transform)}convertToViewportRectangle(t){const e=z.applyTransform([t[0],t[1]],this.transform),i=z.applyTransform([t[2],t[3]],this.transform);return[e[0],e[1],i[0],i[1]]}convertToPdfPoint(t,e){return z.applyInverseTransform([t,e],this.transform)}}class it extends S{constructor(t,e=0){super(t,"RenderingCancelledException"),this.extraDelay=e}}function st(t){const e=t.length;let i=0;for(;i<e&&""===t[i].trim();)i++;return"data:"===t.substring(i,i+5).toLowerCase()}function nt(t){return"string"==typeof t&&/\.pdf$/i.test(t)}function rt(t){return[t]=t.split(/[#?]/,1),t.substring(t.lastIndexOf("/")+1)}function at(t,e="document.pdf"){if("string"!=typeof t)return e;if(st(t))return w('getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.'),e;const i=/[^/?#=]+\.pdf\b(?!.*\.pdf\b)/i,s=/^(?:(?:[^:]+:)?\/\/[^/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/.exec(t);let n=i.exec(s[1])||i.exec(s[2])||i.exec(s[3]);if(n&&(n=n[0],n.includes("%")))try{n=i.exec(decodeURIComponent(n))[0]}catch{}return n||e}class ot{started=Object.create(null);times=[];time(t){t in this.started&&w(`Timer is already running for ${t}`),this.started[t]=Date.now()}timeEnd(t){t in this.started||w(`Timer has not been started for ${t}`),this.times.push({name:t,start:this.started[t],end:Date.now()}),delete this.started[t]}toString(){const t=[];let e=0;for(const{name:t}of this.times)e=Math.max(t.length,e);for(const{name:i,start:s,end:n}of this.times)t.push(`${i.padEnd(e)} ${n-s}ms\n`);return t.join("")}}function ht(t,e){try{const{protocol:i}=e?new URL(t,e):new URL(t);return"http:"===i||"https:"===i}catch{return!1}}function lt(t){t.preventDefault()}function ct(t){console.log("Deprecated API usage: "+t)}let dt;class ut{static toDateObject(t){if(!t||"string"!=typeof t)return null;dt||=new RegExp("^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?");const e=dt.exec(t);if(!e)return null;const i=parseInt(e[1],10);let s=parseInt(e[2],10);s=s>=1&&s<=12?s-1:0;let n=parseInt(e[3],10);n=n>=1&&n<=31?n:1;let r=parseInt(e[4],10);r=r>=0&&r<=23?r:0;let a=parseInt(e[5],10);a=a>=0&&a<=59?a:0;let o=parseInt(e[6],10);o=o>=0&&o<=59?o:0;const h=e[7]||"Z";let l=parseInt(e[8],10);l=l>=0&&l<=23?l:0;let c=parseInt(e[9],10)||0;return c=c>=0&&c<=59?c:0,"-"===h?(r+=l,a+=c):"+"===h&&(r-=l,a-=c),new Date(Date.UTC(i,s,n,r,a,o))}}function pt(t,{scale:e=1,rotation:i=0}){const{width:s,height:n}=t.attributes.style,r=[0,0,parseInt(s),parseInt(n)];return new et({viewBox:r,scale:e,rotation:i})}function gt(t){if(t.startsWith("#")){const e=parseInt(t.slice(1),16);return[(16711680&e)>>16,(65280&e)>>8,255&e]}return t.startsWith("rgb(")?t.slice(4,-1).split(",").map((t=>parseInt(t))):t.startsWith("rgba(")?t.slice(5,-1).split(",").map((t=>parseInt(t))).slice(0,3):(w(`Not a valid color format: "${t}"`),[0,0,0])}function ft(t){const{a:e,b:i,c:s,d:n,e:r,f:a}=t.getTransform();return[e,i,s,n,r,a]}function mt(t){const{a:e,b:i,c:s,d:n,e:r,f:a}=t.getTransform().invertSelf();return[e,i,s,n,r,a]}function bt(t,e,i=!1,s=!0){if(e instanceof et){const{pageWidth:s,pageHeight:n}=e.rawDims,{style:r}=t,a=N.isCSSRoundSupported,o=`var(--scale-factor) * ${s}px`,h=`var(--scale-factor) * ${n}px`,l=a?`round(down, ${o}, var(--scale-round-x, 1px))`:`calc(${o})`,c=a?`round(down, ${h}, var(--scale-round-y, 1px))`:`calc(${h})`;i&&e.rotation%180!=0?(r.width=c,r.height=l):(r.width=l,r.height=c)}s&&t.setAttribute("data-main-rotation",e.rotation)}class vt{constructor(){const t=window.devicePixelRatio||1;this.sx=t,this.sy=t}get scaled(){return 1!==this.sx||1!==this.sy}get symmetric(){return this.sx===this.sy}}class yt{#s=null;#n=null;#r;#a=null;#o=null;static#h=null;constructor(t){this.#r=t,yt.#h||=Object.freeze({freetext:"pdfjs-editor-remove-freetext-button",highlight:"pdfjs-editor-remove-highlight-button",ink:"pdfjs-editor-remove-ink-button",stamp:"pdfjs-editor-remove-stamp-button"})}render(){const t=this.#s=document.createElement("div");t.classList.add("editToolbar","hidden"),t.setAttribute("role","toolbar");const e=this.#r._uiManager._signal;t.addEventListener("contextmenu",lt,{signal:e}),t.addEventListener("pointerdown",yt.#l,{signal:e});const i=this.#a=document.createElement("div");i.className="buttons",t.append(i);const s=this.#r.toolbarPosition;if(s){const{style:e}=t,i="ltr"===this.#r._uiManager.direction?1-s[0]:s[0];e.insetInlineEnd=100*i+"%",e.top=`calc(${100*s[1]}% + var(--editor-toolbar-vert-offset))`}return this.#c(),t}get div(){return this.#s}static#l(t){t.stopPropagation()}#d(t){this.#r._focusEventsAllowed=!1,t.preventDefault(),t.stopPropagation()}#u(t){this.#r._focusEventsAllowed=!0,t.preventDefault(),t.stopPropagation()}#p(t){const e=this.#r._uiManager._signal;t.addEventListener("focusin",this.#d.bind(this),{capture:!0,signal:e}),t.addEventListener("focusout",this.#u.bind(this),{capture:!0,signal:e}),t.addEventListener("contextmenu",lt,{signal:e})}hide(){this.#s.classList.add("hidden"),this.#n?.hideDropdown()}show(){this.#s.classList.remove("hidden"),this.#o?.shown()}#c(){const{editorType:t,_uiManager:e}=this.#r,i=document.createElement("button");i.className="delete",i.tabIndex=0,i.setAttribute("data-l10n-id",yt.#h[t]),this.#p(i),i.addEventListener("click",(t=>{e.delete()}),{signal:e._signal}),this.#a.append(i)}get#g(){const t=document.createElement("div");return t.className="divider",t}async addAltText(t){const e=await t.render();this.#p(e),this.#a.prepend(e,this.#g),this.#o=t}addColorPicker(t){this.#n=t;const e=t.renderButton();this.#p(e),this.#a.prepend(e,this.#g)}remove(){this.#s.remove(),this.#n?.destroy(),this.#n=null}}class At{#a=null;#s=null;#f;constructor(t){this.#f=t}#m(){const t=this.#s=document.createElement("div");t.className="editToolbar",t.setAttribute("role","toolbar"),t.addEventListener("contextmenu",lt,{signal:this.#f._signal});const e=this.#a=document.createElement("div");return e.className="buttons",t.append(e),this.#b(),t}#v(t,e){let i=0,s=0;for(const n of t){const t=n.y+n.height;if(t<i)continue;const r=n.x+(e?n.width:0);t>i?(s=r,i=t):e?r>s&&(s=r):r<s&&(s=r)}return[e?1-s:s,i]}show(t,e,i){const[s,n]=this.#v(e,i),{style:r}=this.#s||=this.#m();t.append(this.#s),r.insetInlineEnd=100*s+"%",r.top=`calc(${100*n}% + var(--editor-toolbar-vert-offset))`}hide(){this.#s.remove()}#b(){const t=document.createElement("button");t.className="highlightButton",t.tabIndex=0,t.setAttribute("data-l10n-id","pdfjs-highlight-floating-button1");const e=document.createElement("span");t.append(e),e.className="visuallyHidden",e.setAttribute("data-l10n-id","pdfjs-highlight-floating-button-label");const i=this.#f._signal;t.addEventListener("contextmenu",lt,{signal:i}),t.addEventListener("click",(()=>{this.#f.highlightSelection("floating_button")}),{signal:i}),this.#a.append(t)}}function wt(t,e,i){for(const s of i)e.addEventListener(s,t[s].bind(t))}class xt{#y=0;get id(){return"pdfjs_internal_editor_"+this.#y++}}class _t{#A=function(){if("undefined"!=typeof crypto&&"function"==typeof crypto?.randomUUID)return crypto.randomUUID();const t=new Uint8Array(32);if("undefined"!=typeof crypto&&"function"==typeof crypto?.getRandomValues)crypto.getRandomValues(t);else for(let e=0;e<32;e++)t[e]=Math.floor(255*Math.random());return L(t)}();#y=0;#w=null;static get _isSVGFittingCanvas(){const t=new OffscreenCanvas(1,3).getContext("2d",{willReadFrequently:!0}),e=new Image;return e.src='data:image/svg+xml;charset=UTF-8,<svg viewBox="0 0 1 1" width="1" height="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" style="fill:red;"/></svg>',C(this,"_isSVGFittingCanvas",e.decode().then((()=>(t.drawImage(e,0,0,1,1,0,0,1,3),0===new Uint32Array(t.getImageData(0,0,1,1).data.buffer)[0]))))}async#x(t,e){this.#w||=new Map;let i=this.#w.get(t);if(null===i)return null;if(i?.bitmap)return i.refCounter+=1,i;try{let t;if(i||={bitmap:null,id:`image_${this.#A}_${this.#y++}`,refCounter:0,isSvg:!1},"string"==typeof e?(i.url=e,t=await Q(e,"blob")):e instanceof File?t=i.file=e:e instanceof Blob&&(t=e),"image/svg+xml"===t.type){const e=_t._isSVGFittingCanvas,s=new FileReader,n=new Image,r=new Promise(((t,r)=>{n.onload=()=>{i.bitmap=n,i.isSvg=!0,t()},s.onload=async()=>{const t=i.svgUrl=s.result;n.src=await e?`${t}#svgView(preserveAspectRatio(none))`:t},n.onerror=s.onerror=r}));s.readAsDataURL(t),await r}else i.bitmap=await createImageBitmap(t);i.refCounter=1}catch(t){console.error(t),i=null}return this.#w.set(t,i),i&&this.#w.set(i.id,i),i}async getFromFile(t){const{lastModified:e,name:i,size:s,type:n}=t;return this.#x(`${e}_${i}_${s}_${n}`,t)}async getFromUrl(t){return this.#x(t,t)}async getFromBlob(t,e){const i=await e;return this.#x(t,i)}async getFromId(t){this.#w||=new Map;const e=this.#w.get(t);if(!e)return null;if(e.bitmap)return e.refCounter+=1,e;if(e.file)return this.getFromFile(e.file);if(e.blobPromise){const{blobPromise:t}=e;return delete e.blobPromise,this.getFromBlob(e.id,t)}return this.getFromUrl(e.url)}getFromCanvas(t,e){this.#w||=new Map;let i=this.#w.get(t);if(i?.bitmap)return i.refCounter+=1,i;const s=new OffscreenCanvas(e.width,e.height);return s.getContext("2d").drawImage(e,0,0),i={bitmap:s.transferToImageBitmap(),id:`image_${this.#A}_${this.#y++}`,refCounter:1,isSvg:!1},this.#w.set(t,i),this.#w.set(i.id,i),i}getSvgUrl(t){const e=this.#w.get(t);return e?.isSvg?e.svgUrl:null}deleteId(t){this.#w||=new Map;const e=this.#w.get(t);if(!e)return;if(e.refCounter-=1,0!==e.refCounter)return;const{bitmap:i}=e;if(!e.url&&!e.file){const t=new OffscreenCanvas(i.width,i.height);t.getContext("bitmaprenderer").transferFromImageBitmap(i),e.blobPromise=t.convertToBlob()}i.close?.(),e.bitmap=null}isValidId(t){return t.startsWith(`image_${this.#A}_`)}}class Et{#_=[];#E=!1;#C;#S=-1;constructor(t=128){this.#C=t}add({cmd:t,undo:e,post:i,mustExec:s,type:n=NaN,overwriteIfSameType:r=!1,keepUndo:a=!1}){if(s&&t(),this.#E)return;const o={cmd:t,undo:e,post:i,type:n};if(-1===this.#S)return this.#_.length>0&&(this.#_.length=0),this.#S=0,void this.#_.push(o);if(r&&this.#_[this.#S].type===n)return a&&(o.undo=this.#_[this.#S].undo),void(this.#_[this.#S]=o);const h=this.#S+1;h===this.#C?this.#_.splice(0,1):(this.#S=h,h<this.#_.length&&this.#_.splice(h)),this.#_.push(o)}undo(){if(-1===this.#S)return;this.#E=!0;const{undo:t,post:e}=this.#_[this.#S];t(),e?.(),this.#E=!1,this.#S-=1}redo(){if(this.#S<this.#_.length-1){this.#S+=1,this.#E=!0;const{cmd:t,post:e}=this.#_[this.#S];t(),e?.(),this.#E=!1}}hasSomethingToUndo(){return-1!==this.#S}hasSomethingToRedo(){return this.#S<this.#_.length-1}destroy(){this.#_=null}}class Ct{constructor(t){this.buffer=[],this.callbacks=new Map,this.allKeys=new Set;const{isMac:e}=N.platform;for(const[i,s,n={}]of t)for(const t of i){const i=t.startsWith("mac+");e&&i?(this.callbacks.set(t.slice(4),{callback:s,options:n}),this.allKeys.add(t.split("+").at(-1))):e||i||(this.callbacks.set(t,{callback:s,options:n}),this.allKeys.add(t.split("+").at(-1)))}}#T(t){t.altKey&&this.buffer.push("alt"),t.ctrlKey&&this.buffer.push("ctrl"),t.metaKey&&this.buffer.push("meta"),t.shiftKey&&this.buffer.push("shift"),this.buffer.push(t.key);const e=this.buffer.join("+");return this.buffer.length=0,e}exec(t,e){if(!this.allKeys.has(e.key))return;const i=this.callbacks.get(this.#T(e));if(!i)return;const{callback:s,options:{bubbles:n=!1,args:r=[],checker:a=null}}=i;a&&!a(t,e)||(s.bind(t,...r,e)(),n||(e.stopPropagation(),e.preventDefault()))}}class St{static _colorsMapping=new Map([["CanvasText",[0,0,0]],["Canvas",[255,255,255]]]);get _colors(){const t=new Map([["CanvasText",null],["Canvas",null]]);return function(t){const e=document.createElement("span");e.style.visibility="hidden",document.body.append(e);for(const i of t.keys()){e.style.color=i;const s=window.getComputedStyle(e).color;t.set(i,gt(s))}e.remove()}(t),C(this,"_colors",t)}convert(t){const e=gt(t);if(!window.matchMedia("(forced-colors: active)").matches)return e;for(const[t,i]of this._colors)if(i.every(((t,i)=>t===e[i])))return St._colorsMapping.get(t);return e}getHexCode(t){const e=this._colors.get(t);return e?z.makeHexColor(...e):t}}class Tt{#M=new AbortController;#k=null;#I=new Map;#R=new Map;#P=null;#D=null;#L=null;#F=new Et;#O=null;#N=0;#B=new Set;#z=null;#H=null;#j=new Set;#U=!1;#$=!1;#W=!1;#G=null;#V=null;#q=null;#X=null;#K=!1;#Y=null;#Q=new xt;#J=!1;#Z=!1;#tt=null;#et=null;#it=null;#st=null;#nt=l.NONE;#rt=new Set;#at=null;#ot=null;#ht=null;#lt={isEditing:!1,isEmpty:!0,hasSomethingToUndo:!1,hasSomethingToRedo:!1,hasSelectedEditor:!1,hasSelectedText:!1};#ct=[0,0];#dt=null;#ut=null;#pt=null;#gt=null;static TRANSLATE_SMALL=1;static TRANSLATE_BIG=10;static get _keyboardManager(){const t=Tt.prototype,e=t=>t.#ut.contains(document.activeElement)&&"BUTTON"!==document.activeElement.tagName&&t.hasSomethingToControl(),i=(t,{target:e})=>{if(e instanceof HTMLInputElement){const{type:t}=e;return"text"!==t&&"number"!==t}return!0},s=this.TRANSLATE_SMALL,n=this.TRANSLATE_BIG;return C(this,"_keyboardManager",new Ct([[["ctrl+a","mac+meta+a"],t.selectAll,{checker:i}],[["ctrl+z","mac+meta+z"],t.undo,{checker:i}],[["ctrl+y","ctrl+shift+z","mac+meta+shift+z","ctrl+shift+Z","mac+meta+shift+Z"],t.redo,{checker:i}],[["Backspace","alt+Backspace","ctrl+Backspace","shift+Backspace","mac+Backspace","mac+alt+Backspace","mac+ctrl+Backspace","Delete","ctrl+Delete","shift+Delete","mac+Delete"],t.delete,{checker:i}],[["Enter","mac+Enter"],t.addNewEditorFromKeyboard,{checker:(t,{target:e})=>!(e instanceof HTMLButtonElement)&&t.#ut.contains(e)&&!t.isEnterHandled}],[[" ","mac+ "],t.addNewEditorFromKeyboard,{checker:(t,{target:e})=>!(e instanceof HTMLButtonElement)&&t.#ut.contains(document.activeElement)}],[["Escape","mac+Escape"],t.unselectAll],[["ArrowLeft","mac+ArrowLeft"],t.translateSelectedEditors,{args:[-s,0],checker:e}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],t.translateSelectedEditors,{args:[-n,0],checker:e}],[["ArrowRight","mac+ArrowRight"],t.translateSelectedEditors,{args:[s,0],checker:e}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],t.translateSelectedEditors,{args:[n,0],checker:e}],[["ArrowUp","mac+ArrowUp"],t.translateSelectedEditors,{args:[0,-s],checker:e}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],t.translateSelectedEditors,{args:[0,-n],checker:e}],[["ArrowDown","mac+ArrowDown"],t.translateSelectedEditors,{args:[0,s],checker:e}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],t.translateSelectedEditors,{args:[0,n],checker:e}]]))}constructor(t,e,i,s,n,r,a,o,h,l,c){const d=this._signal=this.#M.signal;this.#ut=t,this.#pt=e,this.#P=i,this._eventBus=s,s._on("editingaction",this.onEditingAction.bind(this),{signal:d}),s._on("pagechanging",this.onPageChanging.bind(this),{signal:d}),s._on("scalechanging",this.onScaleChanging.bind(this),{signal:d}),s._on("rotationchanging",this.onRotationChanging.bind(this),{signal:d}),s._on("setpreference",this.onSetPreference.bind(this),{signal:d}),s._on("switchannotationeditorparams",(t=>this.updateParams(t.type,t.value)),{signal:d}),this.#ft(),this.#mt(),this.#bt(),this.#D=n.annotationStorage,this.#G=n.filterFactory,this.#ot=r,this.#X=a||null,this.#U=o,this.#$=h,this.#W=l,this.#st=c||null,this.viewParameters={realScale:Y.PDF_TO_CSS_UNITS,rotation:0},this.isShiftKeyDown=!1}destroy(){this.#gt?.resolve(),this.#gt=null,this.#M?.abort(),this.#M=null,this._signal=null;for(const t of this.#R.values())t.destroy();this.#R.clear(),this.#I.clear(),this.#j.clear(),this.#k=null,this.#rt.clear(),this.#F.destroy(),this.#P?.destroy(),this.#Y?.hide(),this.#Y=null,this.#V&&(clearTimeout(this.#V),this.#V=null),this.#dt&&(clearTimeout(this.#dt),this.#dt=null)}combinedSignal(t){return AbortSignal.any([this._signal,t.signal])}get mlManager(){return this.#st}get useNewAltTextFlow(){return this.#$}get useNewAltTextWhenAddingImage(){return this.#W}get hcmFilter(){return C(this,"hcmFilter",this.#ot?this.#G.addHCMFilter(this.#ot.foreground,this.#ot.background):"none")}get direction(){return C(this,"direction",getComputedStyle(this.#ut).direction)}get highlightColors(){return C(this,"highlightColors",this.#X?new Map(this.#X.split(",").map((t=>t.split("=").map((t=>t.trim()))))):null)}get highlightColorNames(){return C(this,"highlightColorNames",this.highlightColors?new Map(Array.from(this.highlightColors,(t=>t.reverse()))):null)}setMainHighlightColorPicker(t){this.#it=t}editAltText(t,e=!1){this.#P?.editAltText(this,t,e)}switchToMode(t,e){this._eventBus.on("annotationeditormodechanged",e,{once:!0,signal:this._signal}),this._eventBus.dispatch("showannotationeditorui",{source:this,mode:t})}setPreference(t,e){this._eventBus.dispatch("setpreference",{source:this,name:t,value:e})}onSetPreference({name:t,value:e}){"enableNewAltTextWhenAddingImage"===t&&(this.#W=e)}onPageChanging({pageNumber:t}){this.#N=t-1}focusMainContainer(){this.#ut.focus()}findParent(t,e){for(const i of this.#R.values()){const{x:s,y:n,width:r,height:a}=i.div.getBoundingClientRect();if(t>=s&&t<=s+r&&e>=n&&e<=n+a)return i}return null}disableUserSelect(t=!1){this.#pt.classList.toggle("noUserSelect",t)}addShouldRescale(t){this.#j.add(t)}removeShouldRescale(t){this.#j.delete(t)}onScaleChanging({scale:t}){this.commitOrRemove(),this.viewParameters.realScale=t*Y.PDF_TO_CSS_UNITS;for(const t of this.#j)t.onScaleChanging()}onRotationChanging({pagesRotation:t}){this.commitOrRemove(),this.viewParameters.rotation=t}#vt({anchorNode:t}){return t.nodeType===Node.TEXT_NODE?t.parentElement:t}#yt(t){const{currentLayer:e}=this;if(e.hasTextLayer(t))return e;for(const e of this.#R.values())if(e.hasTextLayer(t))return e;return null}highlightSelection(t=""){const e=document.getSelection();if(!e||e.isCollapsed)return;const{anchorNode:i,anchorOffset:s,focusNode:n,focusOffset:r}=e,a=e.toString(),o=this.#vt(e).closest(".textLayer"),h=this.getSelectionBoxes(o);if(!h)return;e.empty();const c=this.#yt(o),d=this.#nt===l.NONE,u=()=>{c?.createAndAddNewEditor({x:0,y:0},!1,{methodOfCreation:t,boxes:h,anchorNode:i,anchorOffset:s,focusNode:n,focusOffset:r,text:a}),d&&this.showAllEditors("highlight",!0,!0)};d?this.switchToMode(l.HIGHLIGHT,u):u()}#At(){const t=document.getSelection();if(!t||t.isCollapsed)return;const e=this.#vt(t).closest(".textLayer"),i=this.getSelectionBoxes(e);i&&(this.#Y||=new At(this),this.#Y.show(e,i,"ltr"===this.direction))}addToAnnotationStorage(t){t.isEmpty()||!this.#D||this.#D.has(t.id)||this.#D.setValue(t.id,t)}#wt(){const t=document.getSelection();if(!t||t.isCollapsed)return void(this.#at&&(this.#Y?.hide(),this.#at=null,this.#xt({hasSelectedText:!1})));const{anchorNode:e}=t;if(e===this.#at)return;const i=this.#vt(t).closest(".textLayer");if(i){if(this.#Y?.hide(),this.#at=e,this.#xt({hasSelectedText:!0}),(this.#nt===l.HIGHLIGHT||this.#nt===l.NONE)&&(this.#nt===l.HIGHLIGHT&&this.showAllEditors("highlight",!0,!0),this.#K=this.isShiftKeyDown,!this.isShiftKeyDown)){const t=this.#nt===l.HIGHLIGHT?this.#yt(i):null;t?.toggleDrawing();const e=new AbortController,s=this.combinedSignal(e),n=i=>{"pointerup"===i.type&&0!==i.button||(e.abort(),t?.toggleDrawing(!0),"pointerup"===i.type&&this.#_t("main_toolbar"))};window.addEventListener("pointerup",n,{signal:s}),window.addEventListener("blur",n,{signal:s})}}else this.#at&&(this.#Y?.hide(),this.#at=null,this.#xt({hasSelectedText:!1}))}#_t(t=""){this.#nt===l.HIGHLIGHT?this.highlightSelection(t):this.#U&&this.#At()}#ft(){document.addEventListener("selectionchange",this.#wt.bind(this),{signal:this._signal})}#Et(){if(this.#q)return;this.#q=new AbortController;const t=this.combinedSignal(this.#q);window.addEventListener("focus",this.focus.bind(this),{signal:t}),window.addEventListener("blur",this.blur.bind(this),{signal:t})}#Ct(){this.#q?.abort(),this.#q=null}blur(){if(this.isShiftKeyDown=!1,this.#K&&(this.#K=!1,this.#_t("main_toolbar")),!this.hasSelection)return;const{activeElement:t}=document;for(const e of this.#rt)if(e.div.contains(t)){this.#et=[e,t],e._focusEventsAllowed=!1;break}}focus(){if(!this.#et)return;const[t,e]=this.#et;this.#et=null,e.addEventListener("focusin",(()=>{t._focusEventsAllowed=!0}),{once:!0,signal:this._signal}),e.focus()}#bt(){if(this.#tt)return;this.#tt=new AbortController;const t=this.combinedSignal(this.#tt);window.addEventListener("keydown",this.keydown.bind(this),{signal:t}),window.addEventListener("keyup",this.keyup.bind(this),{signal:t})}#St(){this.#tt?.abort(),this.#tt=null}#Tt(){if(this.#O)return;this.#O=new AbortController;const t=this.combinedSignal(this.#O);document.addEventListener("copy",this.copy.bind(this),{signal:t}),document.addEventListener("cut",this.cut.bind(this),{signal:t}),document.addEventListener("paste",this.paste.bind(this),{signal:t})}#Mt(){this.#O?.abort(),this.#O=null}#mt(){const t=this._signal;document.addEventListener("dragover",this.dragOver.bind(this),{signal:t}),document.addEventListener("drop",this.drop.bind(this),{signal:t})}addEditListeners(){this.#bt(),this.#Tt()}removeEditListeners(){this.#St(),this.#Mt()}dragOver(t){for(const{type:e}of t.dataTransfer.items)for(const i of this.#H)if(i.isHandlingMimeForPasting(e))return t.dataTransfer.dropEffect="copy",void t.preventDefault()}drop(t){for(const e of t.dataTransfer.items)for(const i of this.#H)if(i.isHandlingMimeForPasting(e.type))return i.paste(e,this.currentLayer),void t.preventDefault()}copy(t){if(t.preventDefault(),this.#k?.commitOrRemove(),!this.hasSelection)return;const e=[];for(const t of this.#rt){const i=t.serialize(!0);i&&e.push(i)}0!==e.length&&t.clipboardData.setData("application/pdfjs",JSON.stringify(e))}cut(t){this.copy(t),this.delete()}async paste(t){t.preventDefault();const{clipboardData:e}=t;for(const t of e.items)for(const e of this.#H)if(e.isHandlingMimeForPasting(t.type))return void e.paste(t,this.currentLayer);let i=e.getData("application/pdfjs");if(!i)return;try{i=JSON.parse(i)}catch(t){return void w(`paste: "${t.message}".`)}if(!Array.isArray(i))return;this.unselectAll();const s=this.currentLayer;try{const t=[];for(const e of i){const i=await s.deserialize(e);if(!i)return;t.push(i)}const e=()=>{for(const e of t)this.#kt(e);this.#It(t)},n=()=>{for(const e of t)e.remove()};this.addCommands({cmd:e,undo:n,mustExec:!0})}catch(t){w(`paste: "${t.message}".`)}}keydown(t){this.isShiftKeyDown||"Shift"!==t.key||(this.isShiftKeyDown=!0),this.#nt===l.NONE||this.isEditorHandlingKeyboard||Tt._keyboardManager.exec(this,t)}keyup(t){this.isShiftKeyDown&&"Shift"===t.key&&(this.isShiftKeyDown=!1,this.#K&&(this.#K=!1,this.#_t("main_toolbar")))}onEditingAction({name:t}){switch(t){case"undo":case"redo":case"delete":case"selectAll":this[t]();break;case"highlightSelection":this.highlightSelection("context_menu")}}#xt(t){Object.entries(t).some((([t,e])=>this.#lt[t]!==e))&&(this._eventBus.dispatch("annotationeditorstateschanged",{source:this,details:Object.assign(this.#lt,t)}),this.#nt===l.HIGHLIGHT&&!1===t.hasSelectedEditor&&this.#Rt([[c.HIGHLIGHT_FREE,!0]]))}#Rt(t){this._eventBus.dispatch("annotationeditorparamschanged",{source:this,details:t})}setEditingState(t){t?(this.#Et(),this.#Tt(),this.#xt({isEditing:this.#nt!==l.NONE,isEmpty:this.#Pt(),hasSomethingToUndo:this.#F.hasSomethingToUndo(),hasSomethingToRedo:this.#F.hasSomethingToRedo(),hasSelectedEditor:!1})):(this.#Ct(),this.#Mt(),this.#xt({isEditing:!1}),this.disableUserSelect(!1))}registerEditorTypes(t){if(!this.#H){this.#H=t;for(const t of this.#H)this.#Rt(t.defaultPropertiesToUpdate)}}getId(){return this.#Q.id}get currentLayer(){return this.#R.get(this.#N)}getLayer(t){return this.#R.get(t)}get currentPageIndex(){return this.#N}addLayer(t){this.#R.set(t.pageIndex,t),this.#J?t.enable():t.disable()}removeLayer(t){this.#R.delete(t.pageIndex)}async updateMode(t,e=null,i=!1){if(this.#nt!==t&&(!this.#gt||(await this.#gt.promise,this.#gt))){if(this.#gt=Promise.withResolvers(),this.#nt=t,t===l.NONE)return this.setEditingState(!1),this.#Dt(),void this.#gt.resolve();this.setEditingState(!0),await this.#Lt(),this.unselectAll();for(const e of this.#R.values())e.updateMode(t);if(!e)return i&&this.addNewEditorFromKeyboard(),void this.#gt.resolve();for(const t of this.#I.values())t.annotationElementId===e?(this.setSelected(t),t.enterInEditMode()):t.unselect();this.#gt.resolve()}}addNewEditorFromKeyboard(){this.currentLayer.canCreateNewEmptyEditor()&&this.currentLayer.addNewEditor()}updateToolbar(t){t!==this.#nt&&this._eventBus.dispatch("switchannotationeditormode",{source:this,mode:t})}updateParams(t,e){if(this.#H){switch(t){case c.CREATE:return void this.currentLayer.addNewEditor();case c.HIGHLIGHT_DEFAULT_COLOR:this.#it?.updateColor(e);break;case c.HIGHLIGHT_SHOW_ALL:this._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:{type:"highlight",action:"toggle_visibility"}}}),(this.#ht||=new Map).set(t,e),this.showAllEditors("highlight",e)}for(const i of this.#rt)i.updateParams(t,e);for(const i of this.#H)i.updateDefaultParams(t,e)}}showAllEditors(t,e,i=!1){for(const i of this.#I.values())i.editorType===t&&i.show(e);(this.#ht?.get(c.HIGHLIGHT_SHOW_ALL)??!0)!==e&&this.#Rt([[c.HIGHLIGHT_SHOW_ALL,e]])}enableWaiting(t=!1){if(this.#Z!==t){this.#Z=t;for(const e of this.#R.values())t?e.disableClick():e.enableClick(),e.div.classList.toggle("waiting",t)}}async#Lt(){if(!this.#J){this.#J=!0;const t=[];for(const e of this.#R.values())t.push(e.enable());await Promise.all(t);for(const t of this.#I.values())t.enable()}}#Dt(){if(this.unselectAll(),this.#J){this.#J=!1;for(const t of this.#R.values())t.disable();for(const t of this.#I.values())t.disable()}}getEditors(t){const e=[];for(const i of this.#I.values())i.pageIndex===t&&e.push(i);return e}getEditor(t){return this.#I.get(t)}addEditor(t){this.#I.set(t.id,t)}removeEditor(t){t.div.contains(document.activeElement)&&(this.#V&&clearTimeout(this.#V),this.#V=setTimeout((()=>{this.focusMainContainer(),this.#V=null}),0)),this.#I.delete(t.id),this.unselect(t),t.annotationElementId&&this.#B.has(t.annotationElementId)||this.#D?.remove(t.id)}addDeletedAnnotationElement(t){this.#B.add(t.annotationElementId),this.addChangedExistingAnnotation(t),t.deleted=!0}isDeletedAnnotationElement(t){return this.#B.has(t)}removeDeletedAnnotationElement(t){this.#B.delete(t.annotationElementId),this.removeChangedExistingAnnotation(t),t.deleted=!1}#kt(t){const e=this.#R.get(t.pageIndex);e?e.addOrRebuild(t):(this.addEditor(t),this.addToAnnotationStorage(t))}setActiveEditor(t){this.#k!==t&&(this.#k=t,t&&this.#Rt(t.propertiesToUpdate))}get#Ft(){let t=null;for(t of this.#rt);return t}updateUI(t){this.#Ft===t&&this.#Rt(t.propertiesToUpdate)}toggleSelected(t){if(this.#rt.has(t))return this.#rt.delete(t),t.unselect(),void this.#xt({hasSelectedEditor:this.hasSelection});this.#rt.add(t),t.select(),this.#Rt(t.propertiesToUpdate),this.#xt({hasSelectedEditor:!0})}setSelected(t){for(const e of this.#rt)e!==t&&e.unselect();this.#rt.clear(),this.#rt.add(t),t.select(),this.#Rt(t.propertiesToUpdate),this.#xt({hasSelectedEditor:!0})}isSelected(t){return this.#rt.has(t)}get firstSelectedEditor(){return this.#rt.values().next().value}unselect(t){t.unselect(),this.#rt.delete(t),this.#xt({hasSelectedEditor:this.hasSelection})}get hasSelection(){return 0!==this.#rt.size}get isEnterHandled(){return 1===this.#rt.size&&this.firstSelectedEditor.isEnterHandled}undo(){this.#F.undo(),this.#xt({hasSomethingToUndo:this.#F.hasSomethingToUndo(),hasSomethingToRedo:!0,isEmpty:this.#Pt()})}redo(){this.#F.redo(),this.#xt({hasSomethingToUndo:!0,hasSomethingToRedo:this.#F.hasSomethingToRedo(),isEmpty:this.#Pt()})}addCommands(t){this.#F.add(t),this.#xt({hasSomethingToUndo:!0,hasSomethingToRedo:!1,isEmpty:this.#Pt()})}#Pt(){if(0===this.#I.size)return!0;if(1===this.#I.size)for(const t of this.#I.values())return t.isEmpty();return!1}delete(){if(this.commitOrRemove(),!this.hasSelection)return;const t=[...this.#rt];this.addCommands({cmd:()=>{for(const e of t)e.remove()},undo:()=>{for(const e of t)this.#kt(e)},mustExec:!0})}commitOrRemove(){this.#k?.commitOrRemove()}hasSomethingToControl(){return this.#k||this.hasSelection}#It(t){for(const t of this.#rt)t.unselect();this.#rt.clear();for(const e of t)e.isEmpty()||(this.#rt.add(e),e.select());this.#xt({hasSelectedEditor:this.hasSelection})}selectAll(){for(const t of this.#rt)t.commit();this.#It(this.#I.values())}unselectAll(){if((!this.#k||(this.#k.commitOrRemove(),this.#nt===l.NONE))&&this.hasSelection){for(const t of this.#rt)t.unselect();this.#rt.clear(),this.#xt({hasSelectedEditor:!1})}}translateSelectedEditors(t,e,i=!1){if(i||this.commitOrRemove(),!this.hasSelection)return;this.#ct[0]+=t,this.#ct[1]+=e;const[s,n]=this.#ct,r=[...this.#rt];this.#dt&&clearTimeout(this.#dt),this.#dt=setTimeout((()=>{this.#dt=null,this.#ct[0]=this.#ct[1]=0,this.addCommands({cmd:()=>{for(const t of r)this.#I.has(t.id)&&t.translateInPage(s,n)},undo:()=>{for(const t of r)this.#I.has(t.id)&&t.translateInPage(-s,-n)},mustExec:!1})}),1e3);for(const i of r)i.translateInPage(t,e)}setUpDragSession(){if(this.hasSelection){this.disableUserSelect(!0),this.#z=new Map;for(const t of this.#rt)this.#z.set(t,{savedX:t.x,savedY:t.y,savedPageIndex:t.pageIndex,newX:0,newY:0,newPageIndex:-1})}}endDragSession(){if(!this.#z)return!1;this.disableUserSelect(!1);const t=this.#z;this.#z=null;let e=!1;for(const[{x:i,y:s,pageIndex:n},r]of t)r.newX=i,r.newY=s,r.newPageIndex=n,e||=i!==r.savedX||s!==r.savedY||n!==r.savedPageIndex;if(!e)return!1;const i=(t,e,i,s)=>{if(this.#I.has(t.id)){const n=this.#R.get(s);n?t._setParentAndPosition(n,e,i):(t.pageIndex=s,t.x=e,t.y=i)}};return this.addCommands({cmd:()=>{for(const[e,{newX:s,newY:n,newPageIndex:r}]of t)i(e,s,n,r)},undo:()=>{for(const[e,{savedX:s,savedY:n,savedPageIndex:r}]of t)i(e,s,n,r)},mustExec:!0}),!0}dragSelectedEditors(t,e){if(this.#z)for(const i of this.#z.keys())i.drag(t,e)}rebuild(t){if(null===t.parent){const e=this.getLayer(t.pageIndex);e?(e.changeParent(t),e.addOrRebuild(t)):(this.addEditor(t),this.addToAnnotationStorage(t),t.rebuild())}else t.parent.addOrRebuild(t)}get isEditorHandlingKeyboard(){return this.getActive()?.shouldGetKeyboardEvents()||1===this.#rt.size&&this.firstSelectedEditor.shouldGetKeyboardEvents()}isActive(t){return this.#k===t}getActive(){return this.#k}getMode(){return this.#nt}get imageManager(){return C(this,"imageManager",new _t)}getSelectionBoxes(t){if(!t)return null;const e=document.getSelection();for(let i=0,s=e.rangeCount;i<s;i++)if(!t.contains(e.getRangeAt(i).commonAncestorContainer))return null;const{x:i,y:s,width:n,height:r}=t.getBoundingClientRect();let a;switch(t.getAttribute("data-main-rotation")){case"90":a=(t,e,a,o)=>({x:(e-s)/r,y:1-(t+a-i)/n,width:o/r,height:a/n});break;case"180":a=(t,e,a,o)=>({x:1-(t+a-i)/n,y:1-(e+o-s)/r,width:a/n,height:o/r});break;case"270":a=(t,e,a,o)=>({x:1-(e+o-s)/r,y:(t-i)/n,width:o/r,height:a/n});break;default:a=(t,e,a,o)=>({x:(t-i)/n,y:(e-s)/r,width:a/n,height:o/r})}const o=[];for(let t=0,i=e.rangeCount;t<i;t++){const i=e.getRangeAt(t);if(!i.collapsed)for(const{x:t,y:e,width:s,height:n}of i.getClientRects())0!==s&&0!==n&&o.push(a(t,e,s,n))}return 0===o.length?null:o}addChangedExistingAnnotation({annotationElementId:t,id:e}){(this.#L||=new Map).set(t,e)}removeChangedExistingAnnotation({annotationElementId:t}){this.#L?.delete(t)}renderAnnotationElement(t){const e=this.#L?.get(t.data.id);if(!e)return;const i=this.#D.getRawValue(e);i&&(this.#nt!==l.NONE||i.hasBeenModified)&&i.renderAnnotationElement(t)}}class Mt{#o=null;#Ot=!1;#Nt=null;#Bt=null;#zt=null;#Ht=!1;#jt=null;#r=null;#Ut=null;#$t=null;#Wt=!1;static#Gt=null;static _l10nPromise=null;constructor(t){this.#r=t,this.#Wt=t._uiManager.useNewAltTextFlow,Mt.#Gt||=Object.freeze({added:"pdfjs-editor-new-alt-text-added-button-label",missing:"pdfjs-editor-new-alt-text-missing-button-label",review:"pdfjs-editor-new-alt-text-to-review-button-label"})}static initialize(t){Mt._l10nPromise||=t}async render(){const t=this.#Nt=document.createElement("button");let e;t.className="altText",this.#Wt?(t.classList.add("new"),e=await Mt._l10nPromise.get(Mt.#Gt.missing)):e=await Mt._l10nPromise.get("pdfjs-editor-alt-text-button-label"),t.textContent=e,t.setAttribute("aria-label",e),t.tabIndex="0";const i=this.#r._uiManager._signal;t.addEventListener("contextmenu",lt,{signal:i}),t.addEventListener("pointerdown",(t=>t.stopPropagation()),{signal:i});const s=t=>{t.preventDefault(),this.#r._uiManager.editAltText(this.#r),this.#Wt&&this.#r._reportTelemetry({action:"pdfjs.image.alt_text.image_status_label_clicked",data:{label:this.#Vt}})};return t.addEventListener("click",s,{capture:!0,signal:i}),t.addEventListener("keydown",(e=>{e.target===t&&"Enter"===e.key&&(this.#Ht=!0,s(e))}),{signal:i}),await this.#qt(),t}get#Vt(){return(this.#o?"added":null===this.#o&&this.guessedText&&"review")||"missing"}finish(){this.#Nt&&(this.#Nt.focus({focusVisible:this.#Ht}),this.#Ht=!1)}isEmpty(){return this.#Wt?null===this.#o:!this.#o&&!this.#Ot}hasData(){return this.#Wt?null!==this.#o||!!this.#Ut:this.isEmpty()}get guessedText(){return this.#Ut}async setGuessedText(t){null===this.#o&&(this.#Ut=t,this.#$t=await Mt._l10nPromise.get("pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer")({generatedAltText:t}),this.#qt())}toggleAltTextBadge(t=!1){if(!this.#Wt||this.#o)return this.#jt?.remove(),void(this.#jt=null);if(!this.#jt){const t=this.#jt=document.createElement("div");t.className="noAltTextBadge",this.#r.div.append(t)}this.#jt.classList.toggle("hidden",!t)}serialize(t){let e=this.#o;return t||this.#Ut!==e||(e=this.#$t),{altText:e,decorative:this.#Ot,guessedText:this.#Ut,textWithDisclaimer:this.#$t}}get data(){return{altText:this.#o,decorative:this.#Ot}}set data({altText:t,decorative:e,guessedText:i,textWithDisclaimer:s,cancel:n=!1}){i&&(this.#Ut=i,this.#$t=s),this.#o===t&&this.#Ot===e||(n||(this.#o=t,this.#Ot=e),this.#qt())}toggle(t=!1){this.#Nt&&(!t&&this.#zt&&(clearTimeout(this.#zt),this.#zt=null),this.#Nt.disabled=!t)}shown(){this.#r._reportTelemetry({action:"pdfjs.image.alt_text.image_status_label_displayed",data:{label:this.#Vt}})}destroy(){this.#Nt?.remove(),this.#Nt=null,this.#Bt=null,this.#jt?.remove(),this.#jt=null}async#qt(){const t=this.#Nt;if(!t)return;if(this.#Wt){if(t.classList.toggle("done",!!this.#o),Mt._l10nPromise.get(Mt.#Gt[this.#Vt]).then((e=>{t.setAttribute("aria-label",e);for(const i of t.childNodes)if(i.nodeType===Node.TEXT_NODE){i.textContent=e;break}})),!this.#o)return void this.#Bt?.remove()}else{if(!this.#o&&!this.#Ot)return t.classList.remove("done"),void this.#Bt?.remove();t.classList.add("done"),Mt._l10nPromise.get("pdfjs-editor-alt-text-edit-button-label").then((e=>{t.setAttribute("aria-label",e)}))}let e=this.#Bt;if(!e){this.#Bt=e=document.createElement("span"),e.className="tooltip",e.setAttribute("role","tooltip"),e.id=`alt-text-tooltip-${this.#r.id}`;const i=100,s=this.#r._uiManager._signal;s.addEventListener("abort",(()=>{clearTimeout(this.#zt),this.#zt=null}),{once:!0}),t.addEventListener("mouseenter",(()=>{this.#zt=setTimeout((()=>{this.#zt=null,this.#Bt.classList.add("show"),this.#r._reportTelemetry({action:"alt_text_tooltip"})}),i)}),{signal:s}),t.addEventListener("mouseleave",(()=>{this.#zt&&(clearTimeout(this.#zt),this.#zt=null),this.#Bt?.classList.remove("show")}),{signal:s})}e.innerText=this.#Ot?await Mt._l10nPromise.get("pdfjs-editor-alt-text-decorative-tooltip"):this.#o,e.parentNode||t.append(e);const i=this.#r.getImageForAltText();i?.setAttribute("aria-describedby",e.id)}}class kt{#Xt=null;#Kt=null;#o=null;#Yt=!1;#Qt=!1;#Jt=null;#Zt=null;#te=null;#ee="";#ie=!1;#se=null;#ne=!1;#re=!1;#ae=!1;#oe=null;#he=0;#le=0;#ce=null;_editToolbar=null;_initialOptions=Object.create(null);_initialData=null;_isVisible=!0;_uiManager=null;_focusEventsAllowed=!0;static _l10nPromise=null;static _l10nResizer=null;#de=!1;#ue=kt._zIndex++;static _borderLineWidth=-1;static _colorManager=new St;static _zIndex=1;static _telemetryTimeout=1e3;static get _resizerKeyboardManager(){const t=kt.prototype._resizeWithKeyboard,e=Tt.TRANSLATE_SMALL,i=Tt.TRANSLATE_BIG;return C(this,"_resizerKeyboardManager",new Ct([[["ArrowLeft","mac+ArrowLeft"],t,{args:[-e,0]}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],t,{args:[-i,0]}],[["ArrowRight","mac+ArrowRight"],t,{args:[e,0]}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],t,{args:[i,0]}],[["ArrowUp","mac+ArrowUp"],t,{args:[0,-e]}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],t,{args:[0,-i]}],[["ArrowDown","mac+ArrowDown"],t,{args:[0,e]}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],t,{args:[0,i]}],[["Escape","mac+Escape"],kt.prototype._stopResizingWithKeyboard]]))}constructor(t){this.parent=t.parent,this.id=t.id,this.width=this.height=null,this.pageIndex=t.parent.pageIndex,this.name=t.name,this.div=null,this._uiManager=t.uiManager,this.annotationElementId=null,this._willKeepAspectRatio=!1,this._initialOptions.isCentered=t.isCentered,this._structTreeParentId=null;const{rotation:e,rawDims:{pageWidth:i,pageHeight:s,pageX:n,pageY:r}}=this.parent.viewport;this.rotation=e,this.pageRotation=(360+e-this._uiManager.viewParameters.rotation)%360,this.pageDimensions=[i,s],this.pageTranslation=[n,r];const[a,o]=this.parentDimensions;this.x=t.x/a,this.y=t.y/o,this.isAttachedToDOM=!1,this.deleted=!1}get editorType(){return Object.getPrototypeOf(this).constructor._type}static get _defaultLineColor(){return C(this,"_defaultLineColor",this._colorManager.getHexCode("CanvasText"))}static deleteAnnotationElement(t){const e=new It({id:t.parent.getNextId(),parent:t.parent,uiManager:t._uiManager});e.annotationElementId=t.annotationElementId,e.deleted=!0,e._uiManager.addToAnnotationStorage(e)}static initialize(t,e,i){if(kt._l10nResizer||=Object.freeze({topLeft:"pdfjs-editor-resizer-top-left",topMiddle:"pdfjs-editor-resizer-top-middle",topRight:"pdfjs-editor-resizer-top-right",middleRight:"pdfjs-editor-resizer-middle-right",bottomRight:"pdfjs-editor-resizer-bottom-right",bottomMiddle:"pdfjs-editor-resizer-bottom-middle",bottomLeft:"pdfjs-editor-resizer-bottom-left",middleLeft:"pdfjs-editor-resizer-middle-left"}),kt._l10nPromise||=new Map([...["pdfjs-editor-alt-text-button-label","pdfjs-editor-alt-text-edit-button-label","pdfjs-editor-alt-text-decorative-tooltip","pdfjs-editor-new-alt-text-added-button-label","pdfjs-editor-new-alt-text-missing-button-label","pdfjs-editor-new-alt-text-to-review-button-label"].map((e=>[e,t.get(e)])),...["pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer"].map((e=>[e,t.get.bind(t,e)]))]),i?.strings)for(const e of i.strings)kt._l10nPromise.set(e,t.get(e));if(-1!==kt._borderLineWidth)return;const s=getComputedStyle(document.documentElement);kt._borderLineWidth=parseFloat(s.getPropertyValue("--outline-width"))||0}static updateDefaultParams(t,e){}static get defaultPropertiesToUpdate(){return[]}static isHandlingMimeForPasting(t){return!1}static paste(t,e){x("Not implemented")}get propertiesToUpdate(){return[]}get _isDraggable(){return this.#de}set _isDraggable(t){this.#de=t,this.div?.classList.toggle("draggable",t)}get isEnterHandled(){return!0}center(){const[t,e]=this.pageDimensions;switch(this.parentRotation){case 90:this.x-=this.height*e/(2*t),this.y+=this.width*t/(2*e);break;case 180:this.x+=this.width/2,this.y+=this.height/2;break;case 270:this.x+=this.height*e/(2*t),this.y-=this.width*t/(2*e);break;default:this.x-=this.width/2,this.y-=this.height/2}this.fixAndSetPosition()}addCommands(t){this._uiManager.addCommands(t)}get currentLayer(){return this._uiManager.currentLayer}setInBackground(){this.div.style.zIndex=0}setInForeground(){this.div.style.zIndex=this.#ue}setParent(t){null!==t?(this.pageIndex=t.pageIndex,this.pageDimensions=t.pageDimensions):this.#pe(),this.parent=t}focusin(t){this._focusEventsAllowed&&(this.#ie?this.#ie=!1:this.parent.setSelected(this))}focusout(t){if(!this._focusEventsAllowed)return;if(!this.isAttachedToDOM)return;const e=t.relatedTarget;e?.closest(`#${this.id}`)||(t.preventDefault(),this.parent?.isMultipleSelection||this.commitOrRemove())}commitOrRemove(){this.isEmpty()?this.remove():this.commit()}commit(){this.addToAnnotationStorage()}addToAnnotationStorage(){this._uiManager.addToAnnotationStorage(this)}setAt(t,e,i,s){const[n,r]=this.parentDimensions;[i,s]=this.screenToPageTranslation(i,s),this.x=(t+i)/n,this.y=(e+s)/r,this.fixAndSetPosition()}#ge([t,e],i,s){[i,s]=this.screenToPageTranslation(i,s),this.x+=i/t,this.y+=s/e,this.fixAndSetPosition()}translate(t,e){this.#ge(this.parentDimensions,t,e)}translateInPage(t,e){this.#se||=[this.x,this.y],this.#ge(this.pageDimensions,t,e),this.div.scrollIntoView({block:"nearest"})}drag(t,e){this.#se||=[this.x,this.y];const[i,s]=this.parentDimensions;if(this.x+=t/i,this.y+=e/s,this.parent&&(this.x<0||this.x>1||this.y<0||this.y>1)){const{x:t,y:e}=this.div.getBoundingClientRect();this.parent.findNewParent(this,t,e)&&(this.x-=Math.floor(this.x),this.y-=Math.floor(this.y))}let{x:n,y:r}=this;const[a,o]=this.getBaseTranslation();n+=a,r+=o,this.div.style.left=`${(100*n).toFixed(2)}%`,this.div.style.top=`${(100*r).toFixed(2)}%`,this.div.scrollIntoView({block:"nearest"})}get _hasBeenMoved(){return!!this.#se&&(this.#se[0]!==this.x||this.#se[1]!==this.y)}getBaseTranslation(){const[t,e]=this.parentDimensions,{_borderLineWidth:i}=kt,s=i/t,n=i/e;switch(this.rotation){case 90:return[-s,n];case 180:return[s,n];case 270:return[s,-n];default:return[-s,-n]}}get _mustFixPosition(){return!0}fixAndSetPosition(t=this.rotation){const[e,i]=this.pageDimensions;let{x:s,y:n,width:r,height:a}=this;if(r*=e,a*=i,s*=e,n*=i,this._mustFixPosition)switch(t){case 0:s=Math.max(0,Math.min(e-r,s)),n=Math.max(0,Math.min(i-a,n));break;case 90:s=Math.max(0,Math.min(e-a,s)),n=Math.min(i,Math.max(r,n));break;case 180:s=Math.min(e,Math.max(r,s)),n=Math.min(i,Math.max(a,n));break;case 270:s=Math.min(e,Math.max(a,s)),n=Math.max(0,Math.min(i-r,n))}this.x=s/=e,this.y=n/=i;const[o,h]=this.getBaseTranslation();s+=o,n+=h;const{style:l}=this.div;l.left=`${(100*s).toFixed(2)}%`,l.top=`${(100*n).toFixed(2)}%`,this.moveInDOM()}static#fe(t,e,i){switch(i){case 90:return[e,-t];case 180:return[-t,-e];case 270:return[-e,t];default:return[t,e]}}screenToPageTranslation(t,e){return kt.#fe(t,e,this.parentRotation)}pageTranslationToScreen(t,e){return kt.#fe(t,e,360-this.parentRotation)}#me(t){switch(t){case 90:{const[t,e]=this.pageDimensions;return[0,-t/e,e/t,0]}case 180:return[-1,0,0,-1];case 270:{const[t,e]=this.pageDimensions;return[0,t/e,-e/t,0]}default:return[1,0,0,1]}}get parentScale(){return this._uiManager.viewParameters.realScale}get parentRotation(){return(this._uiManager.viewParameters.rotation+this.pageRotation)%360}get parentDimensions(){const{parentScale:t,pageDimensions:[e,i]}=this;return[e*t,i*t]}setDims(t,e){const[i,s]=this.parentDimensions;this.div.style.width=`${(100*t/i).toFixed(2)}%`,this.#Qt||(this.div.style.height=`${(100*e/s).toFixed(2)}%`)}fixDims(){const{style:t}=this.div,{height:e,width:i}=t,s=i.endsWith("%"),n=!this.#Qt&&e.endsWith("%");if(s&&n)return;const[r,a]=this.parentDimensions;s||(t.width=`${(100*parseFloat(i)/r).toFixed(2)}%`),this.#Qt||n||(t.height=`${(100*parseFloat(e)/a).toFixed(2)}%`)}getInitialTranslation(){return[0,0]}#be(){if(this.#Jt)return;this.#Jt=document.createElement("div"),this.#Jt.classList.add("resizers");const t=this._willKeepAspectRatio?["topLeft","topRight","bottomRight","bottomLeft"]:["topLeft","topMiddle","topRight","middleRight","bottomRight","bottomMiddle","bottomLeft","middleLeft"],e=this._uiManager._signal;for(const i of t){const t=document.createElement("div");this.#Jt.append(t),t.classList.add("resizer",i),t.setAttribute("data-resizer-name",i),t.addEventListener("pointerdown",this.#ve.bind(this,i),{signal:e}),t.addEventListener("contextmenu",lt,{signal:e}),t.tabIndex=-1}this.div.prepend(this.#Jt)}#ve(t,e){e.preventDefault();const{isMac:i}=N.platform;if(0!==e.button||e.ctrlKey&&i)return;this.#o?.toggle(!1);const s=this._isDraggable;this._isDraggable=!1;const n=new AbortController,r=this._uiManager.combinedSignal(n);this.parent.togglePointerEvents(!1),window.addEventListener("pointermove",this.#ye.bind(this,t),{passive:!0,capture:!0,signal:r}),window.addEventListener("contextmenu",lt,{signal:r});const a=this.x,o=this.y,h=this.width,l=this.height,c=this.parent.div.style.cursor,d=this.div.style.cursor;this.div.style.cursor=this.parent.div.style.cursor=window.getComputedStyle(e.target).cursor;const u=()=>{n.abort(),this.parent.togglePointerEvents(!0),this.#o?.toggle(!0),this._isDraggable=s,this.parent.div.style.cursor=c,this.div.style.cursor=d,this.#Ae(a,o,h,l)};window.addEventListener("pointerup",u,{signal:r}),window.addEventListener("blur",u,{signal:r})}#Ae(t,e,i,s){const n=this.x,r=this.y,a=this.width,o=this.height;n===t&&r===e&&a===i&&o===s||this.addCommands({cmd:()=>{this.width=a,this.height=o,this.x=n,this.y=r;const[t,e]=this.parentDimensions;this.setDims(t*a,e*o),this.fixAndSetPosition()},undo:()=>{this.width=i,this.height=s,this.x=t,this.y=e;const[n,r]=this.parentDimensions;this.setDims(n*i,r*s),this.fixAndSetPosition()},mustExec:!0})}#ye(t,e){const[i,s]=this.parentDimensions,n=this.x,r=this.y,a=this.width,o=this.height,h=kt.MIN_SIZE/i,l=kt.MIN_SIZE/s,c=t=>Math.round(1e4*t)/1e4,d=this.#me(this.rotation),u=(t,e)=>[d[0]*t+d[2]*e,d[1]*t+d[3]*e],p=this.#me(360-this.rotation);let g,f,m=!1,b=!1;switch(t){case"topLeft":m=!0,g=(t,e)=>[0,0],f=(t,e)=>[t,e];break;case"topMiddle":g=(t,e)=>[t/2,0],f=(t,e)=>[t/2,e];break;case"topRight":m=!0,g=(t,e)=>[t,0],f=(t,e)=>[0,e];break;case"middleRight":b=!0,g=(t,e)=>[t,e/2],f=(t,e)=>[0,e/2];break;case"bottomRight":m=!0,g=(t,e)=>[t,e],f=(t,e)=>[0,0];break;case"bottomMiddle":g=(t,e)=>[t/2,e],f=(t,e)=>[t/2,0];break;case"bottomLeft":m=!0,g=(t,e)=>[0,e],f=(t,e)=>[t,0];break;case"middleLeft":b=!0,g=(t,e)=>[0,e/2],f=(t,e)=>[t,e/2]}const v=g(a,o),y=f(a,o);let A=u(...y);const w=c(n+A[0]),x=c(r+A[1]);let _=1,E=1,[C,S]=this.screenToPageTranslation(e.movementX,e.movementY);var T,M;if([C,S]=(T=C/i,M=S/s,[p[0]*T+p[2]*M,p[1]*T+p[3]*M]),m){const t=Math.hypot(a,o);_=E=Math.max(Math.min(Math.hypot(y[0]-v[0]-C,y[1]-v[1]-S)/t,1/a,1/o),h/a,l/o)}else b?_=Math.max(h,Math.min(1,Math.abs(y[0]-v[0]-C)))/a:E=Math.max(l,Math.min(1,Math.abs(y[1]-v[1]-S)))/o;const k=c(a*_),I=c(o*E);A=u(...f(k,I));const R=w-A[0],P=x-A[1];this.width=k,this.height=I,this.x=R,this.y=P,this.setDims(i*k,s*I),this.fixAndSetPosition()}altTextFinish(){this.#o?.finish()}async addEditToolbar(){return this._editToolbar||this.#re||(this._editToolbar=new yt(this),this.div.append(this._editToolbar.render()),this.#o&&await this._editToolbar.addAltText(this.#o)),this._editToolbar}removeEditToolbar(){this._editToolbar&&(this._editToolbar.remove(),this._editToolbar=null,this.#o?.destroy())}addContainer(t){const e=this._editToolbar?.div;e?e.before(t):this.div.append(t)}getClientDimensions(){return this.div.getBoundingClientRect()}async addAltTextButton(){this.#o||(Mt.initialize(kt._l10nPromise),this.#o=new Mt(this),this.#Xt&&(this.#o.data=this.#Xt,this.#Xt=null),await this.addEditToolbar())}get altTextData(){return this.#o?.data}set altTextData(t){this.#o&&(this.#o.data=t)}get guessedAltText(){return this.#o?.guessedText}async setGuessedAltText(t){await(this.#o?.setGuessedText(t))}serializeAltText(t){return this.#o?.serialize(t)}hasAltText(){return!!this.#o&&!this.#o.isEmpty()}hasAltTextData(){return this.#o?.hasData()??!1}render(){this.div=document.createElement("div"),this.div.setAttribute("data-editor-rotation",(360-this.rotation)%360),this.div.className=this.name,this.div.setAttribute("id",this.id),this.div.tabIndex=this.#Yt?-1:0,this._isVisible||this.div.classList.add("hidden"),this.setInForeground(),this.#we();const[t,e]=this.parentDimensions;this.parentRotation%180!=0&&(this.div.style.maxWidth=`${(100*e/t).toFixed(2)}%`,this.div.style.maxHeight=`${(100*t/e).toFixed(2)}%`);const[i,s]=this.getInitialTranslation();return this.translate(i,s),wt(this,this.div,["pointerdown"]),this.div}pointerdown(t){const{isMac:e}=N.platform;0!==t.button||t.ctrlKey&&e?t.preventDefault():(this.#ie=!0,this._isDraggable?this.#xe(t):this.#_e(t))}#_e(t){const{isMac:e}=N.platform;t.ctrlKey&&!e||t.shiftKey||t.metaKey&&e?this.parent.toggleSelected(this):this.parent.setSelected(this)}#xe(t){const e=this._uiManager.isSelected(this);this._uiManager.setUpDragSession();const i=new AbortController,s=this._uiManager.combinedSignal(i);if(e){this.div.classList.add("moving"),this.#he=t.clientX,this.#le=t.clientY;const e=t=>{const{clientX:e,clientY:i}=t,[s,n]=this.screenToPageTranslation(e-this.#he,i-this.#le);this.#he=e,this.#le=i,this._uiManager.dragSelectedEditors(s,n)};window.addEventListener("pointermove",e,{passive:!0,capture:!0,signal:s})}const n=()=>{i.abort(),e&&this.div.classList.remove("moving"),this.#ie=!1,this._uiManager.endDragSession()||this.#_e(t)};window.addEventListener("pointerup",n,{signal:s}),window.addEventListener("blur",n,{signal:s})}moveInDOM(){this.#oe&&clearTimeout(this.#oe),this.#oe=setTimeout((()=>{this.#oe=null,this.parent?.moveEditorInDOM(this)}),0)}_setParentAndPosition(t,e,i){t.changeParent(this),this.x=e,this.y=i,this.fixAndSetPosition()}getRect(t,e,i=this.rotation){const s=this.parentScale,[n,r]=this.pageDimensions,[a,o]=this.pageTranslation,h=t/s,l=e/s,c=this.x*n,d=this.y*r,u=this.width*n,p=this.height*r;switch(i){case 0:return[c+h+a,r-d-l-p+o,c+h+u+a,r-d-l+o];case 90:return[c+l+a,r-d+h+o,c+l+p+a,r-d+h+u+o];case 180:return[c-h-u+a,r-d+l+o,c-h+a,r-d+l+p+o];case 270:return[c-l-p+a,r-d-h-u+o,c-l+a,r-d-h+o];default:throw new Error("Invalid rotation")}}getRectInCurrentCoords(t,e){const[i,s,n,r]=t,a=n-i,o=r-s;switch(this.rotation){case 0:return[i,e-r,a,o];case 90:return[i,e-s,o,a];case 180:return[n,e-s,a,o];case 270:return[n,e-r,o,a];default:throw new Error("Invalid rotation")}}onceAdded(){}isEmpty(){return!1}enableEditMode(){this.#re=!0}disableEditMode(){this.#re=!1}isInEditMode(){return this.#re}shouldGetKeyboardEvents(){return this.#ae}needsToBeRebuilt(){return this.div&&!this.isAttachedToDOM}#we(){if(this.#te||!this.div)return;this.#te=new AbortController;const t=this._uiManager.combinedSignal(this.#te);this.div.addEventListener("focusin",this.focusin.bind(this),{signal:t}),this.div.addEventListener("focusout",this.focusout.bind(this),{signal:t})}rebuild(){this.#we()}rotate(t){}serializeDeleted(){return{id:this.annotationElementId,deleted:!0,pageIndex:this.pageIndex,popupRef:this._initialData?.popupRef||""}}serialize(t=!1,e=null){x("An editor must be serializable")}static async deserialize(t,e,i){const s=new this.prototype.constructor({parent:e,id:e.getNextId(),uiManager:i});s.rotation=t.rotation,s.#Xt=t.accessibilityData;const[n,r]=s.pageDimensions,[a,o,h,l]=s.getRectInCurrentCoords(t.rect,r);return s.x=a/n,s.y=o/r,s.width=h/n,s.height=l/r,s}get hasBeenModified(){return!!this.annotationElementId&&(this.deleted||null!==this.serialize())}remove(){if(this.#te?.abort(),this.#te=null,this.isEmpty()||this.commit(),this.parent?this.parent.remove(this):this._uiManager.removeEditor(this),this.#oe&&(clearTimeout(this.#oe),this.#oe=null),this.#pe(),this.removeEditToolbar(),this.#ce){for(const t of this.#ce.values())clearTimeout(t);this.#ce=null}this.parent=null}get isResizable(){return!1}makeResizable(){this.isResizable&&(this.#be(),this.#Jt.classList.remove("hidden"),wt(this,this.div,["keydown"]))}get toolbarPosition(){return null}keydown(t){if(!this.isResizable||t.target!==this.div||"Enter"!==t.key)return;this._uiManager.setSelected(this),this.#Zt={savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height};const e=this.#Jt.children;if(!this.#Kt){this.#Kt=Array.from(e);const t=this.#Ee.bind(this),i=this.#Ce.bind(this),s=this._uiManager._signal;for(const e of this.#Kt){const n=e.getAttribute("data-resizer-name");e.setAttribute("role","spinbutton"),e.addEventListener("keydown",t,{signal:s}),e.addEventListener("blur",i,{signal:s}),e.addEventListener("focus",this.#Se.bind(this,n),{signal:s}),e.setAttribute("data-l10n-id",kt._l10nResizer[n])}}const i=this.#Kt[0];let s=0;for(const t of e){if(t===i)break;s++}const n=(360-this.rotation+this.parentRotation)%360/90*(this.#Kt.length/4);if(n!==s){if(n<s)for(let t=0;t<s-n;t++)this.#Jt.append(this.#Jt.firstChild);else if(n>s)for(let t=0;t<n-s;t++)this.#Jt.firstChild.before(this.#Jt.lastChild);let t=0;for(const i of e){const e=this.#Kt[t++].getAttribute("data-resizer-name");i.setAttribute("data-l10n-id",kt._l10nResizer[e])}}this.#Te(0),this.#ae=!0,this.#Jt.firstChild.focus({focusVisible:!0}),t.preventDefault(),t.stopImmediatePropagation()}#Ee(t){kt._resizerKeyboardManager.exec(this,t)}#Ce(t){this.#ae&&t.relatedTarget?.parentNode!==this.#Jt&&this.#pe()}#Se(t){this.#ee=this.#ae?t:""}#Te(t){if(this.#Kt)for(const e of this.#Kt)e.tabIndex=t}_resizeWithKeyboard(t,e){this.#ae&&this.#ye(this.#ee,{movementX:t,movementY:e})}#pe(){if(this.#ae=!1,this.#Te(-1),this.#Zt){const{savedX:t,savedY:e,savedWidth:i,savedHeight:s}=this.#Zt;this.#Ae(t,e,i,s),this.#Zt=null}}_stopResizingWithKeyboard(){this.#pe(),this.div.focus()}select(){this.makeResizable(),this.div?.classList.add("selectedEditor"),this._editToolbar?(this._editToolbar?.show(),this.#o?.toggleAltTextBadge(!1)):this.addEditToolbar().then((()=>{this.div?.classList.contains("selectedEditor")&&this._editToolbar?.show()}))}unselect(){this.#Jt?.classList.add("hidden"),this.div?.classList.remove("selectedEditor"),this.div?.contains(document.activeElement)&&this._uiManager.currentLayer.div.focus({preventScroll:!0}),this._editToolbar?.hide(),this.#o?.toggleAltTextBadge(!0)}updateParams(t,e){}disableEditing(){}enableEditing(){}enterInEditMode(){}getImageForAltText(){return null}get contentDiv(){return this.div}get isEditing(){return this.#ne}set isEditing(t){this.#ne=t,this.parent&&(t?(this.parent.setSelected(this),this.parent.setActiveEditor(this)):this.parent.setActiveEditor(null))}setAspectRatio(t,e){this.#Qt=!0;const i=t/e,{style:s}=this.div;s.aspectRatio=i,s.height="auto"}static get MIN_SIZE(){return 16}static canCreateNewEmptyEditor(){return!0}get telemetryInitialData(){return{action:"added"}}get telemetryFinalData(){return null}_reportTelemetry(t,e=!1){if(e){this.#ce||=new Map;const{action:e}=t;let i=this.#ce.get(e);return i&&clearTimeout(i),i=setTimeout((()=>{this._reportTelemetry(t),this.#ce.delete(e),0===this.#ce.size&&(this.#ce=null)}),kt._telemetryTimeout),void this.#ce.set(e,i)}t.type||=this.editorType,this._uiManager._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:t}})}show(t=this._isVisible){this.div.classList.toggle("hidden",!t),this._isVisible=t}enable(){this.div&&(this.div.tabIndex=0),this.#Yt=!1}disable(){this.div&&(this.div.tabIndex=-1),this.#Yt=!0}renderAnnotationElement(t){let e=t.container.querySelector(".annotationContent");if(e){if("CANVAS"===e.nodeName){const t=e;e=document.createElement("div"),e.classList.add("annotationContent",this.editorType),t.before(e)}}else e=document.createElement("div"),e.classList.add("annotationContent",this.editorType),t.container.prepend(e);return e}resetAnnotationElement(t){const{firstChild:e}=t.container;"DIV"===e?.nodeName&&e.classList.contains("annotationContent")&&e.remove()}}class It extends kt{constructor(t){super(t),this.annotationElementId=t.annotationElementId,this.deleted=!0}serialize(){return this.serializeDeleted()}}const Rt=3285377520,Pt=4294901760,Dt=65535;class Lt{constructor(t){this.h1=t?4294967295&t:Rt,this.h2=t?4294967295&t:Rt}update(t){let e,i;if("string"==typeof t){e=new Uint8Array(2*t.length),i=0;for(let s=0,n=t.length;s<n;s++){const n=t.charCodeAt(s);n<=255?e[i++]=n:(e[i++]=n>>>8,e[i++]=255&n)}}else{if(!ArrayBuffer.isView(t))throw new Error("Invalid data format, must be a string or TypedArray.");e=t.slice(),i=e.byteLength}const s=i>>2,n=i-4*s,r=new Uint32Array(e.buffer,0,s);let a=0,o=0,h=this.h1,l=this.h2;const c=3432918353,d=461845907,u=11601,p=13715;for(let t=0;t<s;t++)1&t?(a=r[t],a=a*c&Pt|a*u&Dt,a=a<<15|a>>>17,a=a*d&Pt|a*p&Dt,h^=a,h=h<<13|h>>>19,h=5*h+3864292196):(o=r[t],o=o*c&Pt|o*u&Dt,o=o<<15|o>>>17,o=o*d&Pt|o*p&Dt,l^=o,l=l<<13|l>>>19,l=5*l+3864292196);switch(a=0,n){case 3:a^=e[4*s+2]<<16;case 2:a^=e[4*s+1]<<8;case 1:a^=e[4*s],a=a*c&Pt|a*u&Dt,a=a<<15|a>>>17,a=a*d&Pt|a*p&Dt,1&s?h^=a:l^=a}this.h1=h,this.h2=l}hexdigest(){let t=this.h1,e=this.h2;return t^=e>>>1,t=3981806797*t&Pt|36045*t&Dt,e=4283543511*e&Pt|(2950163797*(e<<16|t>>>16)&Pt)>>>16,t^=e>>>1,t=444984403*t&Pt|60499*t&Dt,e=3301882366*e&Pt|(3120437893*(e<<16|t>>>16)&Pt)>>>16,t^=e>>>1,(t>>>0).toString(16).padStart(8,"0")+(e>>>0).toString(16).padStart(8,"0")}}const Ft=Object.freeze({map:null,hash:"",transfer:void 0});class Ot{#Me=!1;#ke=null;#Ie=new Map;constructor(){this.onSetModified=null,this.onResetModified=null,this.onAnnotationEditor=null}getValue(t,e){const i=this.#Ie.get(t);return void 0===i?e:Object.assign(e,i)}getRawValue(t){return this.#Ie.get(t)}remove(t){if(this.#Ie.delete(t),0===this.#Ie.size&&this.resetModified(),"function"==typeof this.onAnnotationEditor){for(const t of this.#Ie.values())if(t instanceof kt)return;this.onAnnotationEditor(null)}}setValue(t,e){const i=this.#Ie.get(t);let s=!1;if(void 0!==i)for(const[t,n]of Object.entries(e))i[t]!==n&&(s=!0,i[t]=n);else s=!0,this.#Ie.set(t,e);s&&this.#Re(),e instanceof kt&&"function"==typeof this.onAnnotationEditor&&this.onAnnotationEditor(e.constructor._type)}has(t){return this.#Ie.has(t)}getAll(){return this.#Ie.size>0?O(this.#Ie):null}setAll(t){for(const[e,i]of Object.entries(t))this.setValue(e,i)}get size(){return this.#Ie.size}#Re(){this.#Me||(this.#Me=!0,"function"==typeof this.onSetModified&&this.onSetModified())}resetModified(){this.#Me&&(this.#Me=!1,"function"==typeof this.onResetModified&&this.onResetModified())}get print(){return new Nt(this)}get serializable(){if(0===this.#Ie.size)return Ft;const t=new Map,e=new Lt,i=[],s=Object.create(null);let n=!1;for(const[i,r]of this.#Ie){const a=r instanceof kt?r.serialize(!1,s):r;a&&(t.set(i,a),e.update(`${i}:${JSON.stringify(a)}`),n||=!!a.bitmap)}if(n)for(const e of t.values())e.bitmap&&i.push(e.bitmap);return t.size>0?{map:t,hash:e.hexdigest(),transfer:i}:Ft}get editorStats(){let t=null;const e=new Map;for(const i of this.#Ie.values()){if(!(i instanceof kt))continue;const s=i.telemetryFinalData;if(!s)continue;const{type:n}=s;e.has(n)||e.set(n,Object.getPrototypeOf(i).constructor),t||=Object.create(null);const r=t[n]||=new Map;for(const[t,e]of Object.entries(s)){if("type"===t)continue;let i=r.get(t);i||(i=new Map,r.set(t,i));const s=i.get(e)??0;i.set(e,s+1)}}for(const[i,s]of e)t[i]=s.computeTelemetryFinalData(t[i]);return t}resetModifiedIds(){this.#ke=null}get modifiedIds(){if(this.#ke)return this.#ke;const t=[];for(const e of this.#Ie.values())e instanceof kt&&e.annotationElementId&&e.serialize()&&t.push(e.annotationElementId);return this.#ke={ids:new Set(t),hash:t.join(",")}}}class Nt extends Ot{#Pe;constructor(t){super();const{map:e,hash:i,transfer:s}=t.serializable,n=structuredClone(e,s?{transfer:s}:null);this.#Pe={map:n,hash:i,transfer:s}}get print(){x("Should not call PrintAnnotationStorage.print")}get serializable(){return this.#Pe}get modifiedIds(){return C(this,"modifiedIds",{ids:new Set,hash:""})}}class Bt{#De=new Set;constructor({ownerDocument:t=globalThis.document,styleElement:e=null}){this._document=t,this.nativeFontFaces=new Set,this.styleElement=null,this.loadingRequests=[],this.loadTestFontId=0}addNativeFontFace(t){this.nativeFontFaces.add(t),this._document.fonts.add(t)}removeNativeFontFace(t){this.nativeFontFaces.delete(t),this._document.fonts.delete(t)}insertRule(t){this.styleElement||(this.styleElement=this._document.createElement("style"),this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement));const e=this.styleElement.sheet;e.insertRule(t,e.cssRules.length)}clear(){for(const t of this.nativeFontFaces)this._document.fonts.delete(t);this.nativeFontFaces.clear(),this.#De.clear(),this.styleElement&&(this.styleElement.remove(),this.styleElement=null)}async loadSystemFont({systemFontInfo:t,_inspectFont:e}){if(t&&!this.#De.has(t.loadedName))if(_(!this.disableFontFace,"loadSystemFont shouldn't be called when `disableFontFace` is set."),this.isFontLoadingAPISupported){const{loadedName:i,src:s,style:n}=t,r=new FontFace(i,s,n);this.addNativeFontFace(r);try{await r.load(),this.#De.add(i),e?.(t)}catch{w(`Cannot load system font: ${t.baseFontName}, installing it could help to improve PDF rendering.`),this.removeNativeFontFace(r)}}else x("Not implemented: loadSystemFont without the Font Loading API.")}async bind(t){if(t.attached||t.missingFile&&!t.systemFontInfo)return;if(t.attached=!0,t.systemFontInfo)return void await this.loadSystemFont(t);if(this.isFontLoadingAPISupported){const e=t.createNativeFontFace();if(e){this.addNativeFontFace(e);try{await e.loaded}catch(i){throw w(`Failed to load font '${e.family}': '${i}'.`),t.disableFontFace=!0,i}}return}const e=t.createFontFaceRule();if(e){if(this.insertRule(e),this.isSyncFontLoadingSupported)return;await new Promise((e=>{const i=this._queueLoadingCallback(e);this._prepareFontLoadEvent(t,i)}))}}get isFontLoadingAPISupported(){return C(this,"isFontLoadingAPISupported",!!this._document?.fonts)}get isSyncFontLoadingSupported(){let t=!1;return(n||"undefined"!=typeof navigator&&"string"==typeof navigator?.userAgent&&/Mozilla\/5.0.*?rv:\d+.*? Gecko/.test(navigator.userAgent))&&(t=!0),C(this,"isSyncFontLoadingSupported",t)}_queueLoadingCallback(t){const{loadingRequests:e}=this,i={done:!1,complete:function(){for(_(!i.done,"completeRequest() cannot be called twice."),i.done=!0;e.length>0&&e[0].done;){const t=e.shift();setTimeout(t.callback,0)}},callback:t};return e.push(i),i}get _loadTestFont(){return C(this,"_loadTestFont",atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA=="))}_prepareFontLoadEvent(t,e){function i(t,e){return t.charCodeAt(e)<<24|t.charCodeAt(e+1)<<16|t.charCodeAt(e+2)<<8|255&t.charCodeAt(e+3)}function s(t,e,i,s){return t.substring(0,e)+s+t.substring(e+i)}let n,r;const a=this._document.createElement("canvas");a.width=1,a.height=1;const o=a.getContext("2d");let h=0;const l=`lt${Date.now()}${this.loadTestFontId++}`;let c=this._loadTestFont;c=s(c,976,l.length,l);const d=1482184792;let u=i(c,16);for(n=0,r=l.length-3;n<r;n+=4)u=u-d+i(l,n)|0;var p;n<l.length&&(u=u-d+i(l+"XXX",n)|0),c=s(c,16,4,(p=u,String.fromCharCode(p>>24&255,p>>16&255,p>>8&255,255&p)));const g=`@font-face {font-family:"${l}";src:url(data:font/opentype;base64,${btoa(c)});}`;this.insertRule(g);const f=this._document.createElement("div");f.style.visibility="hidden",f.style.width=f.style.height="10px",f.style.position="absolute",f.style.top=f.style.left="0px";for(const e of[t.loadedName,l]){const t=this._document.createElement("span");t.textContent="Hi",t.style.fontFamily=e,f.append(t)}this._document.body.append(f),function t(e,i){if(++h>30)return w("Load test font never loaded."),void i();o.font="30px "+e,o.fillText(".",0,20),o.getImageData(0,0,1,1).data[3]>0?i():setTimeout(t.bind(null,e,i))}(l,(()=>{f.remove(),e.complete()}))}}class zt{constructor(t,{disableFontFace:e=!1,inspectFont:i=null}){this.compiledGlyphs=Object.create(null);for(const e in t)this[e]=t[e];this.disableFontFace=!0===e,this._inspectFont=i}createNativeFontFace(){if(!this.data||this.disableFontFace)return null;let t;if(this.cssFontInfo){const e={weight:this.cssFontInfo.fontWeight};this.cssFontInfo.italicAngle&&(e.style=`oblique ${this.cssFontInfo.italicAngle}deg`),t=new FontFace(this.cssFontInfo.fontFamily,this.data,e)}else t=new FontFace(this.loadedName,this.data,{});return this._inspectFont?.(this),t}createFontFaceRule(){if(!this.data||this.disableFontFace)return null;const t=L(this.data),e=`url(data:${this.mimetype};base64,${btoa(t)});`;let i;if(this.cssFontInfo){let t=`font-weight: ${this.cssFontInfo.fontWeight};`;this.cssFontInfo.italicAngle&&(t+=`font-style: oblique ${this.cssFontInfo.italicAngle}deg;`),i=`@font-face {font-family:"${this.cssFontInfo.fontFamily}";${t}src:${e}}`}else i=`@font-face {font-family:"${this.loadedName}";src:${e}}`;return this._inspectFont?.(this,e),i}getPathGenerator(t,e){if(void 0!==this.compiledGlyphs[e])return this.compiledGlyphs[e];let i;try{i=t.get(this.loadedName+"_path_"+e)}catch(t){w(`getPathGenerator - ignoring character: "${t}".`)}if(!Array.isArray(i)||0===i.length)return this.compiledGlyphs[e]=function(t,e){};const s=[];for(let t=0,e=i.length;t<e;)switch(i[t++]){case 0:{const[e,n,r,a,o,h]=i.slice(t,t+6);s.push((t=>t.bezierCurveTo(e,n,r,a,o,h))),t+=6}break;case 1:{const[e,n]=i.slice(t,t+2);s.push((t=>t.moveTo(e,n))),t+=2}break;case 2:{const[e,n]=i.slice(t,t+2);s.push((t=>t.lineTo(e,n))),t+=2}break;case 3:{const[e,n,r,a]=i.slice(t,t+4);s.push((t=>t.quadraticCurveTo(e,n,r,a))),t+=4}break;case 4:s.push((t=>t.restore()));break;case 5:s.push((t=>t.save()));break;case 6:_(2===s.length,"Scale command is only valid at the third position.");break;case 7:{const[e,n,r,a,o,h]=i.slice(t,t+6);s.push((t=>t.transform(e,n,r,a,o,h))),t+=6}break;case 8:{const[e,n]=i.slice(t,t+2);s.push((t=>t.translate(e,n))),t+=2}}return this.compiledGlyphs[e]=function(t,e){s[0](t),s[1](t),t.scale(e,-e);for(let e=2,i=s.length;e<i;e++)s[e](t)}}}if(n){var Ht=Promise.withResolvers(),jt=null;(async()=>{const t=await import("fs"),e=await import("http"),i=await import("https"),s=await import("url");let n,r;try{n=await import("canvas")}catch{}try{r=await import("path2d")}catch{}return new Map(Object.entries({fs:t,http:e,https:i,url:s,canvas:n,path2d:r}))})().then((t=>{if(jt=t,Ht.resolve(),!globalThis.DOMMatrix){const e=t.get("canvas")?.DOMMatrix;e?globalThis.DOMMatrix=e:w("Cannot polyfill `DOMMatrix`, rendering may be broken.")}if(!globalThis.Path2D){const e=t.get("canvas")?.CanvasRenderingContext2D,i=t.get("path2d")?.applyPath2DToCanvasRenderingContext,s=t.get("path2d")?.Path2D;e&&i&&s?(i(e),globalThis.Path2D=s):w("Cannot polyfill `Path2D`, rendering may be broken.")}}),(t=>{w(`loadPackages: ${t}`),jt=new Map,Ht.resolve()}))}class Ut{static get promise(){return Ht.promise}static get(t){return jt?.get(t)}}const $t=function(t){return Ut.get("fs").promises.readFile(t).then((t=>new Uint8Array(t)))},Wt="Fill",Gt="Stroke",Vt="Shading";function qt(t,e){if(!e)return;const i=e[2]-e[0],s=e[3]-e[1],n=new Path2D;n.rect(e[0],e[1],i,s),t.clip(n)}class Xt{getPattern(){x("Abstract method `getPattern` called.")}}class Kt extends Xt{constructor(t){super(),this._type=t[1],this._bbox=t[2],this._colorStops=t[3],this._p0=t[4],this._p1=t[5],this._r0=t[6],this._r1=t[7],this.matrix=null}_createGradient(t){let e;"axial"===this._type?e=t.createLinearGradient(this._p0[0],this._p0[1],this._p1[0],this._p1[1]):"radial"===this._type&&(e=t.createRadialGradient(this._p0[0],this._p0[1],this._r0,this._p1[0],this._p1[1],this._r1));for(const t of this._colorStops)e.addColorStop(t[0],t[1]);return e}getPattern(t,e,i,s){let n;if(s===Gt||s===Wt){const r=e.current.getClippedPathBoundingBox(s,ft(t))||[0,0,0,0],a=Math.ceil(r[2]-r[0])||1,o=Math.ceil(r[3]-r[1])||1,h=e.cachedCanvases.getCanvas("pattern",a,o),l=h.context;l.clearRect(0,0,l.canvas.width,l.canvas.height),l.beginPath(),l.rect(0,0,l.canvas.width,l.canvas.height),l.translate(-r[0],-r[1]),i=z.transform(i,[1,0,0,1,r[0],r[1]]),l.transform(...e.baseTransform),this.matrix&&l.transform(...this.matrix),qt(l,this._bbox),l.fillStyle=this._createGradient(l),l.fill(),n=t.createPattern(h.canvas,"no-repeat");const c=new DOMMatrix(i);n.setTransform(c)}else qt(t,this._bbox),n=this._createGradient(t);return n}}function Yt(t,e,i,s,n,r,a,o){const h=e.coords,l=e.colors,c=t.data,d=4*t.width;let u;h[i+1]>h[s+1]&&(u=i,i=s,s=u,u=r,r=a,a=u),h[s+1]>h[n+1]&&(u=s,s=n,n=u,u=a,a=o,o=u),h[i+1]>h[s+1]&&(u=i,i=s,s=u,u=r,r=a,a=u);const p=(h[i]+e.offsetX)*e.scaleX,g=(h[i+1]+e.offsetY)*e.scaleY,f=(h[s]+e.offsetX)*e.scaleX,m=(h[s+1]+e.offsetY)*e.scaleY,b=(h[n]+e.offsetX)*e.scaleX,v=(h[n+1]+e.offsetY)*e.scaleY;if(g>=v)return;const y=l[r],A=l[r+1],w=l[r+2],x=l[a],_=l[a+1],E=l[a+2],C=l[o],S=l[o+1],T=l[o+2],M=Math.round(g),k=Math.round(v);let I,R,P,D,L,F,O,N;for(let t=M;t<=k;t++){if(t<m){const e=t<g?0:(g-t)/(g-m);I=p-(p-f)*e,R=y-(y-x)*e,P=A-(A-_)*e,D=w-(w-E)*e}else{let e;e=t>v?1:m===v?0:(m-t)/(m-v),I=f-(f-b)*e,R=x-(x-C)*e,P=_-(_-S)*e,D=E-(E-T)*e}let e;e=t<g?0:t>v?1:(g-t)/(g-v),L=p-(p-b)*e,F=y-(y-C)*e,O=A-(A-S)*e,N=w-(w-T)*e;const i=Math.round(Math.min(I,L)),s=Math.round(Math.max(I,L));let n=d*t+4*i;for(let t=i;t<=s;t++)e=(I-t)/(I-L),e<0?e=0:e>1&&(e=1),c[n++]=R-(R-F)*e|0,c[n++]=P-(P-O)*e|0,c[n++]=D-(D-N)*e|0,c[n++]=255}}function Qt(t,e,i){const s=e.coords,n=e.colors;let r,a;switch(e.type){case"lattice":const o=e.verticesPerRow,h=Math.floor(s.length/o)-1,l=o-1;for(r=0;r<h;r++){let e=r*o;for(let r=0;r<l;r++,e++)Yt(t,i,s[e],s[e+1],s[e+o],n[e],n[e+1],n[e+o]),Yt(t,i,s[e+o+1],s[e+1],s[e+o],n[e+o+1],n[e+1],n[e+o])}break;case"triangles":for(r=0,a=s.length;r<a;r+=3)Yt(t,i,s[r],s[r+1],s[r+2],n[r],n[r+1],n[r+2]);break;default:throw new Error("illegal figure")}}class Jt extends Xt{constructor(t){super(),this._coords=t[2],this._colors=t[3],this._figures=t[4],this._bounds=t[5],this._bbox=t[7],this._background=t[8],this.matrix=null}_createMeshCanvas(t,e,i){const s=Math.floor(this._bounds[0]),n=Math.floor(this._bounds[1]),r=Math.ceil(this._bounds[2])-s,a=Math.ceil(this._bounds[3])-n,o=Math.min(Math.ceil(Math.abs(r*t[0]*1.1)),3e3),h=Math.min(Math.ceil(Math.abs(a*t[1]*1.1)),3e3),l=r/o,c=a/h,d={coords:this._coords,colors:this._colors,offsetX:-s,offsetY:-n,scaleX:1/l,scaleY:1/c},u=o+4,p=h+4,g=i.getCanvas("mesh",u,p),f=g.context,m=f.createImageData(o,h);if(e){const t=m.data;for(let i=0,s=t.length;i<s;i+=4)t[i]=e[0],t[i+1]=e[1],t[i+2]=e[2],t[i+3]=255}for(const t of this._figures)Qt(m,t,d);return f.putImageData(m,2,2),{canvas:g.canvas,offsetX:s-2*l,offsetY:n-2*c,scaleX:l,scaleY:c}}getPattern(t,e,i,s){let n;if(qt(t,this._bbox),s===Vt)n=z.singularValueDecompose2dScale(ft(t));else if(n=z.singularValueDecompose2dScale(e.baseTransform),this.matrix){const t=z.singularValueDecompose2dScale(this.matrix);n=[n[0]*t[0],n[1]*t[1]]}const r=this._createMeshCanvas(n,s===Vt?null:this._background,e.cachedCanvases);return s!==Vt&&(t.setTransform(...e.baseTransform),this.matrix&&t.transform(...this.matrix)),t.translate(r.offsetX,r.offsetY),t.scale(r.scaleX,r.scaleY),t.createPattern(r.canvas,"no-repeat")}}class Zt extends Xt{getPattern(){return"hotpink"}}class te{static MAX_PATTERN_SIZE=3e3;constructor(t,e,i,s,n){this.operatorList=t[2],this.matrix=t[3],this.bbox=t[4],this.xstep=t[5],this.ystep=t[6],this.paintType=t[7],this.tilingType=t[8],this.color=e,this.ctx=i,this.canvasGraphicsFactory=s,this.baseTransform=n}createPatternCanvas(t){const{bbox:e,operatorList:i,paintType:s,tilingType:n,color:r,canvasGraphicsFactory:a}=this;let{xstep:o,ystep:h}=this;o=Math.abs(o),h=Math.abs(h),A("TilingType: "+n);const l=e[0],c=e[1],d=e[2],u=e[3],p=d-l,g=u-c,f=z.singularValueDecompose2dScale(this.matrix),m=z.singularValueDecompose2dScale(this.baseTransform),b=f[0]*m[0],v=f[1]*m[1];let y=p,w=g,x=!1,_=!1;const E=Math.ceil(o*b),C=Math.ceil(h*v);E>=Math.ceil(p*b)?y=o:x=!0,C>=Math.ceil(g*v)?w=h:_=!0;const S=this.getSizeAndScale(y,this.ctx.canvas.width,b),T=this.getSizeAndScale(w,this.ctx.canvas.height,v),M=t.cachedCanvases.getCanvas("pattern",S.size,T.size),k=M.context,I=a.createCanvasGraphics(k);if(I.groupLevel=t.groupLevel,this.setFillAndStrokeStyleToContext(I,s,r),k.translate(-S.scale*l,-T.scale*c),I.transform(S.scale,0,0,T.scale,0,0),k.save(),this.clipBbox(I,l,c,d,u),I.baseTransform=ft(I.ctx),I.executeOperatorList(i),I.endDrawing(),k.restore(),x||_){const e=M.canvas;x&&(y=o),_&&(w=h);const i=this.getSizeAndScale(y,this.ctx.canvas.width,b),s=this.getSizeAndScale(w,this.ctx.canvas.height,v),n=i.size,r=s.size,a=t.cachedCanvases.getCanvas("pattern-workaround",n,r),d=a.context,u=x?Math.floor(p/o):0,f=_?Math.floor(g/h):0;for(let t=0;t<=u;t++)for(let i=0;i<=f;i++)d.drawImage(e,n*t,r*i,n,r,0,0,n,r);return{canvas:a.canvas,scaleX:i.scale,scaleY:s.scale,offsetX:l,offsetY:c}}return{canvas:M.canvas,scaleX:S.scale,scaleY:T.scale,offsetX:l,offsetY:c}}getSizeAndScale(t,e,i){const s=Math.max(te.MAX_PATTERN_SIZE,e);let n=Math.ceil(t*i);return n>=s?n=s:i=n/t,{scale:i,size:n}}clipBbox(t,e,i,s,n){const r=s-e,a=n-i;t.ctx.rect(e,i,r,a),t.current.updateRectMinMax(ft(t.ctx),[e,i,s,n]),t.clip(),t.endPath()}setFillAndStrokeStyleToContext(t,e,i){const s=t.ctx,n=t.current;switch(e){case 1:const t=this.ctx;s.fillStyle=t.fillStyle,s.strokeStyle=t.strokeStyle,n.fillColor=t.fillStyle,n.strokeColor=t.strokeStyle;break;case 2:const r=z.makeHexColor(i[0],i[1],i[2]);s.fillStyle=r,s.strokeStyle=r,n.fillColor=r,n.strokeColor=r;break;default:throw new P(`Unsupported paint type: ${e}`)}}getPattern(t,e,i,s){let n=i;s!==Vt&&(n=z.transform(n,e.baseTransform),this.matrix&&(n=z.transform(n,this.matrix)));const r=this.createPatternCanvas(e);let a=new DOMMatrix(n);a=a.translate(r.offsetX,r.offsetY),a=a.scale(1/r.scaleX,1/r.scaleY);const o=t.createPattern(r.canvas,"repeat");return o.setTransform(a),o}}function ee({src:t,srcPos:e=0,dest:i,width:s,height:n,nonBlackColor:r=4294967295,inverseDecode:a=!1}){const o=N.isLittleEndian?4278190080:255,[h,l]=a?[r,o]:[o,r],c=s>>3,d=7&s,u=t.length;i=new Uint32Array(i.buffer);let p=0;for(let s=0;s<n;s++){for(const s=e+c;e<s;e++){const s=e<u?t[e]:255;i[p++]=128&s?l:h,i[p++]=64&s?l:h,i[p++]=32&s?l:h,i[p++]=16&s?l:h,i[p++]=8&s?l:h,i[p++]=4&s?l:h,i[p++]=2&s?l:h,i[p++]=1&s?l:h}if(0===d)continue;const s=e<u?t[e++]:255;for(let t=0;t<d;t++)i[p++]=s&1<<7-t?l:h}return{srcPos:e,destPos:p}}const ie=16;class se{constructor(t){this.canvasFactory=t,this.cache=Object.create(null)}getCanvas(t,e,i){let s;return void 0!==this.cache[t]?(s=this.cache[t],this.canvasFactory.reset(s,e,i)):(s=this.canvasFactory.create(e,i),this.cache[t]=s),s}delete(t){delete this.cache[t]}clear(){for(const t in this.cache){const e=this.cache[t];this.canvasFactory.destroy(e),delete this.cache[t]}}}function ne(t,e,i,s,n,r,a,o,h,l){const[c,d,u,p,g,f]=ft(t);if(0===d&&0===u){const m=a*c+g,b=Math.round(m),v=o*p+f,y=Math.round(v),A=(a+h)*c+g,w=Math.abs(Math.round(A)-b)||1,x=(o+l)*p+f,_=Math.abs(Math.round(x)-y)||1;return t.setTransform(Math.sign(c),0,0,Math.sign(p),b,y),t.drawImage(e,i,s,n,r,0,0,w,_),t.setTransform(c,d,u,p,g,f),[w,_]}if(0===c&&0===p){const m=o*u+g,b=Math.round(m),v=a*d+f,y=Math.round(v),A=(o+l)*u+g,w=Math.abs(Math.round(A)-b)||1,x=(a+h)*d+f,_=Math.abs(Math.round(x)-y)||1;return t.setTransform(0,Math.sign(d),Math.sign(u),0,b,y),t.drawImage(e,i,s,n,r,0,0,_,w),t.setTransform(c,d,u,p,g,f),[_,w]}return t.drawImage(e,i,s,n,r,a,o,h,l),[Math.hypot(c,d)*h,Math.hypot(u,p)*l]}class re{constructor(t,e){this.alphaIsShape=!1,this.fontSize=0,this.fontSizeScale=1,this.textMatrix=r,this.textMatrixScale=1,this.fontMatrix=a,this.leading=0,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRenderingMode=0,this.textRise=0,this.fillColor="#000000",this.strokeColor="#000000",this.patternFill=!1,this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.activeSMask=null,this.transferMaps="none",this.startNewPathAndClipBox([0,0,t,e])}clone(){const t=Object.create(this);return t.clipBox=this.clipBox.slice(),t}setCurrentPoint(t,e){this.x=t,this.y=e}updatePathMinMax(t,e,i){[e,i]=z.applyTransform([e,i],t),this.minX=Math.min(this.minX,e),this.minY=Math.min(this.minY,i),this.maxX=Math.max(this.maxX,e),this.maxY=Math.max(this.maxY,i)}updateRectMinMax(t,e){const i=z.applyTransform(e,t),s=z.applyTransform(e.slice(2),t),n=z.applyTransform([e[0],e[3]],t),r=z.applyTransform([e[2],e[1]],t);this.minX=Math.min(this.minX,i[0],s[0],n[0],r[0]),this.minY=Math.min(this.minY,i[1],s[1],n[1],r[1]),this.maxX=Math.max(this.maxX,i[0],s[0],n[0],r[0]),this.maxY=Math.max(this.maxY,i[1],s[1],n[1],r[1])}updateScalingPathMinMax(t,e){z.scaleMinMax(t,e),this.minX=Math.min(this.minX,e[0]),this.minY=Math.min(this.minY,e[1]),this.maxX=Math.max(this.maxX,e[2]),this.maxY=Math.max(this.maxY,e[3])}updateCurvePathMinMax(t,e,i,s,n,r,a,o,h,l){const c=z.bezierBoundingBox(e,i,s,n,r,a,o,h,l);l||this.updateRectMinMax(t,c)}getPathBoundingBox(t=Wt,e=null){const i=[this.minX,this.minY,this.maxX,this.maxY];if(t===Gt){e||x("Stroke bounding box must include transform.");const t=z.singularValueDecompose2dScale(e),s=t[0]*this.lineWidth/2,n=t[1]*this.lineWidth/2;i[0]-=s,i[1]-=n,i[2]+=s,i[3]+=n}return i}updateClipFromPath(){const t=z.intersect(this.clipBox,this.getPathBoundingBox());this.startNewPathAndClipBox(t||[0,0,0,0])}isEmptyClip(){return this.minX===1/0}startNewPathAndClipBox(t){this.clipBox=t,this.minX=1/0,this.minY=1/0,this.maxX=0,this.maxY=0}getClippedPathBoundingBox(t=Wt,e=null){return z.intersect(this.clipBox,this.getPathBoundingBox(t,e))}}function ae(t,e){if("undefined"!=typeof ImageData&&e instanceof ImageData)return void t.putImageData(e,0,0);const i=e.height,s=e.width,n=i%ie,r=(i-n)/ie,a=0===n?r:r+1,o=t.createImageData(s,ie);let h,l=0;const c=e.data,d=o.data;let p,g,f,m;if(e.kind===u.GRAYSCALE_1BPP){const e=c.byteLength,i=new Uint32Array(d.buffer,0,d.byteLength>>2),u=i.length,m=s+7>>3,b=4294967295,v=N.isLittleEndian?4278190080:255;for(p=0;p<a;p++){for(f=p<r?ie:n,h=0,g=0;g<f;g++){const t=e-l;let n=0;const r=t>m?s:8*t-7,a=-8&r;let o=0,d=0;for(;n<a;n+=8)d=c[l++],i[h++]=128&d?b:v,i[h++]=64&d?b:v,i[h++]=32&d?b:v,i[h++]=16&d?b:v,i[h++]=8&d?b:v,i[h++]=4&d?b:v,i[h++]=2&d?b:v,i[h++]=1&d?b:v;for(;n<r;n++)0===o&&(d=c[l++],o=128),i[h++]=d&o?b:v,o>>=1}for(;h<u;)i[h++]=0;t.putImageData(o,0,p*ie)}}else if(e.kind===u.RGBA_32BPP){for(g=0,m=s*ie*4,p=0;p<r;p++)d.set(c.subarray(l,l+m)),l+=m,t.putImageData(o,0,g),g+=ie;p<a&&(m=s*n*4,d.set(c.subarray(l,l+m)),t.putImageData(o,0,g))}else{if(e.kind!==u.RGB_24BPP)throw new Error(`bad image kind: ${e.kind}`);for(f=ie,m=s*f,p=0;p<a;p++){for(p>=r&&(f=n,m=s*f),h=0,g=m;g--;)d[h++]=c[l++],d[h++]=c[l++],d[h++]=c[l++],d[h++]=255;t.putImageData(o,0,p*ie)}}}function oe(t,e){if(e.bitmap)return void t.drawImage(e.bitmap,0,0);const i=e.height,s=e.width,n=i%ie,r=(i-n)/ie,a=0===n?r:r+1,o=t.createImageData(s,ie);let h=0;const l=e.data,c=o.data;for(let e=0;e<a;e++){const i=e<r?ie:n;({srcPos:h}=ee({src:l,srcPos:h,dest:c,width:s,height:i,nonBlackColor:0})),t.putImageData(o,0,e*ie)}}function he(t,e){const i=["strokeStyle","fillStyle","fillRule","globalAlpha","lineWidth","lineCap","lineJoin","miterLimit","globalCompositeOperation","font","filter"];for(const s of i)void 0!==t[s]&&(e[s]=t[s]);void 0!==t.setLineDash&&(e.setLineDash(t.getLineDash()),e.lineDashOffset=t.lineDashOffset)}function le(t){if(t.strokeStyle=t.fillStyle="#000000",t.fillRule="nonzero",t.globalAlpha=1,t.lineWidth=1,t.lineCap="butt",t.lineJoin="miter",t.miterLimit=10,t.globalCompositeOperation="source-over",t.font="10px sans-serif",void 0!==t.setLineDash&&(t.setLineDash([]),t.lineDashOffset=0),!n){const{filter:e}=t;"none"!==e&&""!==e&&(t.filter="none")}}function ce(t,e){if(e)return!0;const i=z.singularValueDecompose2dScale(t);i[0]=Math.fround(i[0]),i[1]=Math.fround(i[1]);const s=Math.fround((globalThis.devicePixelRatio||1)*Y.PDF_TO_CSS_UNITS);return i[0]<=s&&i[1]<=s}const de=["butt","round","square"],ue=["miter","round","bevel"],pe={},ge={};class fe{constructor(t,e,i,s,n,{optionalContentConfig:r,markedContentStack:a=null},o,h){this.ctx=t,this.current=new re(this.ctx.canvas.width,this.ctx.canvas.height),this.stateStack=[],this.pendingClip=null,this.pendingEOFill=!1,this.res=null,this.xobjs=null,this.commonObjs=e,this.objs=i,this.canvasFactory=s,this.filterFactory=n,this.groupStack=[],this.processingType3=null,this.baseTransform=null,this.baseTransformStack=[],this.groupLevel=0,this.smaskStack=[],this.smaskCounter=0,this.tempSMask=null,this.suspendedCtx=null,this.contentVisible=!0,this.markedContentStack=a||[],this.optionalContentConfig=r,this.cachedCanvases=new se(this.canvasFactory),this.cachedPatterns=new Map,this.annotationCanvasMap=o,this.viewportScale=1,this.outputScaleX=1,this.outputScaleY=1,this.pageColors=h,this._cachedScaleForStroking=[-1,0],this._cachedGetSinglePixelWidth=null,this._cachedBitmapsMap=new Map}getObject(t,e=null){return"string"==typeof t?t.startsWith("g_")?this.commonObjs.get(t):this.objs.get(t):e}beginDrawing({transform:t,viewport:e,transparency:i=!1,background:s=null}){const n=this.ctx.canvas.width,r=this.ctx.canvas.height,a=this.ctx.fillStyle;if(this.ctx.fillStyle=s||"#ffffff",this.ctx.fillRect(0,0,n,r),this.ctx.fillStyle=a,i){const t=this.cachedCanvases.getCanvas("transparent",n,r);this.compositeCtx=this.ctx,this.transparentCanvas=t.canvas,this.ctx=t.context,this.ctx.save(),this.ctx.transform(...ft(this.compositeCtx))}this.ctx.save(),le(this.ctx),t&&(this.ctx.transform(...t),this.outputScaleX=t[0],this.outputScaleY=t[0]),this.ctx.transform(...e.transform),this.viewportScale=e.scale,this.baseTransform=ft(this.ctx)}executeOperatorList(t,e,i,s){const n=t.argsArray,r=t.fnArray;let a=e||0;const o=n.length;if(o===a)return a;const h=o-a>10&&"function"==typeof i,l=h?Date.now()+15:0;let c=0;const d=this.commonObjs,u=this.objs;let p;for(;;){if(void 0!==s&&a===s.nextBreakPoint)return s.breakIt(a,i),a;if(p=r[a],p!==f.dependency)this[p].apply(this,n[a]);else for(const t of n[a]){const e=t.startsWith("g_")?d:u;if(!e.has(t))return e.get(t,i),a}if(a++,a===o)return a;if(h&&++c>10){if(Date.now()>l)return i(),a;c=0}}}#Le(){for(;this.stateStack.length||this.inSMaskMode;)this.restore();this.current.activeSMask=null,this.ctx.restore(),this.transparentCanvas&&(this.ctx=this.compositeCtx,this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.drawImage(this.transparentCanvas,0,0),this.ctx.restore(),this.transparentCanvas=null)}endDrawing(){this.#Le(),this.cachedCanvases.clear(),this.cachedPatterns.clear();for(const t of this._cachedBitmapsMap.values()){for(const e of t.values())"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement&&(e.width=e.height=0);t.clear()}this._cachedBitmapsMap.clear(),this.#Fe()}#Fe(){if(this.pageColors){const t=this.filterFactory.addHCMFilter(this.pageColors.foreground,this.pageColors.background);if("none"!==t){const e=this.ctx.filter;this.ctx.filter=t,this.ctx.drawImage(this.ctx.canvas,0,0),this.ctx.filter=e}}}_scaleImage(t,e){const i=t.width,s=t.height;let n,r,a=Math.max(Math.hypot(e[0],e[1]),1),o=Math.max(Math.hypot(e[2],e[3]),1),h=i,l=s,c="prescale1";for(;a>2&&h>1||o>2&&l>1;){let e=h,i=l;a>2&&h>1&&(e=h>=16384?Math.floor(h/2)-1||1:Math.ceil(h/2),a/=h/e),o>2&&l>1&&(i=l>=16384?Math.floor(l/2)-1||1:Math.ceil(l)/2,o/=l/i),n=this.cachedCanvases.getCanvas(c,e,i),r=n.context,r.clearRect(0,0,e,i),r.drawImage(t,0,0,h,l,0,0,e,i),t=n.canvas,h=e,l=i,c="prescale1"===c?"prescale2":"prescale1"}return{img:t,paintWidth:h,paintHeight:l}}_createMaskCanvas(t){const e=this.ctx,{width:i,height:s}=t,n=this.current.fillColor,r=this.current.patternFill,a=ft(e);let o,h,l,c;if((t.bitmap||t.data)&&t.count>1){const e=t.bitmap||t.data.buffer;h=JSON.stringify(r?a:[a.slice(0,4),n]),o=this._cachedBitmapsMap.get(e),o||(o=new Map,this._cachedBitmapsMap.set(e,o));const i=o.get(h);if(i&&!r)return{canvas:i,offsetX:Math.round(Math.min(a[0],a[2])+a[4]),offsetY:Math.round(Math.min(a[1],a[3])+a[5])};l=i}l||(c=this.cachedCanvases.getCanvas("maskCanvas",i,s),oe(c.context,t));let d=z.transform(a,[1/i,0,0,-1/s,0,0]);d=z.transform(d,[1,0,0,1,0,-s]);const[u,p,g,f]=z.getAxialAlignedBoundingBox([0,0,i,s],d),m=Math.round(g-u)||1,b=Math.round(f-p)||1,v=this.cachedCanvases.getCanvas("fillCanvas",m,b),y=v.context,A=u,w=p;y.translate(-A,-w),y.transform(...d),l||(l=this._scaleImage(c.canvas,mt(y)),l=l.img,o&&r&&o.set(h,l)),y.imageSmoothingEnabled=ce(ft(y),t.interpolate),ne(y,l,0,0,l.width,l.height,0,0,i,s),y.globalCompositeOperation="source-in";const x=z.transform(mt(y),[1,0,0,1,-A,-w]);return y.fillStyle=r?n.getPattern(e,this,x,Wt):n,y.fillRect(0,0,i,s),o&&!r&&(this.cachedCanvases.delete("fillCanvas"),o.set(h,v.canvas)),{canvas:v.canvas,offsetX:Math.round(A),offsetY:Math.round(w)}}setLineWidth(t){t!==this.current.lineWidth&&(this._cachedScaleForStroking[0]=-1),this.current.lineWidth=t,this.ctx.lineWidth=t}setLineCap(t){this.ctx.lineCap=de[t]}setLineJoin(t){this.ctx.lineJoin=ue[t]}setMiterLimit(t){this.ctx.miterLimit=t}setDash(t,e){const i=this.ctx;void 0!==i.setLineDash&&(i.setLineDash(t),i.lineDashOffset=e)}setRenderingIntent(t){}setFlatness(t){}setGState(t){for(const[e,i]of t)switch(e){case"LW":this.setLineWidth(i);break;case"LC":this.setLineCap(i);break;case"LJ":this.setLineJoin(i);break;case"ML":this.setMiterLimit(i);break;case"D":this.setDash(i[0],i[1]);break;case"RI":this.setRenderingIntent(i);break;case"FL":this.setFlatness(i);break;case"Font":this.setFont(i[0],i[1]);break;case"CA":this.current.strokeAlpha=i;break;case"ca":this.current.fillAlpha=i,this.ctx.globalAlpha=i;break;case"BM":this.ctx.globalCompositeOperation=i;break;case"SMask":this.current.activeSMask=i?this.tempSMask:null,this.tempSMask=null,this.checkSMaskState();break;case"TR":this.ctx.filter=this.current.transferMaps=this.filterFactory.addFilter(i)}}get inSMaskMode(){return!!this.suspendedCtx}checkSMaskState(){const t=this.inSMaskMode;this.current.activeSMask&&!t?this.beginSMaskMode():!this.current.activeSMask&&t&&this.endSMaskMode()}beginSMaskMode(){if(this.inSMaskMode)throw new Error("beginSMaskMode called while already in smask mode");const t=this.ctx.canvas.width,e=this.ctx.canvas.height,i="smaskGroupAt"+this.groupLevel,s=this.cachedCanvases.getCanvas(i,t,e);this.suspendedCtx=this.ctx,this.ctx=s.context;const n=this.ctx;n.setTransform(...ft(this.suspendedCtx)),he(this.suspendedCtx,n),function(t,e){if(t._removeMirroring)throw new Error("Context is already forwarding operations.");t.__originalSave=t.save,t.__originalRestore=t.restore,t.__originalRotate=t.rotate,t.__originalScale=t.scale,t.__originalTranslate=t.translate,t.__originalTransform=t.transform,t.__originalSetTransform=t.setTransform,t.__originalResetTransform=t.resetTransform,t.__originalClip=t.clip,t.__originalMoveTo=t.moveTo,t.__originalLineTo=t.lineTo,t.__originalBezierCurveTo=t.bezierCurveTo,t.__originalRect=t.rect,t.__originalClosePath=t.closePath,t.__originalBeginPath=t.beginPath,t._removeMirroring=()=>{t.save=t.__originalSave,t.restore=t.__originalRestore,t.rotate=t.__originalRotate,t.scale=t.__originalScale,t.translate=t.__originalTranslate,t.transform=t.__originalTransform,t.setTransform=t.__originalSetTransform,t.resetTransform=t.__originalResetTransform,t.clip=t.__originalClip,t.moveTo=t.__originalMoveTo,t.lineTo=t.__originalLineTo,t.bezierCurveTo=t.__originalBezierCurveTo,t.rect=t.__originalRect,t.closePath=t.__originalClosePath,t.beginPath=t.__originalBeginPath,delete t._removeMirroring},t.save=function(){e.save(),this.__originalSave()},t.restore=function(){e.restore(),this.__originalRestore()},t.translate=function(t,i){e.translate(t,i),this.__originalTranslate(t,i)},t.scale=function(t,i){e.scale(t,i),this.__originalScale(t,i)},t.transform=function(t,i,s,n,r,a){e.transform(t,i,s,n,r,a),this.__originalTransform(t,i,s,n,r,a)},t.setTransform=function(t,i,s,n,r,a){e.setTransform(t,i,s,n,r,a),this.__originalSetTransform(t,i,s,n,r,a)},t.resetTransform=function(){e.resetTransform(),this.__originalResetTransform()},t.rotate=function(t){e.rotate(t),this.__originalRotate(t)},t.clip=function(t){e.clip(t),this.__originalClip(t)},t.moveTo=function(t,i){e.moveTo(t,i),this.__originalMoveTo(t,i)},t.lineTo=function(t,i){e.lineTo(t,i),this.__originalLineTo(t,i)},t.bezierCurveTo=function(t,i,s,n,r,a){e.bezierCurveTo(t,i,s,n,r,a),this.__originalBezierCurveTo(t,i,s,n,r,a)},t.rect=function(t,i,s,n){e.rect(t,i,s,n),this.__originalRect(t,i,s,n)},t.closePath=function(){e.closePath(),this.__originalClosePath()},t.beginPath=function(){e.beginPath(),this.__originalBeginPath()}}(n,this.suspendedCtx),this.setGState([["BM","source-over"],["ca",1],["CA",1]])}endSMaskMode(){if(!this.inSMaskMode)throw new Error("endSMaskMode called while not in smask mode");this.ctx._removeMirroring(),he(this.ctx,this.suspendedCtx),this.ctx=this.suspendedCtx,this.suspendedCtx=null}compose(t){if(!this.current.activeSMask)return;t?(t[0]=Math.floor(t[0]),t[1]=Math.floor(t[1]),t[2]=Math.ceil(t[2]),t[3]=Math.ceil(t[3])):t=[0,0,this.ctx.canvas.width,this.ctx.canvas.height];const e=this.current.activeSMask,i=this.suspendedCtx;this.composeSMask(i,e,this.ctx,t),this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.restore()}composeSMask(t,e,i,s){const n=s[0],r=s[1],a=s[2]-n,o=s[3]-r;0!==a&&0!==o&&(this.genericComposeSMask(e.context,i,a,o,e.subtype,e.backdrop,e.transferMap,n,r,e.offsetX,e.offsetY),t.save(),t.globalAlpha=1,t.globalCompositeOperation="source-over",t.setTransform(1,0,0,1,0,0),t.drawImage(i.canvas,0,0),t.restore())}genericComposeSMask(t,e,i,s,n,r,a,o,h,l,c){let d=t.canvas,u=o-l,p=h-c;if(r)if(u<0||p<0||u+i>d.width||p+s>d.height){const t=this.cachedCanvases.getCanvas("maskExtension",i,s),e=t.context;e.drawImage(d,-u,-p),r.some((t=>0!==t))&&(e.globalCompositeOperation="destination-atop",e.fillStyle=z.makeHexColor(...r),e.fillRect(0,0,i,s),e.globalCompositeOperation="source-over"),d=t.canvas,u=p=0}else if(r.some((t=>0!==t))){t.save(),t.globalAlpha=1,t.setTransform(1,0,0,1,0,0);const e=new Path2D;e.rect(u,p,i,s),t.clip(e),t.globalCompositeOperation="destination-atop",t.fillStyle=z.makeHexColor(...r),t.fillRect(u,p,i,s),t.restore()}e.save(),e.globalAlpha=1,e.setTransform(1,0,0,1,0,0),"Alpha"===n&&a?e.filter=this.filterFactory.addAlphaFilter(a):"Luminosity"===n&&(e.filter=this.filterFactory.addLuminosityFilter(a));const g=new Path2D;g.rect(o,h,i,s),e.clip(g),e.globalCompositeOperation="destination-in",e.drawImage(d,u,p,i,s,o,h,i,s),e.restore()}save(){this.inSMaskMode?(he(this.ctx,this.suspendedCtx),this.suspendedCtx.save()):this.ctx.save();const t=this.current;this.stateStack.push(t),this.current=t.clone()}restore(){0===this.stateStack.length&&this.inSMaskMode&&this.endSMaskMode(),0!==this.stateStack.length&&(this.current=this.stateStack.pop(),this.inSMaskMode?(this.suspendedCtx.restore(),he(this.suspendedCtx,this.ctx)):this.ctx.restore(),this.checkSMaskState(),this.pendingClip=null,this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null)}transform(t,e,i,s,n,r){this.ctx.transform(t,e,i,s,n,r),this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null}constructPath(t,e,i){const s=this.ctx,n=this.current;let r,a,o=n.x,h=n.y;const l=ft(s),c=0===l[0]&&0===l[3]||0===l[1]&&0===l[2],d=c?i.slice(0):null;for(let i=0,u=0,p=t.length;i<p;i++)switch(0|t[i]){case f.rectangle:o=e[u++],h=e[u++];const t=e[u++],i=e[u++],p=o+t,g=h+i;s.moveTo(o,h),0===t||0===i?s.lineTo(p,g):(s.lineTo(p,h),s.lineTo(p,g),s.lineTo(o,g)),c||n.updateRectMinMax(l,[o,h,p,g]),s.closePath();break;case f.moveTo:o=e[u++],h=e[u++],s.moveTo(o,h),c||n.updatePathMinMax(l,o,h);break;case f.lineTo:o=e[u++],h=e[u++],s.lineTo(o,h),c||n.updatePathMinMax(l,o,h);break;case f.curveTo:r=o,a=h,o=e[u+4],h=e[u+5],s.bezierCurveTo(e[u],e[u+1],e[u+2],e[u+3],o,h),n.updateCurvePathMinMax(l,r,a,e[u],e[u+1],e[u+2],e[u+3],o,h,d),u+=6;break;case f.curveTo2:r=o,a=h,s.bezierCurveTo(o,h,e[u],e[u+1],e[u+2],e[u+3]),n.updateCurvePathMinMax(l,r,a,o,h,e[u],e[u+1],e[u+2],e[u+3],d),o=e[u+2],h=e[u+3],u+=4;break;case f.curveTo3:r=o,a=h,o=e[u+2],h=e[u+3],s.bezierCurveTo(e[u],e[u+1],o,h,o,h),n.updateCurvePathMinMax(l,r,a,e[u],e[u+1],o,h,o,h,d),u+=4;break;case f.closePath:s.closePath()}c&&n.updateScalingPathMinMax(l,d),n.setCurrentPoint(o,h)}closePath(){this.ctx.closePath()}stroke(t=!0){const e=this.ctx,i=this.current.strokeColor;e.globalAlpha=this.current.strokeAlpha,this.contentVisible&&("object"==typeof i&&i?.getPattern?(e.save(),e.strokeStyle=i.getPattern(e,this,mt(e),Gt),this.rescaleAndStroke(!1),e.restore()):this.rescaleAndStroke(!0)),t&&this.consumePath(this.current.getClippedPathBoundingBox()),e.globalAlpha=this.current.fillAlpha}closeStroke(){this.closePath(),this.stroke()}fill(t=!0){const e=this.ctx,i=this.current.fillColor;let s=!1;this.current.patternFill&&(e.save(),e.fillStyle=i.getPattern(e,this,mt(e),Wt),s=!0);const n=this.current.getClippedPathBoundingBox();this.contentVisible&&null!==n&&(this.pendingEOFill?(e.fill("evenodd"),this.pendingEOFill=!1):e.fill()),s&&e.restore(),t&&this.consumePath(n)}eoFill(){this.pendingEOFill=!0,this.fill()}fillStroke(){this.fill(!1),this.stroke(!1),this.consumePath()}eoFillStroke(){this.pendingEOFill=!0,this.fillStroke()}closeFillStroke(){this.closePath(),this.fillStroke()}closeEOFillStroke(){this.pendingEOFill=!0,this.closePath(),this.fillStroke()}endPath(){this.consumePath()}clip(){this.pendingClip=pe}eoClip(){this.pendingClip=ge}beginText(){this.current.textMatrix=r,this.current.textMatrixScale=1,this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}endText(){const t=this.pendingTextPaths,e=this.ctx;if(void 0!==t){e.save(),e.beginPath();for(const i of t)e.setTransform(...i.transform),e.translate(i.x,i.y),i.addToPath(e,i.fontSize);e.restore(),e.clip(),e.beginPath(),delete this.pendingTextPaths}else e.beginPath()}setCharSpacing(t){this.current.charSpacing=t}setWordSpacing(t){this.current.wordSpacing=t}setHScale(t){this.current.textHScale=t/100}setLeading(t){this.current.leading=-t}setFont(t,e){const i=this.commonObjs.get(t),s=this.current;if(!i)throw new Error(`Can't find font for ${t}`);if(s.fontMatrix=i.fontMatrix||a,0!==s.fontMatrix[0]&&0!==s.fontMatrix[3]||w("Invalid font matrix for font "+t),e<0?(e=-e,s.fontDirection=-1):s.fontDirection=1,this.current.font=i,this.current.fontSize=e,i.isType3Font)return;const n=i.loadedName||"sans-serif",r=i.systemFontInfo?.css||`"${n}", ${i.fallbackName}`;let o="normal";i.black?o="900":i.bold&&(o="bold");const h=i.italic?"italic":"normal";let l=e;e<16?l=16:e>100&&(l=100),this.current.fontSizeScale=e/l,this.ctx.font=`${h} ${o} ${l}px ${r}`}setTextRenderingMode(t){this.current.textRenderingMode=t}setTextRise(t){this.current.textRise=t}moveText(t,e){this.current.x=this.current.lineX+=t,this.current.y=this.current.lineY+=e}setLeadingMoveText(t,e){this.setLeading(-e),this.moveText(t,e)}setTextMatrix(t,e,i,s,n,r){this.current.textMatrix=[t,e,i,s,n,r],this.current.textMatrixScale=Math.hypot(t,e),this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}nextLine(){this.moveText(0,this.current.leading)}paintChar(t,e,i,s){const n=this.ctx,r=this.current,a=r.font,o=r.textRenderingMode,h=r.fontSize/r.fontSizeScale,l=3&o,c=!!(4&o),d=r.patternFill&&!a.missingFile;let u;(a.disableFontFace||c||d)&&(u=a.getPathGenerator(this.commonObjs,t)),a.disableFontFace||d?(n.save(),n.translate(e,i),n.beginPath(),u(n,h),s&&n.setTransform(...s),0!==l&&2!==l||n.fill(),1!==l&&2!==l||n.stroke(),n.restore()):(0!==l&&2!==l||n.fillText(t,e,i),1!==l&&2!==l||n.strokeText(t,e,i)),c&&(this.pendingTextPaths||=[]).push({transform:ft(n),x:e,y:i,fontSize:h,addToPath:u})}get isFontSubpixelAAEnabled(){const{context:t}=this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled",10,10);t.scale(1.5,1),t.fillText("I",0,10);const e=t.getImageData(0,0,10,10).data;let i=!1;for(let t=3;t<e.length;t+=4)if(e[t]>0&&e[t]<255){i=!0;break}return C(this,"isFontSubpixelAAEnabled",i)}showText(t){const e=this.current,i=e.font;if(i.isType3Font)return this.showType3Text(t);const s=e.fontSize;if(0===s)return;const n=this.ctx,r=e.fontSizeScale,a=e.charSpacing,o=e.wordSpacing,h=e.fontDirection,l=e.textHScale*h,c=t.length,d=i.vertical,u=d?1:-1,p=i.defaultVMetrics,g=s*e.fontMatrix[0],f=0===e.textRenderingMode&&!i.disableFontFace&&!e.patternFill;let m;if(n.save(),n.transform(...e.textMatrix),n.translate(e.x,e.y+e.textRise),h>0?n.scale(l,-1):n.scale(l,1),e.patternFill){n.save();const t=e.fillColor.getPattern(n,this,mt(n),Wt);m=ft(n),n.restore(),n.fillStyle=t}let b=e.lineWidth;const v=e.textMatrixScale;if(0===v||0===b){const t=3&e.textRenderingMode;1!==t&&2!==t||(b=this.getSinglePixelWidth())}else b/=v;if(1!==r&&(n.scale(r,r),b/=r),n.lineWidth=b,i.isInvalidPDFjsFont){const i=[];let s=0;for(const e of t)i.push(e.unicode),s+=e.width;return n.fillText(i.join(""),0,0),e.x+=s*g*l,n.restore(),void this.compose()}let y,A=0;for(y=0;y<c;++y){const e=t[y];if("number"==typeof e){A+=u*e*s/1e3;continue}let l=!1;const c=(e.isSpace?o:0)+a,b=e.fontChar,v=e.accent;let w,x,_=e.width;if(d){const t=e.vmetric||p,i=-(e.vmetric?t[1]:.5*_)*g,s=t[2]*g;_=t?-t[0]:_,w=i/r,x=(A+s)/r}else w=A/r,x=0;if(i.remeasure&&_>0){const t=1e3*n.measureText(b).width/s*r;if(_<t&&this.isFontSubpixelAAEnabled){const e=_/t;l=!0,n.save(),n.scale(e,1),w/=e}else _!==t&&(w+=(_-t)/2e3*s/r)}if(this.contentVisible&&(e.isInFont||i.missingFile))if(f&&!v)n.fillText(b,w,x);else if(this.paintChar(b,w,x,m),v){const t=w+s*v.offset.x/r,e=x-s*v.offset.y/r;this.paintChar(v.fontChar,t,e,m)}A+=d?_*g-c*h:_*g+c*h,l&&n.restore()}d?e.y-=A:e.x+=A*l,n.restore(),this.compose()}showType3Text(t){const e=this.ctx,i=this.current,s=i.font,n=i.fontSize,r=i.fontDirection,o=s.vertical?1:-1,h=i.charSpacing,l=i.wordSpacing,c=i.textHScale*r,d=i.fontMatrix||a,u=t.length;let p,g,f,m;if(3!==i.textRenderingMode&&0!==n){for(this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null,e.save(),e.transform(...i.textMatrix),e.translate(i.x,i.y),e.scale(c,r),p=0;p<u;++p){if(g=t[p],"number"==typeof g){m=o*g*n/1e3,this.ctx.translate(m,0),i.x+=m*c;continue}const r=(g.isSpace?l:0)+h,a=s.charProcOperatorList[g.operatorListId];a?(this.contentVisible&&(this.processingType3=g,this.save(),e.scale(n,n),e.transform(...d),this.executeOperatorList(a),this.restore()),f=z.applyTransform([g.width,0],d)[0]*n+r,e.translate(f,0),i.x+=f*c):w(`Type3 character "${g.operatorListId}" is not available.`)}e.restore(),this.processingType3=null}}setCharWidth(t,e){}setCharWidthAndBounds(t,e,i,s,n,r){this.ctx.rect(i,s,n-i,r-s),this.ctx.clip(),this.endPath()}getColorN_Pattern(t){let e;if("TilingPattern"===t[0]){const i=t[1],s=this.baseTransform||ft(this.ctx),n={createCanvasGraphics:t=>new fe(t,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:this.optionalContentConfig,markedContentStack:this.markedContentStack})};e=new te(t,i,this.ctx,n,s)}else e=this._getPattern(t[1],t[2]);return e}setStrokeColorN(){this.current.strokeColor=this.getColorN_Pattern(arguments)}setFillColorN(){this.current.fillColor=this.getColorN_Pattern(arguments),this.current.patternFill=!0}setStrokeRGBColor(t,e,i){this.ctx.strokeStyle=this.current.strokeColor=z.makeHexColor(t,e,i)}setStrokeTransparent(){this.ctx.strokeStyle=this.current.strokeColor="transparent"}setFillRGBColor(t,e,i){this.ctx.fillStyle=this.current.fillColor=z.makeHexColor(t,e,i),this.current.patternFill=!1}setFillTransparent(){this.ctx.fillStyle=this.current.fillColor="transparent",this.current.patternFill=!1}_getPattern(t,e=null){let i;return this.cachedPatterns.has(t)?i=this.cachedPatterns.get(t):(i=function(t){switch(t[0]){case"RadialAxial":return new Kt(t);case"Mesh":return new Jt(t);case"Dummy":return new Zt}throw new Error(`Unknown IR type: ${t[0]}`)}(this.getObject(t)),this.cachedPatterns.set(t,i)),e&&(i.matrix=e),i}shadingFill(t){if(!this.contentVisible)return;const e=this.ctx;this.save();const i=this._getPattern(t);e.fillStyle=i.getPattern(e,this,mt(e),Vt);const s=mt(e);if(s){const{width:t,height:i}=e.canvas,[n,r,a,o]=z.getAxialAlignedBoundingBox([0,0,t,i],s);this.ctx.fillRect(n,r,a-n,o-r)}else this.ctx.fillRect(-1e10,-1e10,2e10,2e10);this.compose(this.current.getClippedPathBoundingBox()),this.restore()}beginInlineImage(){x("Should not call beginInlineImage")}beginImageData(){x("Should not call beginImageData")}paintFormXObjectBegin(t,e){if(this.contentVisible&&(this.save(),this.baseTransformStack.push(this.baseTransform),t&&this.transform(...t),this.baseTransform=ft(this.ctx),e)){const t=e[2]-e[0],i=e[3]-e[1];this.ctx.rect(e[0],e[1],t,i),this.current.updateRectMinMax(ft(this.ctx),e),this.clip(),this.endPath()}}paintFormXObjectEnd(){this.contentVisible&&(this.restore(),this.baseTransform=this.baseTransformStack.pop())}beginGroup(t){if(!this.contentVisible)return;this.save(),this.inSMaskMode&&(this.endSMaskMode(),this.current.activeSMask=null);const e=this.ctx;t.isolated||A("TODO: Support non-isolated groups."),t.knockout&&w("Knockout groups not supported.");const i=ft(e);if(t.matrix&&e.transform(...t.matrix),!t.bbox)throw new Error("Bounding box is required.");let s=z.getAxialAlignedBoundingBox(t.bbox,ft(e));const n=[0,0,e.canvas.width,e.canvas.height];s=z.intersect(s,n)||[0,0,0,0];const r=Math.floor(s[0]),a=Math.floor(s[1]),o=Math.max(Math.ceil(s[2])-r,1),h=Math.max(Math.ceil(s[3])-a,1);this.current.startNewPathAndClipBox([0,0,o,h]);let l="groupAt"+this.groupLevel;t.smask&&(l+="_smask_"+this.smaskCounter++%2);const c=this.cachedCanvases.getCanvas(l,o,h),d=c.context;d.translate(-r,-a),d.transform(...i),t.smask?this.smaskStack.push({canvas:c.canvas,context:d,offsetX:r,offsetY:a,subtype:t.smask.subtype,backdrop:t.smask.backdrop,transferMap:t.smask.transferMap||null,startTransformInverse:null}):(e.setTransform(1,0,0,1,0,0),e.translate(r,a),e.save()),he(e,d),this.ctx=d,this.setGState([["BM","source-over"],["ca",1],["CA",1]]),this.groupStack.push(e),this.groupLevel++}endGroup(t){if(!this.contentVisible)return;this.groupLevel--;const e=this.ctx,i=this.groupStack.pop();if(this.ctx=i,this.ctx.imageSmoothingEnabled=!1,t.smask)this.tempSMask=this.smaskStack.pop(),this.restore();else{this.ctx.restore();const t=ft(this.ctx);this.restore(),this.ctx.save(),this.ctx.setTransform(...t);const i=z.getAxialAlignedBoundingBox([0,0,e.canvas.width,e.canvas.height],t);this.ctx.drawImage(e.canvas,0,0),this.ctx.restore(),this.compose(i)}}beginAnnotation(t,e,i,s,n){if(this.#Le(),le(this.ctx),this.ctx.save(),this.save(),this.baseTransform&&this.ctx.setTransform(...this.baseTransform),e){const s=e[2]-e[0],r=e[3]-e[1];if(n&&this.annotationCanvasMap){(i=i.slice())[4]-=e[0],i[5]-=e[1],(e=e.slice())[0]=e[1]=0,e[2]=s,e[3]=r;const[n,a]=z.singularValueDecompose2dScale(ft(this.ctx)),{viewportScale:o}=this,h=Math.ceil(s*this.outputScaleX*o),l=Math.ceil(r*this.outputScaleY*o);this.annotationCanvas=this.canvasFactory.create(h,l);const{canvas:c,context:d}=this.annotationCanvas;this.annotationCanvasMap.set(t,c),this.annotationCanvas.savedCtx=this.ctx,this.ctx=d,this.ctx.save(),this.ctx.setTransform(n,0,0,-a,0,r*a),le(this.ctx)}else le(this.ctx),this.endPath(),this.ctx.rect(e[0],e[1],s,r),this.ctx.clip(),this.ctx.beginPath()}this.current=new re(this.ctx.canvas.width,this.ctx.canvas.height),this.transform(...i),this.transform(...s)}endAnnotation(){this.annotationCanvas&&(this.ctx.restore(),this.#Fe(),this.ctx=this.annotationCanvas.savedCtx,delete this.annotationCanvas.savedCtx,delete this.annotationCanvas)}paintImageMaskXObject(t){if(!this.contentVisible)return;const e=t.count;(t=this.getObject(t.data,t)).count=e;const i=this.ctx,s=this.processingType3;if(s&&(void 0===s.compiled&&(s.compiled=function(t){const{width:e,height:i}=t;if(e>1e3||i>1e3)return null;const s=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]),n=e+1;let r,a,o,h=new Uint8Array(n*(i+1));const l=e+7&-8;let c=new Uint8Array(l*i),d=0;for(const e of t.data){let t=128;for(;t>0;)c[d++]=e&t?0:255,t>>=1}let u=0;for(d=0,0!==c[d]&&(h[0]=1,++u),a=1;a<e;a++)c[d]!==c[d+1]&&(h[a]=c[d]?2:1,++u),d++;for(0!==c[d]&&(h[a]=2,++u),r=1;r<i;r++){d=r*l,o=r*n,c[d-l]!==c[d]&&(h[o]=c[d]?1:8,++u);let t=(c[d]?4:0)+(c[d-l]?8:0);for(a=1;a<e;a++)t=(t>>2)+(c[d+1]?4:0)+(c[d-l+1]?8:0),s[t]&&(h[o+a]=s[t],++u),d++;if(c[d-l]!==c[d]&&(h[o+a]=c[d]?2:4,++u),u>1e3)return null}for(d=l*(i-1),o=r*n,0!==c[d]&&(h[o]=8,++u),a=1;a<e;a++)c[d]!==c[d+1]&&(h[o+a]=c[d]?4:8,++u),d++;if(0!==c[d]&&(h[o+a]=4,++u),u>1e3)return null;const p=new Int32Array([0,n,-1,0,-n,0,0,0,1]),g=new Path2D;for(r=0;u&&r<=i;r++){let t=r*n;const i=t+e;for(;t<i&&!h[t];)t++;if(t===i)continue;g.moveTo(t%n,r);const s=t;let a=h[t];do{const e=p[a];do{t+=e}while(!h[t]);const i=h[t];5!==i&&10!==i?(a=i,h[t]=0):(a=i&51*a>>4,h[t]&=a>>2|a<<2),g.lineTo(t%n,t/n|0),h[t]||--u}while(s!==t);--r}return c=null,h=null,function(t){t.save(),t.scale(1/e,-1/i),t.translate(0,-i),t.fill(g),t.beginPath(),t.restore()}}(t)),s.compiled))return void s.compiled(i);const n=this._createMaskCanvas(t),r=n.canvas;i.save(),i.setTransform(1,0,0,1,0,0),i.drawImage(r,n.offsetX,n.offsetY),i.restore(),this.compose()}paintImageMaskXObjectRepeat(t,e,i=0,s=0,n,r){if(!this.contentVisible)return;t=this.getObject(t.data,t);const a=this.ctx;a.save();const o=ft(a);a.transform(e,i,s,n,0,0);const h=this._createMaskCanvas(t);a.setTransform(1,0,0,1,h.offsetX-o[4],h.offsetY-o[5]);for(let t=0,l=r.length;t<l;t+=2){const l=z.transform(o,[e,i,s,n,r[t],r[t+1]]),[c,d]=z.applyTransform([0,0],l);a.drawImage(h.canvas,c,d)}a.restore(),this.compose()}paintImageMaskXObjectGroup(t){if(!this.contentVisible)return;const e=this.ctx,i=this.current.fillColor,s=this.current.patternFill;for(const n of t){const{data:t,width:r,height:a,transform:o}=n,h=this.cachedCanvases.getCanvas("maskCanvas",r,a),l=h.context;l.save(),oe(l,this.getObject(t,n)),l.globalCompositeOperation="source-in",l.fillStyle=s?i.getPattern(l,this,mt(e),Wt):i,l.fillRect(0,0,r,a),l.restore(),e.save(),e.transform(...o),e.scale(1,-1),ne(e,h.canvas,0,0,r,a,0,-1,1,1),e.restore()}this.compose()}paintImageXObject(t){if(!this.contentVisible)return;const e=this.getObject(t);e?this.paintInlineImageXObject(e):w("Dependent image isn't ready yet")}paintImageXObjectRepeat(t,e,i,s){if(!this.contentVisible)return;const n=this.getObject(t);if(!n)return void w("Dependent image isn't ready yet");const r=n.width,a=n.height,o=[];for(let t=0,n=s.length;t<n;t+=2)o.push({transform:[e,0,0,i,s[t],s[t+1]],x:0,y:0,w:r,h:a});this.paintInlineImageXObjectGroup(n,o)}applyTransferMapsToCanvas(t){return"none"!==this.current.transferMaps&&(t.filter=this.current.transferMaps,t.drawImage(t.canvas,0,0),t.filter="none"),t.canvas}applyTransferMapsToBitmap(t){if("none"===this.current.transferMaps)return t.bitmap;const{bitmap:e,width:i,height:s}=t,n=this.cachedCanvases.getCanvas("inlineImage",i,s),r=n.context;return r.filter=this.current.transferMaps,r.drawImage(e,0,0),r.filter="none",n.canvas}paintInlineImageXObject(t){if(!this.contentVisible)return;const e=t.width,i=t.height,s=this.ctx;if(this.save(),!n){const{filter:t}=s;"none"!==t&&""!==t&&(s.filter="none")}let r;if(s.scale(1/e,-1/i),t.bitmap)r=this.applyTransferMapsToBitmap(t);else if("function"==typeof HTMLElement&&t instanceof HTMLElement||!t.data)r=t;else{const s=this.cachedCanvases.getCanvas("inlineImage",e,i).context;ae(s,t),r=this.applyTransferMapsToCanvas(s)}const a=this._scaleImage(r,mt(s));s.imageSmoothingEnabled=ce(ft(s),t.interpolate),ne(s,a.img,0,0,a.paintWidth,a.paintHeight,0,-i,e,i),this.compose(),this.restore()}paintInlineImageXObjectGroup(t,e){if(!this.contentVisible)return;const i=this.ctx;let s;if(t.bitmap)s=t.bitmap;else{const e=t.width,i=t.height,n=this.cachedCanvases.getCanvas("inlineImage",e,i).context;ae(n,t),s=this.applyTransferMapsToCanvas(n)}for(const t of e)i.save(),i.transform(...t.transform),i.scale(1,-1),ne(i,s,t.x,t.y,t.w,t.h,0,-1,1,1),i.restore();this.compose()}paintSolidColorImageMask(){this.contentVisible&&(this.ctx.fillRect(0,0,1,1),this.compose())}markPoint(t){}markPointProps(t,e){}beginMarkedContent(t){this.markedContentStack.push({visible:!0})}beginMarkedContentProps(t,e){"OC"===t?this.markedContentStack.push({visible:this.optionalContentConfig.isVisible(e)}):this.markedContentStack.push({visible:!0}),this.contentVisible=this.isContentVisible()}endMarkedContent(){this.markedContentStack.pop(),this.contentVisible=this.isContentVisible()}beginCompat(){}endCompat(){}consumePath(t){const e=this.current.isEmptyClip();this.pendingClip&&this.current.updateClipFromPath(),this.pendingClip||this.compose(t);const i=this.ctx;this.pendingClip&&(e||(this.pendingClip===ge?i.clip("evenodd"):i.clip()),this.pendingClip=null),this.current.startNewPathAndClipBox(this.current.clipBox),i.beginPath()}getSinglePixelWidth(){if(!this._cachedGetSinglePixelWidth){const t=ft(this.ctx);if(0===t[1]&&0===t[2])this._cachedGetSinglePixelWidth=1/Math.min(Math.abs(t[0]),Math.abs(t[3]));else{const e=Math.abs(t[0]*t[3]-t[2]*t[1]),i=Math.hypot(t[0],t[2]),s=Math.hypot(t[1],t[3]);this._cachedGetSinglePixelWidth=Math.max(i,s)/e}}return this._cachedGetSinglePixelWidth}getScaleForStroking(){if(-1===this._cachedScaleForStroking[0]){const{lineWidth:t}=this.current,{a:e,b:i,c:s,d:n}=this.ctx.getTransform();let r,a;if(0===i&&0===s){const i=Math.abs(e),s=Math.abs(n);if(i===s)if(0===t)r=a=1/i;else{const e=i*t;r=a=e<1?1/e:1}else if(0===t)r=1/i,a=1/s;else{const e=i*t,n=s*t;r=e<1?1/e:1,a=n<1?1/n:1}}else{const o=Math.abs(e*n-i*s),h=Math.hypot(e,i),l=Math.hypot(s,n);if(0===t)r=l/o,a=h/o;else{const e=t*o;r=l>e?l/e:1,a=h>e?h/e:1}}this._cachedScaleForStroking[0]=r,this._cachedScaleForStroking[1]=a}return this._cachedScaleForStroking}rescaleAndStroke(t){const{ctx:e}=this,{lineWidth:i}=this.current,[s,n]=this.getScaleForStroking();if(e.lineWidth=i||1,1===s&&1===n)return void e.stroke();const r=e.getLineDash();if(t&&e.save(),e.scale(s,n),r.length>0){const t=Math.max(s,n);e.setLineDash(r.map((e=>e/t))),e.lineDashOffset/=t}e.stroke(),t&&e.restore()}isContentVisible(){for(let t=this.markedContentStack.length-1;t>=0;t--)if(!this.markedContentStack[t].visible)return!1;return!0}}for(const t in f)void 0!==fe.prototype[t]&&(fe.prototype[f[t]]=fe.prototype[t]);class me{static#Oe=null;static#Ne="";static get workerPort(){return this.#Oe}static set workerPort(t){if(!("undefined"!=typeof Worker&&t instanceof Worker)&&null!==t)throw new Error("Invalid `workerPort` type.");this.#Oe=t}static get workerSrc(){return this.#Ne}static set workerSrc(t){if("string"!=typeof t)throw new Error("Invalid `workerSrc` type.");this.#Ne=t}}function be(t){switch(t instanceof Error||"object"==typeof t&&null!==t||x('wrapReason: Expected "reason" to be a (possibly cloned) Error.'),t.name){case"AbortException":return new D(t.message);case"MissingPDFException":return new I(t.message);case"PasswordException":return new T(t.message,t.code);case"UnexpectedResponseException":return new R(t.message,t.status);case"UnknownErrorException":return new M(t.message,t.details);default:return new M(t.message,t.toString())}}class ve{constructor(t,e,i){this.sourceName=t,this.targetName=e,this.comObj=i,this.callbackId=1,this.streamId=1,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),this._onComObjOnMessage=t=>{const e=t.data;if(e.targetName!==this.sourceName)return;if(e.stream)return void this.#Be(e);if(e.callback){const t=e.callbackId,i=this.callbackCapabilities[t];if(!i)throw new Error(`Cannot resolve callback ${t}`);if(delete this.callbackCapabilities[t],1===e.callback)i.resolve(e.data);else{if(2!==e.callback)throw new Error("Unexpected callback case");i.reject(be(e.reason))}return}const s=this.actionHandler[e.action];if(!s)throw new Error(`Unknown action from worker: ${e.action}`);if(e.callbackId){const t=this.sourceName,n=e.sourceName;new Promise((function(t){t(s(e.data))})).then((function(s){i.postMessage({sourceName:t,targetName:n,callback:1,callbackId:e.callbackId,data:s})}),(function(s){i.postMessage({sourceName:t,targetName:n,callback:2,callbackId:e.callbackId,reason:be(s)})}))}else e.streamId?this.#ze(e):s(e.data)},i.addEventListener("message",this._onComObjOnMessage)}on(t,e){const i=this.actionHandler;if(i[t])throw new Error(`There is already an actionName called "${t}"`);i[t]=e}send(t,e,i){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:t,data:e},i)}sendWithPromise(t,e,i){const s=this.callbackId++,n=Promise.withResolvers();this.callbackCapabilities[s]=n;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:t,callbackId:s,data:e},i)}catch(t){n.reject(t)}return n.promise}sendWithStream(t,e,i,s){const n=this.streamId++,r=this.sourceName,a=this.targetName,o=this.comObj;return new ReadableStream({start:i=>{const h=Promise.withResolvers();return this.streamControllers[n]={controller:i,startCall:h,pullCall:null,cancelCall:null,isClosed:!1},o.postMessage({sourceName:r,targetName:a,action:t,streamId:n,data:e,desiredSize:i.desiredSize},s),h.promise},pull:t=>{const e=Promise.withResolvers();return this.streamControllers[n].pullCall=e,o.postMessage({sourceName:r,targetName:a,stream:6,streamId:n,desiredSize:t.desiredSize}),e.promise},cancel:t=>{_(t instanceof Error,"cancel must have a valid reason");const e=Promise.withResolvers();return this.streamControllers[n].cancelCall=e,this.streamControllers[n].isClosed=!0,o.postMessage({sourceName:r,targetName:a,stream:1,streamId:n,reason:be(t)}),e.promise}},i)}#ze(t){const e=t.streamId,i=this.sourceName,s=t.sourceName,n=this.comObj,r=this,a=this.actionHandler[t.action],o={enqueue(t,r=1,a){if(this.isCancelled)return;const o=this.desiredSize;this.desiredSize-=r,o>0&&this.desiredSize<=0&&(this.sinkCapability=Promise.withResolvers(),this.ready=this.sinkCapability.promise),n.postMessage({sourceName:i,targetName:s,stream:4,streamId:e,chunk:t},a)},close(){this.isCancelled||(this.isCancelled=!0,n.postMessage({sourceName:i,targetName:s,stream:3,streamId:e}),delete r.streamSinks[e])},error(t){_(t instanceof Error,"error must have a valid reason"),this.isCancelled||(this.isCancelled=!0,n.postMessage({sourceName:i,targetName:s,stream:5,streamId:e,reason:be(t)}))},sinkCapability:Promise.withResolvers(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:t.desiredSize,ready:null};o.sinkCapability.resolve(),o.ready=o.sinkCapability.promise,this.streamSinks[e]=o,new Promise((function(e){e(a(t.data,o))})).then((function(){n.postMessage({sourceName:i,targetName:s,stream:8,streamId:e,success:!0})}),(function(t){n.postMessage({sourceName:i,targetName:s,stream:8,streamId:e,reason:be(t)})}))}#Be(t){const e=t.streamId,i=this.sourceName,s=t.sourceName,n=this.comObj,r=this.streamControllers[e],a=this.streamSinks[e];switch(t.stream){case 8:t.success?r.startCall.resolve():r.startCall.reject(be(t.reason));break;case 7:t.success?r.pullCall.resolve():r.pullCall.reject(be(t.reason));break;case 6:if(!a){n.postMessage({sourceName:i,targetName:s,stream:7,streamId:e,success:!0});break}a.desiredSize<=0&&t.desiredSize>0&&a.sinkCapability.resolve(),a.desiredSize=t.desiredSize,new Promise((function(t){t(a.onPull?.())})).then((function(){n.postMessage({sourceName:i,targetName:s,stream:7,streamId:e,success:!0})}),(function(t){n.postMessage({sourceName:i,targetName:s,stream:7,streamId:e,reason:be(t)})}));break;case 4:if(_(r,"enqueue should have stream controller"),r.isClosed)break;r.controller.enqueue(t.chunk);break;case 3:if(_(r,"close should have stream controller"),r.isClosed)break;r.isClosed=!0,r.controller.close(),this.#He(r,e);break;case 5:_(r,"error should have stream controller"),r.controller.error(be(t.reason)),this.#He(r,e);break;case 2:t.success?r.cancelCall.resolve():r.cancelCall.reject(be(t.reason)),this.#He(r,e);break;case 1:if(!a)break;new Promise((function(e){e(a.onCancel?.(be(t.reason)))})).then((function(){n.postMessage({sourceName:i,targetName:s,stream:2,streamId:e,success:!0})}),(function(t){n.postMessage({sourceName:i,targetName:s,stream:2,streamId:e,reason:be(t)})})),a.sinkCapability.reject(be(t.reason)),a.isCancelled=!0,delete this.streamSinks[e];break;default:throw new Error("Unexpected stream case")}}async#He(t,e){await Promise.allSettled([t.startCall?.promise,t.pullCall?.promise,t.cancelCall?.promise]),delete this.streamControllers[e]}destroy(){this.comObj.removeEventListener("message",this._onComObjOnMessage)}}class ye{#je;#Ue;constructor({parsedData:t,rawData:e}){this.#je=t,this.#Ue=e}getRaw(){return this.#Ue}get(t){return this.#je.get(t)??null}getAll(){return O(this.#je)}has(t){return this.#je.has(t)}}const Ae=Symbol("INTERNAL");class we{#$e=!1;#We=!1;#Ge=!1;#Ve=!0;constructor(t,{name:e,intent:i,usage:s}){this.#$e=!!(2&t),this.#We=!!(4&t),this.name=e,this.intent=i,this.usage=s}get visible(){if(this.#Ge)return this.#Ve;if(!this.#Ve)return!1;const{print:t,view:e}=this.usage;return this.#$e?"OFF"!==e?.viewState:!this.#We||"OFF"!==t?.printState}_setVisible(t,e,i=!1){t!==Ae&&x("Internal method `_setVisible` called."),this.#Ge=i,this.#Ve=e}}class xe{#qe=null;#Xe=new Map;#Ke=null;#Ye=null;constructor(t,e=2){if(this.renderingIntent=e,this.name=null,this.creator=null,null!==t){this.name=t.name,this.creator=t.creator,this.#Ye=t.order;for(const i of t.groups)this.#Xe.set(i.id,new we(e,i));if("OFF"===t.baseState)for(const t of this.#Xe.values())t._setVisible(Ae,!1);for(const e of t.on)this.#Xe.get(e)._setVisible(Ae,!0);for(const e of t.off)this.#Xe.get(e)._setVisible(Ae,!1);this.#Ke=this.getHash()}}#Qe(t){const e=t.length;if(e<2)return!0;const i=t[0];for(let s=1;s<e;s++){const e=t[s];let n;if(Array.isArray(e))n=this.#Qe(e);else{if(!this.#Xe.has(e))return w(`Optional content group not found: ${e}`),!0;n=this.#Xe.get(e).visible}switch(i){case"And":if(!n)return!1;break;case"Or":if(n)return!0;break;case"Not":return!n;default:return!0}}return"And"===i}isVisible(t){if(0===this.#Xe.size)return!0;if(!t)return A("Optional content group not defined."),!0;if("OCG"===t.type)return this.#Xe.has(t.id)?this.#Xe.get(t.id).visible:(w(`Optional content group not found: ${t.id}`),!0);if("OCMD"===t.type){if(t.expression)return this.#Qe(t.expression);if(!t.policy||"AnyOn"===t.policy){for(const e of t.ids){if(!this.#Xe.has(e))return w(`Optional content group not found: ${e}`),!0;if(this.#Xe.get(e).visible)return!0}return!1}if("AllOn"===t.policy){for(const e of t.ids){if(!this.#Xe.has(e))return w(`Optional content group not found: ${e}`),!0;if(!this.#Xe.get(e).visible)return!1}return!0}if("AnyOff"===t.policy){for(const e of t.ids){if(!this.#Xe.has(e))return w(`Optional content group not found: ${e}`),!0;if(!this.#Xe.get(e).visible)return!0}return!1}if("AllOff"===t.policy){for(const e of t.ids){if(!this.#Xe.has(e))return w(`Optional content group not found: ${e}`),!0;if(this.#Xe.get(e).visible)return!1}return!0}return w(`Unknown optional content policy ${t.policy}.`),!0}return w(`Unknown group type ${t.type}.`),!0}setVisibility(t,e=!0){const i=this.#Xe.get(t);i?(i._setVisible(Ae,!!e,!0),this.#qe=null):w(`Optional content group not found: ${t}`)}setOCGState({state:t,preserveRB:e}){let i;for(const e of t){switch(e){case"ON":case"OFF":case"Toggle":i=e;continue}const t=this.#Xe.get(e);if(t)switch(i){case"ON":t._setVisible(Ae,!0);break;case"OFF":t._setVisible(Ae,!1);break;case"Toggle":t._setVisible(Ae,!t.visible)}}this.#qe=null}get hasInitialVisibility(){return null===this.#Ke||this.getHash()===this.#Ke}getOrder(){return this.#Xe.size?this.#Ye?this.#Ye.slice():[...this.#Xe.keys()]:null}getGroups(){return this.#Xe.size>0?O(this.#Xe):null}getGroup(t){return this.#Xe.get(t)||null}getHash(){if(null!==this.#qe)return this.#qe;const t=new Lt;for(const[e,i]of this.#Xe)t.update(`${e}:${i.visible}`);return this.#qe=t.hexdigest()}}class _e{constructor(t,{disableRange:e=!1,disableStream:i=!1}){_(t,'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.');const{length:s,initialData:n,progressiveDone:r,contentDispositionFilename:a}=t;if(this._queuedChunks=[],this._progressiveDone=r,this._contentDispositionFilename=a,n?.length>0){const t=n instanceof Uint8Array&&n.byteLength===n.buffer.byteLength?n.buffer:new Uint8Array(n).buffer;this._queuedChunks.push(t)}this._pdfDataRangeTransport=t,this._isStreamingSupported=!i,this._isRangeSupported=!e,this._contentLength=s,this._fullRequestReader=null,this._rangeReaders=[],t.addRangeListener(((t,e)=>{this._onReceiveData({begin:t,chunk:e})})),t.addProgressListener(((t,e)=>{this._onProgress({loaded:t,total:e})})),t.addProgressiveReadListener((t=>{this._onReceiveData({chunk:t})})),t.addProgressiveDoneListener((()=>{this._onProgressiveDone()})),t.transportReady()}_onReceiveData({begin:t,chunk:e}){const i=e instanceof Uint8Array&&e.byteLength===e.buffer.byteLength?e.buffer:new Uint8Array(e).buffer;void 0===t?this._fullRequestReader?this._fullRequestReader._enqueue(i):this._queuedChunks.push(i):_(this._rangeReaders.some((function(e){return e._begin===t&&(e._enqueue(i),!0)})),"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.")}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}_onProgress(t){void 0===t.total?this._rangeReaders[0]?.onProgress?.({loaded:t.loaded}):this._fullRequestReader?.onProgress?.({loaded:t.loaded,total:t.total})}_onProgressiveDone(){this._fullRequestReader?.progressiveDone(),this._progressiveDone=!0}_removeRangeReader(t){const e=this._rangeReaders.indexOf(t);e>=0&&this._rangeReaders.splice(e,1)}getFullReader(){_(!this._fullRequestReader,"PDFDataTransportStream.getFullReader can only be called once.");const t=this._queuedChunks;return this._queuedChunks=null,new Ee(this,t,this._progressiveDone,this._contentDispositionFilename)}getRangeReader(t,e){if(e<=this._progressiveDataLength)return null;const i=new Ce(this,t,e);return this._pdfDataRangeTransport.requestDataRange(t,e),this._rangeReaders.push(i),i}cancelAllRequests(t){this._fullRequestReader?.cancel(t);for(const e of this._rangeReaders.slice(0))e.cancel(t);this._pdfDataRangeTransport.abort()}}class Ee{constructor(t,e,i=!1,s=null){this._stream=t,this._done=i||!1,this._filename=nt(s)?s:null,this._queuedChunks=e||[],this._loaded=0;for(const t of this._queuedChunks)this._loaded+=t.byteLength;this._requests=[],this._headersReady=Promise.resolve(),t._fullRequestReader=this,this.onProgress=null}_enqueue(t){this._done||(this._requests.length>0?this._requests.shift().resolve({value:t,done:!1}):this._queuedChunks.push(t),this._loaded+=t.byteLength)}get headersReady(){return this._headersReady}get filename(){return this._filename}get isRangeSupported(){return this._stream._isRangeSupported}get isStreamingSupported(){return this._stream._isStreamingSupported}get contentLength(){return this._stream._contentLength}async read(){if(this._queuedChunks.length>0)return{value:this._queuedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const t=Promise.withResolvers();return this._requests.push(t),t.promise}cancel(t){this._done=!0;for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0}progressiveDone(){this._done||(this._done=!0)}}class Ce{constructor(t,e,i){this._stream=t,this._begin=e,this._end=i,this._queuedChunk=null,this._requests=[],this._done=!1,this.onProgress=null}_enqueue(t){if(!this._done){if(0===this._requests.length)this._queuedChunk=t;else{this._requests.shift().resolve({value:t,done:!1});for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0}this._done=!0,this._stream._removeRangeReader(this)}}get isStreamingSupported(){return!1}async read(){if(this._queuedChunk){const t=this._queuedChunk;return this._queuedChunk=null,{value:t,done:!1}}if(this._done)return{value:void 0,done:!0};const t=Promise.withResolvers();return this._requests.push(t),t.promise}cancel(t){this._done=!0;for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0,this._stream._removeRangeReader(this)}}function Se(t,e){const i=new Headers;if(!t||!e||"object"!=typeof e)return i;for(const t in e){const s=e[t];void 0!==s&&i.append(t,s)}return i}function Te({responseHeaders:t,isHttp:e,rangeChunkSize:i,disableRange:s}){const n={allowRangeRequests:!1,suggestedLength:void 0},r=parseInt(t.get("Content-Length"),10);return Number.isInteger(r)?(n.suggestedLength=r,r<=2*i||s||!e||"bytes"!==t.get("Accept-Ranges")||"identity"!==(t.get("Content-Encoding")||"identity")||(n.allowRangeRequests=!0),n):n}function Me(t){const e=t.get("Content-Disposition");if(e){let t=function(t){let e=!0,i=s("filename\\*","i").exec(t);if(i){i=i[1];let t=a(i);return t=unescape(t),t=o(t),t=h(t),r(t)}if(i=function(t){const e=[];let i;const n=s("filename\\*((?!0\\d)\\d+)(\\*?)","ig");for(;null!==(i=n.exec(t));){let[,t,s,n]=i;if(t=parseInt(t,10),t in e){if(0===t)break}else e[t]=[s,n]}const r=[];for(let t=0;t<e.length&&t in e;++t){let[i,s]=e[t];s=a(s),i&&(s=unescape(s),0===t&&(s=o(s))),r.push(s)}return r.join("")}(t),i)return r(h(i));if(i=s("filename","i").exec(t),i){i=i[1];let t=a(i);return t=h(t),r(t)}function s(t,e){return new RegExp("(?:^|;)\\s*"+t+'\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)',e)}function n(t,i){if(t){if(!/^[\x00-\xFF]+$/.test(i))return i;try{const s=new TextDecoder(t,{fatal:!0}),n=F(i);i=s.decode(n),e=!1}catch{}}return i}function r(t){return e&&/[\x80-\xff]/.test(t)&&(t=n("utf-8",t),e&&(t=n("iso-8859-1",t))),t}function a(t){if(t.startsWith('"')){const e=t.slice(1).split('\\"');for(let t=0;t<e.length;++t){const i=e[t].indexOf('"');-1!==i&&(e[t]=e[t].slice(0,i),e.length=t+1),e[t]=e[t].replaceAll(/\\(.)/g,"$1")}t=e.join('"')}return t}function o(t){const e=t.indexOf("'");return-1===e?t:n(t.slice(0,e),t.slice(e+1).replace(/^[^']*'/,""))}function h(t){return!t.startsWith("=?")||/[\x00-\x19\x80-\xff]/.test(t)?t:t.replaceAll(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g,(function(t,e,i,s){if("q"===i||"Q"===i)return n(e,s=(s=s.replaceAll("_"," ")).replaceAll(/=([0-9a-fA-F]{2})/g,(function(t,e){return String.fromCharCode(parseInt(e,16))})));try{s=atob(s)}catch{}return n(e,s)}))}return""}(e);if(t.includes("%"))try{t=decodeURIComponent(t)}catch{}if(nt(t))return t}return null}function ke(t,e){return 404===t||0===t&&e.startsWith("file:")?new I('Missing PDF "'+e+'".'):new R(`Unexpected server response (${t}) while retrieving PDF "${e}".`,t)}function Ie(t){return 200===t||206===t}function Re(t,e,i){return{method:"GET",headers:t,signal:i.signal,mode:"cors",credentials:e?"include":"same-origin",redirect:"follow"}}function Pe(t){return t instanceof Uint8Array?t.buffer:t instanceof ArrayBuffer?t:(w(`getArrayBuffer - unexpected data format: ${t}`),new Uint8Array(t).buffer)}class De{constructor(t){this.source=t,this.isHttp=/^https?:/i.test(t.url),this.headers=Se(this.isHttp,t.httpHeaders),this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}getFullReader(){return _(!this._fullRequestReader,"PDFFetchStream.getFullReader can only be called once."),this._fullRequestReader=new Le(this),this._fullRequestReader}getRangeReader(t,e){if(e<=this._progressiveDataLength)return null;const i=new Fe(this,t,e);return this._rangeRequestReaders.push(i),i}cancelAllRequests(t){this._fullRequestReader?.cancel(t);for(const e of this._rangeRequestReaders.slice(0))e.cancel(t)}}class Le{constructor(t){this._stream=t,this._reader=null,this._loaded=0,this._filename=null;const e=t.source;this._withCredentials=e.withCredentials||!1,this._contentLength=e.length,this._headersCapability=Promise.withResolvers(),this._disableRange=e.disableRange||!1,this._rangeChunkSize=e.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._abortController=new AbortController,this._isStreamingSupported=!e.disableStream,this._isRangeSupported=!e.disableRange;const i=new Headers(t.headers),s=e.url;fetch(s,Re(i,this._withCredentials,this._abortController)).then((e=>{if(!Ie(e.status))throw ke(e.status,s);this._reader=e.body.getReader(),this._headersCapability.resolve();const i=e.headers,{allowRangeRequests:n,suggestedLength:r}=Te({responseHeaders:i,isHttp:t.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=n,this._contentLength=r||this._contentLength,this._filename=Me(i),!this._isStreamingSupported&&this._isRangeSupported&&this.cancel(new D("Streaming is disabled."))})).catch(this._headersCapability.reject),this.onProgress=null}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._headersCapability.promise;const{value:t,done:e}=await this._reader.read();return e?{value:t,done:e}:(this._loaded+=t.byteLength,this.onProgress?.({loaded:this._loaded,total:this._contentLength}),{value:Pe(t),done:!1})}cancel(t){this._reader?.cancel(t),this._abortController.abort()}}class Fe{constructor(t,e,i){this._stream=t,this._reader=null,this._loaded=0;const s=t.source;this._withCredentials=s.withCredentials||!1,this._readCapability=Promise.withResolvers(),this._isStreamingSupported=!s.disableStream,this._abortController=new AbortController;const n=new Headers(t.headers);n.append("Range",`bytes=${e}-${i-1}`);const r=s.url;fetch(r,Re(n,this._withCredentials,this._abortController)).then((t=>{if(!Ie(t.status))throw ke(t.status,r);this._readCapability.resolve(),this._reader=t.body.getReader()})).catch(this._readCapability.reject),this.onProgress=null}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._readCapability.promise;const{value:t,done:e}=await this._reader.read();return e?{value:t,done:e}:(this._loaded+=t.byteLength,this.onProgress?.({loaded:this._loaded}),{value:Pe(t),done:!1})}cancel(t){this._reader?.cancel(t),this._abortController.abort()}}class Oe{constructor({url:t,httpHeaders:e,withCredentials:i}){this.url=t,this.isHttp=/^https?:/i.test(t),this.headers=Se(this.isHttp,e),this.withCredentials=i||!1,this.currXhrId=0,this.pendingRequests=Object.create(null)}requestRange(t,e,i){const s={begin:t,end:e};for(const t in i)s[t]=i[t];return this.request(s)}requestFull(t){return this.request(t)}request(t){const e=new XMLHttpRequest,i=this.currXhrId++,s=this.pendingRequests[i]={xhr:e};e.open("GET",this.url),e.withCredentials=this.withCredentials;for(const[t,i]of this.headers)e.setRequestHeader(t,i);return this.isHttp&&"begin"in t&&"end"in t?(e.setRequestHeader("Range",`bytes=${t.begin}-${t.end-1}`),s.expectedStatus=206):s.expectedStatus=200,e.responseType="arraybuffer",t.onError&&(e.onerror=function(i){t.onError(e.status)}),e.onreadystatechange=this.onStateChange.bind(this,i),e.onprogress=this.onProgress.bind(this,i),s.onHeadersReceived=t.onHeadersReceived,s.onDone=t.onDone,s.onError=t.onError,s.onProgress=t.onProgress,e.send(null),i}onProgress(t,e){const i=this.pendingRequests[t];i&&i.onProgress?.(e)}onStateChange(t,e){const i=this.pendingRequests[t];if(!i)return;const s=i.xhr;if(s.readyState>=2&&i.onHeadersReceived&&(i.onHeadersReceived(),delete i.onHeadersReceived),4!==s.readyState)return;if(!(t in this.pendingRequests))return;if(delete this.pendingRequests[t],0===s.status&&this.isHttp)return void i.onError?.(s.status);const n=s.status||200;if((200!==n||206!==i.expectedStatus)&&n!==i.expectedStatus)return void i.onError?.(s.status);const r=function(t){const e=t.response;return"string"!=typeof e?e:F(e).buffer}(s);if(206===n){const t=s.getResponseHeader("Content-Range"),e=/bytes (\d+)-(\d+)\/(\d+)/.exec(t);i.onDone({begin:parseInt(e[1],10),chunk:r})}else r?i.onDone({begin:0,chunk:r}):i.onError?.(s.status)}getRequestXhr(t){return this.pendingRequests[t].xhr}isPendingRequest(t){return t in this.pendingRequests}abortRequest(t){const e=this.pendingRequests[t].xhr;delete this.pendingRequests[t],e.abort()}}class Ne{constructor(t){this._source=t,this._manager=new Oe(t),this._rangeChunkSize=t.rangeChunkSize,this._fullRequestReader=null,this._rangeRequestReaders=[]}_onRangeRequestReaderClosed(t){const e=this._rangeRequestReaders.indexOf(t);e>=0&&this._rangeRequestReaders.splice(e,1)}getFullReader(){return _(!this._fullRequestReader,"PDFNetworkStream.getFullReader can only be called once."),this._fullRequestReader=new Be(this._manager,this._source),this._fullRequestReader}getRangeReader(t,e){const i=new ze(this._manager,t,e);return i.onClosed=this._onRangeRequestReaderClosed.bind(this),this._rangeRequestReaders.push(i),i}cancelAllRequests(t){this._fullRequestReader?.cancel(t);for(const e of this._rangeRequestReaders.slice(0))e.cancel(t)}}class Be{constructor(t,e){this._manager=t;const i={onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=e.url,this._fullRequestId=t.requestFull(i),this._headersCapability=Promise.withResolvers(),this._disableRange=e.disableRange||!1,this._contentLength=e.length,this._rangeChunkSize=e.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._isStreamingSupported=!1,this._isRangeSupported=!1,this._cachedChunks=[],this._requests=[],this._done=!1,this._storedError=void 0,this._filename=null,this.onProgress=null}_onHeadersReceived(){const t=this._fullRequestId,e=this._manager.getRequestXhr(t),i=new Headers(e.getAllResponseHeaders().trim().split(/[\r\n]+/).map((t=>{const[e,...i]=t.split(": ");return[e,i.join(": ")]}))),{allowRangeRequests:s,suggestedLength:n}=Te({responseHeaders:i,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});s&&(this._isRangeSupported=!0),this._contentLength=n||this._contentLength,this._filename=Me(i),this._isRangeSupported&&this._manager.abortRequest(t),this._headersCapability.resolve()}_onDone(t){if(t&&(this._requests.length>0?this._requests.shift().resolve({value:t.chunk,done:!1}):this._cachedChunks.push(t.chunk)),this._done=!0,!(this._cachedChunks.length>0)){for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0}}_onError(t){this._storedError=ke(t,this._url),this._headersCapability.reject(this._storedError);for(const t of this._requests)t.reject(this._storedError);this._requests.length=0,this._cachedChunks.length=0}_onProgress(t){this.onProgress?.({loaded:t.loaded,total:t.lengthComputable?t.total:this._contentLength})}get filename(){return this._filename}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}get contentLength(){return this._contentLength}get headersReady(){return this._headersCapability.promise}async read(){if(this._storedError)throw this._storedError;if(this._cachedChunks.length>0)return{value:this._cachedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const t=Promise.withResolvers();return this._requests.push(t),t.promise}cancel(t){this._done=!0,this._headersCapability.reject(t);for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._fullRequestId)&&this._manager.abortRequest(this._fullRequestId),this._fullRequestReader=null}}class ze{constructor(t,e,i){this._manager=t;const s={onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=t.url,this._requestId=t.requestRange(e,i,s),this._requests=[],this._queuedChunk=null,this._done=!1,this._storedError=void 0,this.onProgress=null,this.onClosed=null}_close(){this.onClosed?.(this)}_onDone(t){const e=t.chunk;this._requests.length>0?this._requests.shift().resolve({value:e,done:!1}):this._queuedChunk=e,this._done=!0;for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0,this._close()}_onError(t){this._storedError=ke(t,this._url);for(const t of this._requests)t.reject(this._storedError);this._requests.length=0,this._queuedChunk=null}_onProgress(t){this.isStreamingSupported||this.onProgress?.({loaded:t.loaded})}get isStreamingSupported(){return!1}async read(){if(this._storedError)throw this._storedError;if(null!==this._queuedChunk){const t=this._queuedChunk;return this._queuedChunk=null,{value:t,done:!1}}if(this._done)return{value:void 0,done:!0};const t=Promise.withResolvers();return this._requests.push(t),t.promise}cancel(t){this._done=!0;for(const t of this._requests)t.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._requestId)&&this._manager.abortRequest(this._requestId),this._close()}}const He=/^[a-z][a-z0-9\-+.]+:/i;function je(t,e,i){return"http:"===t.protocol?Ut.get("http").request(t,{headers:e},i):Ut.get("https").request(t,{headers:e},i)}class Ue{constructor(t){this.source=t,this.url=function(t){if(He.test(t))return new URL(t);const e=Ut.get("url");return new URL(e.pathToFileURL(t))}(t.url),this.isHttp="http:"===this.url.protocol||"https:"===this.url.protocol,this.isFsUrl="file:"===this.url.protocol,this.headers=Se(this.isHttp,t.httpHeaders),this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}getFullReader(){return _(!this._fullRequestReader,"PDFNodeStream.getFullReader can only be called once."),this._fullRequestReader=this.isFsUrl?new qe(this):new Ge(this),this._fullRequestReader}getRangeReader(t,e){if(e<=this._progressiveDataLength)return null;const i=this.isFsUrl?new Xe(this,t,e):new Ve(this,t,e);return this._rangeRequestReaders.push(i),i}cancelAllRequests(t){this._fullRequestReader?.cancel(t);for(const e of this._rangeRequestReaders.slice(0))e.cancel(t)}}class $e{constructor(t){this._url=t.url,this._done=!1,this._storedError=null,this.onProgress=null;const e=t.source;this._contentLength=e.length,this._loaded=0,this._filename=null,this._disableRange=e.disableRange||!1,this._rangeChunkSize=e.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._isStreamingSupported=!e.disableStream,this._isRangeSupported=!e.disableRange,this._readableStream=null,this._readCapability=Promise.withResolvers(),this._headersCapability=Promise.withResolvers()}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const t=this._readableStream.read();return null===t?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=t.length,this.onProgress?.({loaded:this._loaded,total:this._contentLength}),{value:new Uint8Array(t).buffer,done:!1})}cancel(t){this._readableStream?this._readableStream.destroy(t):this._error(t)}_error(t){this._storedError=t,this._readCapability.resolve()}_setReadableStream(t){this._readableStream=t,t.on("readable",(()=>{this._readCapability.resolve()})),t.on("end",(()=>{t.destroy(),this._done=!0,this._readCapability.resolve()})),t.on("error",(t=>{this._error(t)})),!this._isStreamingSupported&&this._isRangeSupported&&this._error(new D("streaming is disabled")),this._storedError&&this._readableStream.destroy(this._storedError)}}class We{constructor(t){this._url=t.url,this._done=!1,this._storedError=null,this.onProgress=null,this._loaded=0,this._readableStream=null,this._readCapability=Promise.withResolvers();const e=t.source;this._isStreamingSupported=!e.disableStream}get isStreamingSupported(){return this._isStreamingSupported}async read(){if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const t=this._readableStream.read();return null===t?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=t.length,this.onProgress?.({loaded:this._loaded}),{value:new Uint8Array(t).buffer,done:!1})}cancel(t){this._readableStream?this._readableStream.destroy(t):this._error(t)}_error(t){this._storedError=t,this._readCapability.resolve()}_setReadableStream(t){this._readableStream=t,t.on("readable",(()=>{this._readCapability.resolve()})),t.on("end",(()=>{t.destroy(),this._done=!0,this._readCapability.resolve()})),t.on("error",(t=>{this._error(t)})),this._storedError&&this._readableStream.destroy(this._storedError)}}class Ge extends $e{constructor(t){super(t);const e=Object.fromEntries(t.headers);this._request=je(this._url,e,(e=>{if(404===e.statusCode){const t=new I(`Missing PDF "${this._url}".`);return this._storedError=t,void this._headersCapability.reject(t)}this._headersCapability.resolve(),this._setReadableStream(e);const i=new Headers(this._readableStream.headers),{allowRangeRequests:s,suggestedLength:n}=Te({responseHeaders:i,isHttp:t.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=s,this._contentLength=n||this._contentLength,this._filename=Me(i)})),this._request.on("error",(t=>{this._storedError=t,this._headersCapability.reject(t)})),this._request.end()}}class Ve extends We{constructor(t,e,i){super(t);const s=Object.fromEntries(t.headers);s.Range=`bytes=${e}-${i-1}`,this._request=je(this._url,s,(t=>{if(404!==t.statusCode)this._setReadableStream(t);else{const t=new I(`Missing PDF "${this._url}".`);this._storedError=t}})),this._request.on("error",(t=>{this._storedError=t})),this._request.end()}}class qe extends $e{constructor(t){super(t);const e=Ut.get("fs");e.promises.lstat(this._url).then((t=>{this._contentLength=t.size,this._setReadableStream(e.createReadStream(this._url)),this._headersCapability.resolve()}),(t=>{"ENOENT"===t.code&&(t=new I(`Missing PDF "${this._url}".`)),this._storedError=t,this._headersCapability.reject(t)}))}}class Xe extends We{constructor(t,e,i){super(t);const s=Ut.get("fs");this._setReadableStream(s.createReadStream(this._url,{start:e,end:i-1}))}}const Ke=30;class Ye{#Je=Promise.withResolvers();#ut=null;#Ze=!1;#ti=!!globalThis.FontInspector?.enabled;#ei=null;#ii=null;#si=0;#ni=0;#ri=null;#ai=null;#oi=0;#hi=0;#li=Object.create(null);#ci=[];#di=null;#ui=[];#pi=new WeakMap;#gi=null;static#fi=new Map;static#mi=new Map;static#bi=new WeakMap;static#vi=null;static#yi=new Set;constructor({textContentSource:t,container:e,viewport:i}){if(t instanceof ReadableStream)this.#di=t;else{if("object"!=typeof t)throw new Error('No "textContentSource" parameter specified.');this.#di=new ReadableStream({start(e){e.enqueue(t),e.close()}})}this.#ut=this.#ai=e,this.#hi=i.scale*(globalThis.devicePixelRatio||1),this.#oi=i.rotation,this.#ii={div:null,properties:null,ctx:null};const{pageWidth:s,pageHeight:n,pageX:r,pageY:a}=i.rawDims;this.#gi=[1,0,0,-1,-r,a+n],this.#ni=s,this.#si=n,Ye.#Ai(),bt(e,i),this.#Je.promise.finally((()=>{Ye.#yi.delete(this),this.#ii=null,this.#li=null})).catch((()=>{}))}static get fontFamilyMap(){const{isWindows:t,isFirefox:e}=N.platform;return C(this,"fontFamilyMap",new Map([["sans-serif",(t&&e?"Calibri, ":"")+"sans-serif"],["monospace",(t&&e?"Lucida Console, ":"")+"monospace"]]))}render(){const t=()=>{this.#ri.read().then((({value:e,done:i})=>{i?this.#Je.resolve():(this.#ei??=e.lang,Object.assign(this.#li,e.styles),this.#wi(e.items),t())}),this.#Je.reject)};return this.#ri=this.#di.getReader(),Ye.#yi.add(this),t(),this.#Je.promise}update({viewport:t,onBefore:e=null}){const i=t.scale*(globalThis.devicePixelRatio||1),s=t.rotation;if(s!==this.#oi&&(e?.(),this.#oi=s,bt(this.#ai,{rotation:s})),i!==this.#hi){e?.(),this.#hi=i;const t={div:null,properties:null,ctx:Ye.#xi(this.#ei)};for(const e of this.#ui)t.properties=this.#pi.get(e),t.div=e,this.#_i(t)}}cancel(){const t=new D("TextLayer task cancelled.");this.#ri?.cancel(t).catch((()=>{})),this.#ri=null,this.#Je.reject(t)}get textDivs(){return this.#ui}get textContentItemsStr(){return this.#ci}#wi(t){if(this.#Ze)return;this.#ii.ctx??=Ye.#xi(this.#ei);const e=this.#ui,i=this.#ci;for(const s of t){if(e.length>1e5)return w("Ignoring additional textDivs for performance reasons."),void(this.#Ze=!0);if(void 0!==s.str)i.push(s.str),this.#Ei(s);else if("beginMarkedContentProps"===s.type||"beginMarkedContent"===s.type){const t=this.#ut;this.#ut=document.createElement("span"),this.#ut.classList.add("markedContent"),null!==s.id&&this.#ut.setAttribute("id",`${s.id}`),t.append(this.#ut)}else"endMarkedContent"===s.type&&(this.#ut=this.#ut.parentNode)}}#Ei(t){const e=document.createElement("span"),i={angle:0,canvasWidth:0,hasText:""!==t.str,hasEOL:t.hasEOL,fontSize:0};this.#ui.push(e);const s=z.transform(this.#gi,t.transform);let n=Math.atan2(s[1],s[0]);const r=this.#li[t.fontName];r.vertical&&(n+=Math.PI/2);let a=this.#ti&&r.fontSubstitution||r.fontFamily;a=Ye.fontFamilyMap.get(a)||a;const o=Math.hypot(s[2],s[3]),h=o*Ye.#Ci(a,this.#ei);let l,c;0===n?(l=s[4],c=s[5]-h):(l=s[4]+h*Math.sin(n),c=s[5]-h*Math.cos(n));const d="calc(var(--scale-factor)*",u=e.style;this.#ut===this.#ai?(u.left=`${(100*l/this.#ni).toFixed(2)}%`,u.top=`${(100*c/this.#si).toFixed(2)}%`):(u.left=`${d}${l.toFixed(2)}px)`,u.top=`${d}${c.toFixed(2)}px)`),u.fontSize=`${d}${(Ye.#vi*o).toFixed(2)}px)`,u.fontFamily=a,i.fontSize=o,e.setAttribute("role","presentation"),e.textContent=t.str,e.dir=t.dir,this.#ti&&(e.dataset.fontName=r.fontSubstitutionLoadedName||t.fontName),0!==n&&(i.angle=n*(180/Math.PI));let p=!1;if(t.str.length>1)p=!0;else if(" "!==t.str&&t.transform[0]!==t.transform[3]){const e=Math.abs(t.transform[0]),i=Math.abs(t.transform[3]);e!==i&&Math.max(e,i)/Math.min(e,i)>1.5&&(p=!0)}if(p&&(i.canvasWidth=r.vertical?t.height:t.width),this.#pi.set(e,i),this.#ii.div=e,this.#ii.properties=i,this.#_i(this.#ii),i.hasText&&this.#ut.append(e),i.hasEOL){const t=document.createElement("br");t.setAttribute("role","presentation"),this.#ut.append(t)}}#_i(t){const{div:e,properties:i,ctx:s}=t,{style:n}=e;let r="";if(Ye.#vi>1&&(r=`scale(${1/Ye.#vi})`),0!==i.canvasWidth&&i.hasText){const{fontFamily:t}=n,{canvasWidth:a,fontSize:o}=i;Ye.#Si(s,o*this.#hi,t);const{width:h}=s.measureText(e.textContent);h>0&&(r=`scaleX(${a*this.#hi/h}) ${r}`)}0!==i.angle&&(r=`rotate(${i.angle}deg) ${r}`),r.length>0&&(n.transform=r)}static cleanup(){if(!(this.#yi.size>0)){this.#fi.clear();for(const{canvas:t}of this.#mi.values())t.remove();this.#mi.clear()}}static#xi(t=null){let e=this.#mi.get(t||="");if(!e){const i=document.createElement("canvas");i.className="hiddenCanvasElement",i.lang=t,document.body.append(i),e=i.getContext("2d",{alpha:!1,willReadFrequently:!0}),this.#mi.set(t,e),this.#bi.set(e,{size:0,family:""})}return e}static#Si(t,e,i){const s=this.#bi.get(t);e===s.size&&i===s.family||(t.font=`${e}px ${i}`,s.size=e,s.family=i)}static#Ai(){if(null!==this.#vi)return;const t=document.createElement("div");t.style.opacity=0,t.style.lineHeight=1,t.style.fontSize="1px",t.style.position="absolute",t.textContent="X",document.body.append(t),this.#vi=t.getBoundingClientRect().height,t.remove()}static#Ci(t,e){const i=this.#fi.get(t);if(i)return i;const s=this.#xi(e);s.canvas.width=s.canvas.height=Ke,this.#Si(s,Ke,t);const n=s.measureText("");let r=n.fontBoundingBoxAscent,a=Math.abs(n.fontBoundingBoxDescent);if(r){const e=r/(r+a);return this.#fi.set(t,e),s.canvas.width=s.canvas.height=0,e}s.strokeStyle="red",s.clearRect(0,0,Ke,Ke),s.strokeText("g",0,0);let o=s.getImageData(0,0,Ke,Ke).data;a=0;for(let t=o.length-1-3;t>=0;t-=4)if(o[t]>0){a=Math.ceil(t/4/Ke);break}s.clearRect(0,0,Ke,Ke),s.strokeText("A",0,Ke),o=s.getImageData(0,0,Ke,Ke).data,r=0;for(let t=0,e=o.length;t<e;t+=4)if(o[t]>0){r=Ke-Math.floor(t/4/Ke);break}s.canvas.width=s.canvas.height=0;const h=r?r/(r+a):.8;return this.#fi.set(t,h),h}}class Qe{static textContent(t){const e=[],i={items:e,styles:Object.create(null)};return function t(i){if(!i)return;let s=null;const n=i.name;if("#text"===n)s=i.value;else{if(!Qe.shouldBuildText(n))return;i?.attributes?.textContent?s=i.attributes.textContent:i.value&&(s=i.value)}if(null!==s&&e.push({str:s}),i.children)for(const e of i.children)t(e)}(t),i}static shouldBuildText(t){return!("textarea"===t||"input"===t||"option"===t||"select"===t)}}const Je=65536,Ze=n?class extends G{_createCanvas(t,e){return Ut.get("canvas").createCanvas(t,e)}}:class extends G{constructor({ownerDocument:t=globalThis.document,enableHWA:e=!1}){super({enableHWA:e}),this._document=t}_createCanvas(t,e){const i=this._document.createElement("canvas");return i.width=t,i.height=e,i}},ti=n?class extends V{_fetchData(t,e){return $t(t).then((t=>({cMapData:t,compressionType:e})))}}:J,ei=n?class extends W{}:class extends W{#Ti;#Mi;#ki;#Ii;#Ri;#Pi;#y=0;constructor({docId:t,ownerDocument:e=globalThis.document}){super(),this.#Ii=t,this.#Ri=e}get#w(){return this.#Mi||=new Map}get#Di(){return this.#Pi||=new Map}get#Li(){if(!this.#ki){const t=this.#Ri.createElement("div"),{style:e}=t;e.visibility="hidden",e.contain="strict",e.width=e.height=0,e.position="absolute",e.top=e.left=0,e.zIndex=-1;const i=this.#Ri.createElementNS(K,"svg");i.setAttribute("width",0),i.setAttribute("height",0),this.#ki=this.#Ri.createElementNS(K,"defs"),t.append(i),i.append(this.#ki),this.#Ri.body.append(t)}return this.#ki}#Fi(t){if(1===t.length){const e=t[0],i=new Array(256);for(let t=0;t<256;t++)i[t]=e[t]/255;const s=i.join(",");return[s,s,s]}const[e,i,s]=t,n=new Array(256),r=new Array(256),a=new Array(256);for(let t=0;t<256;t++)n[t]=e[t]/255,r[t]=i[t]/255,a[t]=s[t]/255;return[n.join(","),r.join(","),a.join(",")]}#Oi(t){if(void 0===this.#Ti){this.#Ti="";const t=this.#Ri.URL;t!==this.#Ri.baseURI&&(st(t)?w('#createUrl: ignore "data:"-URL for performance reasons.'):this.#Ti=t.split("#",1)[0])}return`url(${this.#Ti}#${t})`}addFilter(t){if(!t)return"none";let e=this.#w.get(t);if(e)return e;const[i,s,n]=this.#Fi(t),r=1===t.length?i:`${i}${s}${n}`;if(e=this.#w.get(r),e)return this.#w.set(t,e),e;const a=`g_${this.#Ii}_transfer_map_${this.#y++}`,o=this.#Oi(a);this.#w.set(t,o),this.#w.set(r,o);const h=this.#Ni(a);return this.#Bi(i,s,n,h),o}addHCMFilter(t,e){const i=`${t}-${e}`,s="base";let n=this.#Di.get(s);if(n?.key===i)return n.url;if(n?(n.filter?.remove(),n.key=i,n.url="none",n.filter=null):(n={key:i,url:"none",filter:null},this.#Di.set(s,n)),!t||!e)return n.url;const r=this.#zi(t);t=z.makeHexColor(...r);const a=this.#zi(e);if(e=z.makeHexColor(...a),this.#Li.style.color="","#000000"===t&&"#ffffff"===e||t===e)return n.url;const o=new Array(256);for(let t=0;t<=255;t++){const e=t/255;o[t]=e<=.03928?e/12.92:((e+.055)/1.055)**2.4}const h=o.join(","),l=`g_${this.#Ii}_hcm_filter`,c=n.filter=this.#Ni(l);this.#Bi(h,h,h,c),this.#Hi(c);const d=(t,e)=>{const i=r[t]/255,s=a[t]/255,n=new Array(e+1);for(let t=0;t<=e;t++)n[t]=i+t/e*(s-i);return n.join(",")};return this.#Bi(d(0,5),d(1,5),d(2,5),c),n.url=this.#Oi(l),n.url}addAlphaFilter(t){let e=this.#w.get(t);if(e)return e;const[i]=this.#Fi([t]),s=`alpha_${i}`;if(e=this.#w.get(s),e)return this.#w.set(t,e),e;const n=`g_${this.#Ii}_alpha_map_${this.#y++}`,r=this.#Oi(n);this.#w.set(t,r),this.#w.set(s,r);const a=this.#Ni(n);return this.#ji(i,a),r}addLuminosityFilter(t){let e,i,s=this.#w.get(t||"luminosity");if(s)return s;if(t?([e]=this.#Fi([t]),i=`luminosity_${e}`):i="luminosity",s=this.#w.get(i),s)return this.#w.set(t,s),s;const n=`g_${this.#Ii}_luminosity_map_${this.#y++}`,r=this.#Oi(n);this.#w.set(t,r),this.#w.set(i,r);const a=this.#Ni(n);return this.#Ui(a),t&&this.#ji(e,a),r}addHighlightHCMFilter(t,e,i,s,n){const r=`${e}-${i}-${s}-${n}`;let a=this.#Di.get(t);if(a?.key===r)return a.url;if(a?(a.filter?.remove(),a.key=r,a.url="none",a.filter=null):(a={key:r,url:"none",filter:null},this.#Di.set(t,a)),!e||!i)return a.url;const[o,h]=[e,i].map(this.#zi.bind(this));let l=Math.round(.2126*o[0]+.7152*o[1]+.0722*o[2]),c=Math.round(.2126*h[0]+.7152*h[1]+.0722*h[2]),[d,u]=[s,n].map(this.#zi.bind(this));c<l&&([l,c,d,u]=[c,l,u,d]),this.#Li.style.color="";const p=(t,e,i)=>{const s=new Array(256),n=(c-l)/i,r=t/255,a=(e-t)/(255*i);let o=0;for(let t=0;t<=i;t++){const e=Math.round(l+t*n),i=r+t*a;for(let t=o;t<=e;t++)s[t]=i;o=e+1}for(let t=o;t<256;t++)s[t]=s[o-1];return s.join(",")},g=`g_${this.#Ii}_hcm_${t}_filter`,f=a.filter=this.#Ni(g);return this.#Hi(f),this.#Bi(p(d[0],u[0],5),p(d[1],u[1],5),p(d[2],u[2],5),f),a.url=this.#Oi(g),a.url}destroy(t=!1){t&&0!==this.#Di.size||(this.#ki&&(this.#ki.parentNode.parentNode.remove(),this.#ki=null),this.#Mi&&(this.#Mi.clear(),this.#Mi=null),this.#y=0)}#Ui(t){const e=this.#Ri.createElementNS(K,"feColorMatrix");e.setAttribute("type","matrix"),e.setAttribute("values","0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0"),t.append(e)}#Hi(t){const e=this.#Ri.createElementNS(K,"feColorMatrix");e.setAttribute("type","matrix"),e.setAttribute("values","0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0"),t.append(e)}#Ni(t){const e=this.#Ri.createElementNS(K,"filter");return e.setAttribute("color-interpolation-filters","sRGB"),e.setAttribute("id",t),this.#Li.append(e),e}#$i(t,e,i){const s=this.#Ri.createElementNS(K,e);s.setAttribute("type","discrete"),s.setAttribute("tableValues",i),t.append(s)}#Bi(t,e,i,s){const n=this.#Ri.createElementNS(K,"feComponentTransfer");s.append(n),this.#$i(n,"feFuncR",t),this.#$i(n,"feFuncG",e),this.#$i(n,"feFuncB",i)}#ji(t,e){const i=this.#Ri.createElementNS(K,"feComponentTransfer");e.append(i),this.#$i(i,"feFuncA",t)}#zi(t){return this.#Li.style.color=t,gt(getComputedStyle(this.#Li).getPropertyValue("color"))}},ii=n?class extends q{_fetchData(t){return $t(t)}}:Z;function si(t={}){"string"==typeof t||t instanceof URL?t={url:t}:(t instanceof ArrayBuffer||ArrayBuffer.isView(t))&&(t={data:t});const e=new ri,{docId:i}=e,s=t.url?function(t){if(t instanceof URL)return t.href;try{return new URL(t,window.location).href}catch{if(n&&"string"==typeof t)return t}throw new Error("Invalid PDF url data: either string or URL-object is expected in the url property.")}(t.url):null,r=t.data?function(t){if(n&&"undefined"!=typeof Buffer&&t instanceof Buffer)throw new Error("Please provide binary data as `Uint8Array`, rather than `Buffer`.");if(t instanceof Uint8Array&&t.byteLength===t.buffer.byteLength)return t;if("string"==typeof t)return F(t);if(t instanceof ArrayBuffer||ArrayBuffer.isView(t)||"object"==typeof t&&!isNaN(t?.length))return new Uint8Array(t);throw new Error("Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.")}(t.data):null,a=t.httpHeaders||null,o=!0===t.withCredentials,h=t.password??null,l=t.range instanceof ai?t.range:null,c=Number.isInteger(t.rangeChunkSize)&&t.rangeChunkSize>0?t.rangeChunkSize:Je;let d=t.worker instanceof ci?t.worker:null;const u=t.verbosity,p="string"!=typeof t.docBaseUrl||st(t.docBaseUrl)?null:t.docBaseUrl,g="string"==typeof t.cMapUrl?t.cMapUrl:null,f=!1!==t.cMapPacked,m=t.CMapReaderFactory||ti,b="string"==typeof t.standardFontDataUrl?t.standardFontDataUrl:null,y=t.StandardFontDataFactory||ii,A=!0!==t.stopAtErrors,w=Number.isInteger(t.maxImageSize)&&t.maxImageSize>-1?t.maxImageSize:-1,x=!1!==t.isEvalSupported,_="boolean"==typeof t.isOffscreenCanvasSupported?t.isOffscreenCanvasSupported:!n,E=Number.isInteger(t.canvasMaxAreaInBytes)?t.canvasMaxAreaInBytes:-1,C="boolean"==typeof t.disableFontFace?t.disableFontFace:n,S=!0===t.fontExtraProperties,T=!0===t.enableXfa,M=t.ownerDocument||globalThis.document,k=!0===t.disableRange,I=!0===t.disableStream,R=!0===t.disableAutoFetch,P=!0===t.pdfBug,D=t.CanvasFactory||Ze,L=t.FilterFactory||ei,O=!0===t.enableHWA,N=l?l.length:t.length??NaN,B="boolean"==typeof t.useSystemFonts?t.useSystemFonts:!n&&!C,z="boolean"==typeof t.useWorkerFetch?t.useWorkerFetch:m===J&&y===Z&&g&&b&&ht(g,document.baseURI)&&ht(b,document.baseURI);t.canvasFactory&&ct("`canvasFactory`-instance option, please use `CanvasFactory` instead."),t.filterFactory&&ct("`filterFactory`-instance option, please use `FilterFactory` instead."),v(u);const H={canvasFactory:new D({ownerDocument:M,enableHWA:O}),filterFactory:new L({docId:i,ownerDocument:M}),cMapReaderFactory:z?null:new m({baseUrl:g,isCompressed:f}),standardFontDataFactory:z?null:new y({baseUrl:b})};if(!d){const t={verbosity:u,port:me.workerPort};d=t.port?ci.fromPort(t):new ci(t),e._worker=d}const j={docId:i,apiVersion:"4.7.76",data:r,password:h,disableAutoFetch:R,rangeChunkSize:c,length:N,docBaseUrl:p,enableXfa:T,evaluatorOptions:{maxImageSize:w,disableFontFace:C,ignoreErrors:A,isEvalSupported:x,isOffscreenCanvasSupported:_,canvasMaxAreaInBytes:E,fontExtraProperties:S,useSystemFonts:B,cMapUrl:z?g:null,standardFontDataUrl:z?b:null}},U={disableFontFace:C,fontExtraProperties:S,ownerDocument:M,pdfBug:P,styleElement:null,loadingParams:{disableAutoFetch:R,enableXfa:T}};return d.promise.then((function(){if(e.destroyed)throw new Error("Loading aborted");if(d.destroyed)throw new Error("Worker was destroyed");const t=d.messageHandler.sendWithPromise("GetDocRequest",j,r?[r.buffer]:null);let h;if(l)h=new _e(l,{disableRange:k,disableStream:I});else if(!r){if(!s)throw new Error("getDocument - no `url` parameter provided.");let t;t=n?"undefined"!=typeof fetch&&"undefined"!=typeof Response&&"body"in Response.prototype&&ht(s)?De:Ue:ht(s)?De:Ne,h=new t({url:s,length:N,httpHeaders:a,withCredentials:o,rangeChunkSize:c,disableRange:k,disableStream:I})}return t.then((t=>{if(e.destroyed)throw new Error("Loading aborted");if(d.destroyed)throw new Error("Worker was destroyed");const s=new ve(i,t,d.port),n=new di(s,e,h,U,H);e._transport=n,s.send("Ready",null)}))})).catch(e._capability.reject),e}function ni(t){return"object"==typeof t&&Number.isInteger(t?.num)&&t.num>=0&&Number.isInteger(t?.gen)&&t.gen>=0}class ri{static#Ii=0;constructor(){this._capability=Promise.withResolvers(),this._transport=null,this._worker=null,this.docId="d"+ri.#Ii++,this.destroyed=!1,this.onPassword=null,this.onProgress=null}get promise(){return this._capability.promise}async destroy(){this.destroyed=!0;try{this._worker?.port&&(this._worker._pendingDestroy=!0),await(this._transport?.destroy())}catch(t){throw this._worker?.port&&delete this._worker._pendingDestroy,t}this._transport=null,this._worker&&(this._worker.destroy(),this._worker=null)}}class ai{constructor(t,e,i=!1,s=null){this.length=t,this.initialData=e,this.progressiveDone=i,this.contentDispositionFilename=s,this._rangeListeners=[],this._progressListeners=[],this._progressiveReadListeners=[],this._progressiveDoneListeners=[],this._readyCapability=Promise.withResolvers()}addRangeListener(t){this._rangeListeners.push(t)}addProgressListener(t){this._progressListeners.push(t)}addProgressiveReadListener(t){this._progressiveReadListeners.push(t)}addProgressiveDoneListener(t){this._progressiveDoneListeners.push(t)}onDataRange(t,e){for(const i of this._rangeListeners)i(t,e)}onDataProgress(t,e){this._readyCapability.promise.then((()=>{for(const i of this._progressListeners)i(t,e)}))}onDataProgressiveRead(t){this._readyCapability.promise.then((()=>{for(const e of this._progressiveReadListeners)e(t)}))}onDataProgressiveDone(){this._readyCapability.promise.then((()=>{for(const t of this._progressiveDoneListeners)t()}))}transportReady(){this._readyCapability.resolve()}requestDataRange(t,e){x("Abstract method PDFDataRangeTransport.requestDataRange")}abort(){}}class oi{constructor(t,e){this._pdfInfo=t,this._transport=e}get annotationStorage(){return this._transport.annotationStorage}get canvasFactory(){return this._transport.canvasFactory}get filterFactory(){return this._transport.filterFactory}get numPages(){return this._pdfInfo.numPages}get fingerprints(){return this._pdfInfo.fingerprints}get isPureXfa(){return C(this,"isPureXfa",!!this._transport._htmlForXfa)}get allXfaHtml(){return this._transport._htmlForXfa}getPage(t){return this._transport.getPage(t)}getPageIndex(t){return this._transport.getPageIndex(t)}getDestinations(){return this._transport.getDestinations()}getDestination(t){return this._transport.getDestination(t)}getPageLabels(){return this._transport.getPageLabels()}getPageLayout(){return this._transport.getPageLayout()}getPageMode(){return this._transport.getPageMode()}getViewerPreferences(){return this._transport.getViewerPreferences()}getOpenAction(){return this._transport.getOpenAction()}getAttachments(){return this._transport.getAttachments()}getJSActions(){return this._transport.getDocJSActions()}getOutline(){return this._transport.getOutline()}getOptionalContentConfig({intent:t="display"}={}){const{renderingIntent:e}=this._transport.getRenderingIntent(t);return this._transport.getOptionalContentConfig(e)}getPermissions(){return this._transport.getPermissions()}getMetadata(){return this._transport.getMetadata()}getMarkInfo(){return this._transport.getMarkInfo()}getData(){return this._transport.getData()}saveDocument(){return this._transport.saveDocument()}getDownloadInfo(){return this._transport.downloadInfoCapability.promise}cleanup(t=!1){return this._transport.startCleanup(t||this.isPureXfa)}destroy(){return this.loadingTask.destroy()}cachedPageNumber(t){return this._transport.cachedPageNumber(t)}get loadingParams(){return this._transport.loadingParams}get loadingTask(){return this._transport.loadingTask}getFieldObjects(){return this._transport.getFieldObjects()}hasJSActions(){return this._transport.hasJSActions()}getCalculationOrderIds(){return this._transport.getCalculationOrderIds()}}class hi{#Wi=null;#Gi=!1;constructor(t,e,i,s=!1){this._pageIndex=t,this._pageInfo=e,this._transport=i,this._stats=s?new ot:null,this._pdfBug=s,this.commonObjs=i.commonObjs,this.objs=new pi,this._maybeCleanupAfterRender=!1,this._intentStates=new Map,this.destroyed=!1}get pageNumber(){return this._pageIndex+1}get rotate(){return this._pageInfo.rotate}get ref(){return this._pageInfo.ref}get userUnit(){return this._pageInfo.userUnit}get view(){return this._pageInfo.view}getViewport({scale:t,rotation:e=this.rotate,offsetX:i=0,offsetY:s=0,dontFlip:n=!1}={}){return new et({viewBox:this.view,scale:t,rotation:e,offsetX:i,offsetY:s,dontFlip:n})}getAnnotations({intent:t="display"}={}){const{renderingIntent:e}=this._transport.getRenderingIntent(t);return this._transport.getAnnotations(this._pageIndex,e)}getJSActions(){return this._transport.getPageJSActions(this._pageIndex)}get filterFactory(){return this._transport.filterFactory}get isPureXfa(){return C(this,"isPureXfa",!!this._transport._htmlForXfa)}async getXfa(){return this._transport._htmlForXfa?.children[this._pageIndex]||null}render({canvasContext:t,viewport:e,intent:i="display",annotationMode:s=h.ENABLE,transform:n=null,background:r=null,optionalContentConfigPromise:a=null,annotationCanvasMap:o=null,pageColors:l=null,printAnnotationStorage:c=null,isEditing:d=!1}){this._stats?.time("Overall");const u=this._transport.getRenderingIntent(i,s,c,d),{renderingIntent:p,cacheKey:g}=u;this.#Gi=!1,this.#Vi(),a||=this._transport.getOptionalContentConfig(p);let f=this._intentStates.get(g);f||(f=Object.create(null),this._intentStates.set(g,f)),f.streamReaderCancelTimeout&&(clearTimeout(f.streamReaderCancelTimeout),f.streamReaderCancelTimeout=null);const m=!!(4&p);f.displayReadyCapability||(f.displayReadyCapability=Promise.withResolvers(),f.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},this._stats?.time("Page Request"),this._pumpOperatorList(u));const b=t=>{f.renderTasks.delete(v),(this._maybeCleanupAfterRender||m)&&(this.#Gi=!0),this.#qi(!m),t?(v.capability.reject(t),this._abortOperatorList({intentState:f,reason:t instanceof Error?t:new Error(t)})):v.capability.resolve(),this._stats&&(this._stats.timeEnd("Rendering"),this._stats.timeEnd("Overall"),globalThis.Stats?.enabled&&globalThis.Stats.add(this.pageNumber,this._stats))},v=new fi({callback:b,params:{canvasContext:t,viewport:e,transform:n,background:r},objs:this.objs,commonObjs:this.commonObjs,annotationCanvasMap:o,operatorList:f.operatorList,pageIndex:this._pageIndex,canvasFactory:this._transport.canvasFactory,filterFactory:this._transport.filterFactory,useRequestAnimationFrame:!m,pdfBug:this._pdfBug,pageColors:l});(f.renderTasks||=new Set).add(v);const y=v.task;return Promise.all([f.displayReadyCapability.promise,a]).then((([t,e])=>{if(this.destroyed)b();else{if(this._stats?.time("Rendering"),!(e.renderingIntent&p))throw new Error("Must use the same `intent`-argument when calling the `PDFPageProxy.render` and `PDFDocumentProxy.getOptionalContentConfig` methods.");v.initializeGraphics({transparency:t,optionalContentConfig:e}),v.operatorListChanged()}})).catch(b),y}getOperatorList({intent:t="display",annotationMode:e=h.ENABLE,printAnnotationStorage:i=null,isEditing:s=!1}={}){const n=this._transport.getRenderingIntent(t,e,i,s,!0);let r,a=this._intentStates.get(n.cacheKey);return a||(a=Object.create(null),this._intentStates.set(n.cacheKey,a)),a.opListReadCapability||(r=Object.create(null),r.operatorListChanged=function(){a.operatorList.lastChunk&&(a.opListReadCapability.resolve(a.operatorList),a.renderTasks.delete(r))},a.opListReadCapability=Promise.withResolvers(),(a.renderTasks||=new Set).add(r),a.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},this._stats?.time("Page Request"),this._pumpOperatorList(n)),a.opListReadCapability.promise}streamTextContent({includeMarkedContent:t=!1,disableNormalization:e=!1}={}){return this._transport.messageHandler.sendWithStream("GetTextContent",{pageIndex:this._pageIndex,includeMarkedContent:!0===t,disableNormalization:!0===e},{highWaterMark:100,size:t=>t.items.length})}getTextContent(t={}){if(this._transport._htmlForXfa)return this.getXfa().then((t=>Qe.textContent(t)));const e=this.streamTextContent(t);return new Promise((function(t,i){const s=e.getReader(),n={items:[],styles:Object.create(null),lang:null};!function e(){s.read().then((function({value:i,done:s}){s?t(n):(n.lang??=i.lang,Object.assign(n.styles,i.styles),n.items.push(...i.items),e())}),i)}()}))}getStructTree(){return this._transport.getStructTree(this._pageIndex)}_destroy(){this.destroyed=!0;const t=[];for(const e of this._intentStates.values())if(this._abortOperatorList({intentState:e,reason:new Error("Page was destroyed."),force:!0}),!e.opListReadCapability)for(const i of e.renderTasks)t.push(i.completed),i.cancel();return this.objs.clear(),this.#Gi=!1,this.#Vi(),Promise.all(t)}cleanup(t=!1){this.#Gi=!0;const e=this.#qi(!1);return t&&e&&(this._stats&&=new ot),e}#qi(t=!1){if(this.#Vi(),!this.#Gi||this.destroyed)return!1;if(t)return this.#Wi=setTimeout((()=>{this.#Wi=null,this.#qi(!1)}),5e3),!1;for(const{renderTasks:t,operatorList:e}of this._intentStates.values())if(t.size>0||!e.lastChunk)return!1;return this._intentStates.clear(),this.objs.clear(),this.#Gi=!1,!0}#Vi(){this.#Wi&&(clearTimeout(this.#Wi),this.#Wi=null)}_startRenderPage(t,e){const i=this._intentStates.get(e);i&&(this._stats?.timeEnd("Page Request"),i.displayReadyCapability?.resolve(t))}_renderPageChunk(t,e){for(let i=0,s=t.length;i<s;i++)e.operatorList.fnArray.push(t.fnArray[i]),e.operatorList.argsArray.push(t.argsArray[i]);e.operatorList.lastChunk=t.lastChunk,e.operatorList.separateAnnots=t.separateAnnots;for(const t of e.renderTasks)t.operatorListChanged();t.lastChunk&&this.#qi(!0)}_pumpOperatorList({renderingIntent:t,cacheKey:e,annotationStorageSerializable:i,modifiedIds:s}){const{map:n,transfer:r}=i,a=this._transport.messageHandler.sendWithStream("GetOperatorList",{pageIndex:this._pageIndex,intent:t,cacheKey:e,annotationStorage:n,modifiedIds:s},r).getReader(),o=this._intentStates.get(e);o.streamReader=a;const h=()=>{a.read().then((({value:t,done:e})=>{e?o.streamReader=null:this._transport.destroyed||(this._renderPageChunk(t,o),h())}),(t=>{if(o.streamReader=null,!this._transport.destroyed){if(o.operatorList){o.operatorList.lastChunk=!0;for(const t of o.renderTasks)t.operatorListChanged();this.#qi(!0)}if(o.displayReadyCapability)o.displayReadyCapability.reject(t);else{if(!o.opListReadCapability)throw t;o.opListReadCapability.reject(t)}}}))};h()}_abortOperatorList({intentState:t,reason:e,force:i=!1}){if(t.streamReader){if(t.streamReaderCancelTimeout&&(clearTimeout(t.streamReaderCancelTimeout),t.streamReaderCancelTimeout=null),!i){if(t.renderTasks.size>0)return;if(e instanceof it){let i=100;return e.extraDelay>0&&e.extraDelay<1e3&&(i+=e.extraDelay),void(t.streamReaderCancelTimeout=setTimeout((()=>{t.streamReaderCancelTimeout=null,this._abortOperatorList({intentState:t,reason:e,force:!0})}),i))}}if(t.streamReader.cancel(new D(e.message)).catch((()=>{})),t.streamReader=null,!this._transport.destroyed){for(const[e,i]of this._intentStates)if(i===t){this._intentStates.delete(e);break}this.cleanup()}}}get stats(){return this._stats}}class li{#Xi=new Set;#Ki=Promise.resolve();postMessage(t,e){const i={data:structuredClone(t,e?{transfer:e}:null)};this.#Ki.then((()=>{for(const t of this.#Xi)t.call(this,i)}))}addEventListener(t,e){this.#Xi.add(e)}removeEventListener(t,e){this.#Xi.delete(e)}terminate(){this.#Xi.clear()}}class ci{static#Yi=0;static#Qi=!1;static#Ji;static{n&&(this.#Qi=!0,me.workerSrc||="./pdf.worker.mjs"),this._isSameOrigin=(t,e)=>{let i;try{if(i=new URL(t),!i.origin||"null"===i.origin)return!1}catch{return!1}const s=new URL(e,i);return i.origin===s.origin},this._createCDNWrapper=t=>{const e=`await import("${t}");`;return URL.createObjectURL(new Blob([e],{type:"text/javascript"}))}}constructor({name:t=null,port:e=null,verbosity:i=y()}={}){if(this.name=t,this.destroyed=!1,this.verbosity=i,this._readyCapability=Promise.withResolvers(),this._port=null,this._webWorker=null,this._messageHandler=null,e){if(ci.#Ji?.has(e))throw new Error("Cannot use more than one PDFWorker per port.");return(ci.#Ji||=new WeakMap).set(e,this),void this._initializeFromPort(e)}this._initialize()}get promise(){return n?Promise.all([Ut.promise,this._readyCapability.promise]):this._readyCapability.promise}#Zi(){this._readyCapability.resolve(),this._messageHandler.send("configure",{verbosity:this.verbosity})}get port(){return this._port}get messageHandler(){return this._messageHandler}_initializeFromPort(t){this._port=t,this._messageHandler=new ve("main","worker",t),this._messageHandler.on("ready",(function(){})),this.#Zi()}_initialize(){if(ci.#Qi||ci.#ts)return void this._setupFakeWorker();let{workerSrc:t}=ci;try{ci._isSameOrigin(window.location.href,t)||(t=ci._createCDNWrapper(new URL(t,window.location).href));const e=new Worker(t,{type:"module"}),i=new ve("main","worker",e),s=()=>{n.abort(),i.destroy(),e.terminate(),this.destroyed?this._readyCapability.reject(new Error("Worker was destroyed")):this._setupFakeWorker()},n=new AbortController;e.addEventListener("error",(()=>{this._webWorker||s()}),{signal:n.signal}),i.on("test",(t=>{n.abort(),!this.destroyed&&t?(this._messageHandler=i,this._port=e,this._webWorker=e,this.#Zi()):s()})),i.on("ready",(t=>{if(n.abort(),this.destroyed)s();else try{r()}catch{this._setupFakeWorker()}}));const r=()=>{const t=new Uint8Array;i.send("test",t,[t.buffer])};return void r()}catch{A("The worker has been disabled.")}this._setupFakeWorker()}_setupFakeWorker(){ci.#Qi||(w("Setting up fake worker."),ci.#Qi=!0),ci._setupFakeWorkerGlobal.then((t=>{if(this.destroyed)return void this._readyCapability.reject(new Error("Worker was destroyed"));const e=new li;this._port=e;const i="fake"+ci.#Yi++,s=new ve(i+"_worker",i,e);t.setup(s,e),this._messageHandler=new ve(i,i+"_worker",e),this.#Zi()})).catch((t=>{this._readyCapability.reject(new Error(`Setting up fake worker failed: "${t.message}".`))}))}destroy(){this.destroyed=!0,this._webWorker&&(this._webWorker.terminate(),this._webWorker=null),ci.#Ji?.delete(this._port),this._port=null,this._messageHandler&&(this._messageHandler.destroy(),this._messageHandler=null)}static fromPort(t){if(!t?.port)throw new Error("PDFWorker.fromPort - invalid method signature.");const e=this.#Ji?.get(t.port);if(e){if(e._pendingDestroy)throw new Error("PDFWorker.fromPort - the worker is being destroyed.\nPlease remember to await `PDFDocumentLoadingTask.destroy()`-calls.");return e}return new ci(t)}static get workerSrc(){if(me.workerSrc)return me.workerSrc;throw new Error('No "GlobalWorkerOptions.workerSrc" specified.')}static get#ts(){try{return globalThis.pdfjsWorker?.WorkerMessageHandler||null}catch{return null}}static get _setupFakeWorkerGlobal(){return C(this,"_setupFakeWorkerGlobal",(async()=>this.#ts?this.#ts:(await import(this.workerSrc)).WorkerMessageHandler)())}}class di{#es=new Map;#is=new Map;#ss=new Map;#ns=new Map;#rs=null;constructor(t,e,i,s,n){this.messageHandler=t,this.loadingTask=e,this.commonObjs=new pi,this.fontLoader=new Bt({ownerDocument:s.ownerDocument,styleElement:s.styleElement}),this.loadingParams=s.loadingParams,this._params=s,this.canvasFactory=n.canvasFactory,this.filterFactory=n.filterFactory,this.cMapReaderFactory=n.cMapReaderFactory,this.standardFontDataFactory=n.standardFontDataFactory,this.destroyed=!1,this.destroyCapability=null,this._networkStream=i,this._fullReader=null,this._lastProgress=null,this.downloadInfoCapability=Promise.withResolvers(),this.setupMessageHandler()}#as(t,e=null){const i=this.#es.get(t);if(i)return i;const s=this.messageHandler.sendWithPromise(t,e);return this.#es.set(t,s),s}get annotationStorage(){return C(this,"annotationStorage",new Ot)}getRenderingIntent(t,e=h.ENABLE,i=null,s=!1,n=!1){let r=2,a=Ft;switch(t){case"any":r=1;break;case"display":break;case"print":r=4;break;default:w(`getRenderingIntent - invalid intent: ${t}`)}const o=4&r&&i instanceof Nt?i:this.annotationStorage;switch(e){case h.DISABLE:r+=64;break;case h.ENABLE:break;case h.ENABLE_FORMS:r+=16;break;case h.ENABLE_STORAGE:r+=32,a=o.serializable;break;default:w(`getRenderingIntent - invalid annotationMode: ${e}`)}s&&(r+=128),n&&(r+=256);const{ids:l,hash:c}=o.modifiedIds;return{renderingIntent:r,cacheKey:[r,a.hash,c].join("_"),annotationStorageSerializable:a,modifiedIds:l}}destroy(){if(this.destroyCapability)return this.destroyCapability.promise;this.destroyed=!0,this.destroyCapability=Promise.withResolvers(),this.#rs?.reject(new Error("Worker was destroyed during onPassword callback"));const t=[];for(const e of this.#is.values())t.push(e._destroy());this.#is.clear(),this.#ss.clear(),this.#ns.clear(),this.hasOwnProperty("annotationStorage")&&this.annotationStorage.resetModified();const e=this.messageHandler.sendWithPromise("Terminate",null);return t.push(e),Promise.all(t).then((()=>{this.commonObjs.clear(),this.fontLoader.clear(),this.#es.clear(),this.filterFactory.destroy(),Ye.cleanup(),this._networkStream?.cancelAllRequests(new D("Worker was terminated.")),this.messageHandler&&(this.messageHandler.destroy(),this.messageHandler=null),this.destroyCapability.resolve()}),this.destroyCapability.reject),this.destroyCapability.promise}setupMessageHandler(){const{messageHandler:t,loadingTask:e}=this;t.on("GetReader",((t,e)=>{_(this._networkStream,"GetReader - no `IPDFStream` instance available."),this._fullReader=this._networkStream.getFullReader(),this._fullReader.onProgress=t=>{this._lastProgress={loaded:t.loaded,total:t.total}},e.onPull=()=>{this._fullReader.read().then((function({value:t,done:i}){i?e.close():(_(t instanceof ArrayBuffer,"GetReader - expected an ArrayBuffer."),e.enqueue(new Uint8Array(t),1,[t]))})).catch((t=>{e.error(t)}))},e.onCancel=t=>{this._fullReader.cancel(t),e.ready.catch((t=>{if(!this.destroyed)throw t}))}})),t.on("ReaderHeadersReady",(t=>{const i=Promise.withResolvers(),s=this._fullReader;return s.headersReady.then((()=>{s.isStreamingSupported&&s.isRangeSupported||(this._lastProgress&&e.onProgress?.(this._lastProgress),s.onProgress=t=>{e.onProgress?.({loaded:t.loaded,total:t.total})}),i.resolve({isStreamingSupported:s.isStreamingSupported,isRangeSupported:s.isRangeSupported,contentLength:s.contentLength})}),i.reject),i.promise})),t.on("GetRangeReader",((t,e)=>{_(this._networkStream,"GetRangeReader - no `IPDFStream` instance available.");const i=this._networkStream.getRangeReader(t.begin,t.end);i?(e.onPull=()=>{i.read().then((function({value:t,done:i}){i?e.close():(_(t instanceof ArrayBuffer,"GetRangeReader - expected an ArrayBuffer."),e.enqueue(new Uint8Array(t),1,[t]))})).catch((t=>{e.error(t)}))},e.onCancel=t=>{i.cancel(t),e.ready.catch((t=>{if(!this.destroyed)throw t}))}):e.close()})),t.on("GetDoc",(({pdfInfo:t})=>{this._numPages=t.numPages,this._htmlForXfa=t.htmlForXfa,delete t.htmlForXfa,e._capability.resolve(new oi(t,this))})),t.on("DocException",(function(t){let i;switch(t.name){case"PasswordException":i=new T(t.message,t.code);break;case"InvalidPDFException":i=new k(t.message);break;case"MissingPDFException":i=new I(t.message);break;case"UnexpectedResponseException":i=new R(t.message,t.status);break;case"UnknownErrorException":i=new M(t.message,t.details);break;default:x("DocException - expected a valid Error.")}e._capability.reject(i)})),t.on("PasswordRequest",(t=>{if(this.#rs=Promise.withResolvers(),e.onPassword){const i=t=>{t instanceof Error?this.#rs.reject(t):this.#rs.resolve({password:t})};try{e.onPassword(i,t.code)}catch(t){this.#rs.reject(t)}}else this.#rs.reject(new T(t.message,t.code));return this.#rs.promise})),t.on("DataLoaded",(t=>{e.onProgress?.({loaded:t.length,total:t.length}),this.downloadInfoCapability.resolve(t)})),t.on("StartRenderPage",(t=>{this.destroyed||this.#is.get(t.pageIndex)._startRenderPage(t.transparency,t.cacheKey)})),t.on("commonobj",(([e,i,s])=>{if(this.destroyed)return null;if(this.commonObjs.has(e))return null;switch(i){case"Font":const{disableFontFace:n,fontExtraProperties:r,pdfBug:a}=this._params;if("error"in s){const t=s.error;w(`Error during font loading: ${t}`),this.commonObjs.resolve(e,t);break}const o=a&&globalThis.FontInspector?.enabled?(t,e)=>globalThis.FontInspector.fontAdded(t,e):null,h=new zt(s,{disableFontFace:n,inspectFont:o});this.fontLoader.bind(h).catch((()=>t.sendWithPromise("FontFallback",{id:e}))).finally((()=>{!r&&h.data&&(h.data=null),this.commonObjs.resolve(e,h)}));break;case"CopyLocalImage":const{imageRef:l}=s;_(l,"The imageRef must be defined.");for(const t of this.#is.values())for(const[,i]of t.objs)if(i?.ref===l)return i.dataLen?(this.commonObjs.resolve(e,structuredClone(i)),i.dataLen):null;break;case"FontPath":case"Image":case"Pattern":this.commonObjs.resolve(e,s);break;default:throw new Error(`Got unknown common object type ${i}`)}return null})),t.on("obj",(([t,e,i,s])=>{if(this.destroyed)return;const n=this.#is.get(e);if(!n.objs.has(t))if(0!==n._intentStates.size)switch(i){case"Image":n.objs.resolve(t,s),s?.dataLen>1e7&&(n._maybeCleanupAfterRender=!0);break;case"Pattern":n.objs.resolve(t,s);break;default:throw new Error(`Got unknown object type ${i}`)}else s?.bitmap?.close()})),t.on("DocProgress",(t=>{this.destroyed||e.onProgress?.({loaded:t.loaded,total:t.total})})),t.on("FetchBuiltInCMap",(t=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.cMapReaderFactory?this.cMapReaderFactory.fetch(t):Promise.reject(new Error("CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.")))),t.on("FetchStandardFontData",(t=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.standardFontDataFactory?this.standardFontDataFactory.fetch(t):Promise.reject(new Error("StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter."))))}getData(){return this.messageHandler.sendWithPromise("GetData",null)}saveDocument(){this.annotationStorage.size<=0&&w("saveDocument called while `annotationStorage` is empty, please use the getData-method instead.");const{map:t,transfer:e}=this.annotationStorage.serializable;return this.messageHandler.sendWithPromise("SaveDocument",{isPureXfa:!!this._htmlForXfa,numPages:this._numPages,annotationStorage:t,filename:this._fullReader?.filename??null},e).finally((()=>{this.annotationStorage.resetModified()}))}getPage(t){if(!Number.isInteger(t)||t<=0||t>this._numPages)return Promise.reject(new Error("Invalid page request."));const e=t-1,i=this.#ss.get(e);if(i)return i;const s=this.messageHandler.sendWithPromise("GetPage",{pageIndex:e}).then((i=>{if(this.destroyed)throw new Error("Transport destroyed");i.refStr&&this.#ns.set(i.refStr,t);const s=new hi(e,i,this,this._params.pdfBug);return this.#is.set(e,s),s}));return this.#ss.set(e,s),s}getPageIndex(t){return ni(t)?this.messageHandler.sendWithPromise("GetPageIndex",{num:t.num,gen:t.gen}):Promise.reject(new Error("Invalid pageIndex request."))}getAnnotations(t,e){return this.messageHandler.sendWithPromise("GetAnnotations",{pageIndex:t,intent:e})}getFieldObjects(){return this.#as("GetFieldObjects")}hasJSActions(){return this.#as("HasJSActions")}getCalculationOrderIds(){return this.messageHandler.sendWithPromise("GetCalculationOrderIds",null)}getDestinations(){return this.messageHandler.sendWithPromise("GetDestinations",null)}getDestination(t){return"string"!=typeof t?Promise.reject(new Error("Invalid destination request.")):this.messageHandler.sendWithPromise("GetDestination",{id:t})}getPageLabels(){return this.messageHandler.sendWithPromise("GetPageLabels",null)}getPageLayout(){return this.messageHandler.sendWithPromise("GetPageLayout",null)}getPageMode(){return this.messageHandler.sendWithPromise("GetPageMode",null)}getViewerPreferences(){return this.messageHandler.sendWithPromise("GetViewerPreferences",null)}getOpenAction(){return this.messageHandler.sendWithPromise("GetOpenAction",null)}getAttachments(){return this.messageHandler.sendWithPromise("GetAttachments",null)}getDocJSActions(){return this.#as("GetDocJSActions")}getPageJSActions(t){return this.messageHandler.sendWithPromise("GetPageJSActions",{pageIndex:t})}getStructTree(t){return this.messageHandler.sendWithPromise("GetStructTree",{pageIndex:t})}getOutline(){return this.messageHandler.sendWithPromise("GetOutline",null)}getOptionalContentConfig(t){return this.#as("GetOptionalContentConfig").then((e=>new xe(e,t)))}getPermissions(){return this.messageHandler.sendWithPromise("GetPermissions",null)}getMetadata(){const t="GetMetadata",e=this.#es.get(t);if(e)return e;const i=this.messageHandler.sendWithPromise(t,null).then((t=>({info:t[0],metadata:t[1]?new ye(t[1]):null,contentDispositionFilename:this._fullReader?.filename??null,contentLength:this._fullReader?.contentLength??null})));return this.#es.set(t,i),i}getMarkInfo(){return this.messageHandler.sendWithPromise("GetMarkInfo",null)}async startCleanup(t=!1){if(!this.destroyed){await this.messageHandler.sendWithPromise("Cleanup",null);for(const t of this.#is.values())if(!t.cleanup())throw new Error(`startCleanup: Page ${t.pageNumber} is currently rendering.`);this.commonObjs.clear(),t||this.fontLoader.clear(),this.#es.clear(),this.filterFactory.destroy(!0),Ye.cleanup()}}cachedPageNumber(t){if(!ni(t))return null;const e=0===t.gen?`${t.num}R`:`${t.num}R${t.gen}`;return this.#ns.get(e)??null}}const ui=Symbol("INITIAL_DATA");class pi{#os=Object.create(null);#hs(t){return this.#os[t]||={...Promise.withResolvers(),data:ui}}get(t,e=null){if(e){const i=this.#hs(t);return i.promise.then((()=>e(i.data))),null}const i=this.#os[t];if(!i||i.data===ui)throw new Error(`Requesting object that isn't resolved yet ${t}.`);return i.data}has(t){const e=this.#os[t];return!!e&&e.data!==ui}resolve(t,e=null){const i=this.#hs(t);i.data=e,i.resolve()}clear(){for(const t in this.#os){const{data:e}=this.#os[t];e?.bitmap?.close()}this.#os=Object.create(null)}*[Symbol.iterator](){for(const t in this.#os){const{data:e}=this.#os[t];e!==ui&&(yield[t,e])}}}class gi{#ls=null;constructor(t){this.#ls=t,this.onContinue=null}get promise(){return this.#ls.capability.promise}cancel(t=0){this.#ls.cancel(null,t)}get separateAnnots(){const{separateAnnots:t}=this.#ls.operatorList;if(!t)return!1;const{annotationCanvasMap:e}=this.#ls;return t.form||t.canvas&&e?.size>0}}class fi{#cs=null;static#ds=new WeakSet;constructor({callback:t,params:e,objs:i,commonObjs:s,annotationCanvasMap:n,operatorList:r,pageIndex:a,canvasFactory:o,filterFactory:h,useRequestAnimationFrame:l=!1,pdfBug:c=!1,pageColors:d=null}){this.callback=t,this.params=e,this.objs=i,this.commonObjs=s,this.annotationCanvasMap=n,this.operatorListIdx=null,this.operatorList=r,this._pageIndex=a,this.canvasFactory=o,this.filterFactory=h,this._pdfBug=c,this.pageColors=d,this.running=!1,this.graphicsReadyCallback=null,this.graphicsReady=!1,this._useRequestAnimationFrame=!0===l&&"undefined"!=typeof window,this.cancelled=!1,this.capability=Promise.withResolvers(),this.task=new gi(this),this._cancelBound=this.cancel.bind(this),this._continueBound=this._continue.bind(this),this._scheduleNextBound=this._scheduleNext.bind(this),this._nextBound=this._next.bind(this),this._canvas=e.canvasContext.canvas}get completed(){return this.capability.promise.catch((function(){}))}initializeGraphics({transparency:t=!1,optionalContentConfig:e}){if(this.cancelled)return;if(this._canvas){if(fi.#ds.has(this._canvas))throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");fi.#ds.add(this._canvas)}this._pdfBug&&globalThis.StepperManager?.enabled&&(this.stepper=globalThis.StepperManager.create(this._pageIndex),this.stepper.init(this.operatorList),this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint());const{canvasContext:i,viewport:s,transform:n,background:r}=this.params;this.gfx=new fe(i,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:e},this.annotationCanvasMap,this.pageColors),this.gfx.beginDrawing({transform:n,viewport:s,transparency:t,background:r}),this.operatorListIdx=0,this.graphicsReady=!0,this.graphicsReadyCallback?.()}cancel(t=null,e=0){this.running=!1,this.cancelled=!0,this.gfx?.endDrawing(),this.#cs&&(window.cancelAnimationFrame(this.#cs),this.#cs=null),fi.#ds.delete(this._canvas),this.callback(t||new it(`Rendering cancelled, page ${this._pageIndex+1}`,e))}operatorListChanged(){this.graphicsReady?(this.stepper?.updateOperatorList(this.operatorList),this.running||this._continue()):this.graphicsReadyCallback||=this._continueBound}_continue(){this.running=!0,this.cancelled||(this.task.onContinue?this.task.onContinue(this._scheduleNextBound):this._scheduleNext())}_scheduleNext(){this._useRequestAnimationFrame?this.#cs=window.requestAnimationFrame((()=>{this.#cs=null,this._nextBound().catch(this._cancelBound)})):Promise.resolve().then(this._nextBound).catch(this._cancelBound)}async _next(){this.cancelled||(this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper),this.operatorListIdx===this.operatorList.argsArray.length&&(this.running=!1,this.operatorList.lastChunk&&(this.gfx.endDrawing(),fi.#ds.delete(this._canvas),this.callback())))}}const mi="4.7.76",bi="8b73b828b";function vi(t){return Math.floor(255*Math.max(0,Math.min(1,t))).toString(16).padStart(2,"0")}function yi(t){return Math.max(0,Math.min(255,255*t))}i(670);class Ai{static CMYK_G([t,e,i,s]){return["G",1-Math.min(1,.3*t+.59*i+.11*e+s)]}static G_CMYK([t]){return["CMYK",0,0,0,1-t]}static G_RGB([t]){return["RGB",t,t,t]}static G_rgb([t]){return[t=yi(t),t,t]}static G_HTML([t]){const e=vi(t);return`#${e}${e}${e}`}static RGB_G([t,e,i]){return["G",.3*t+.59*e+.11*i]}static RGB_rgb(t){return t.map(yi)}static RGB_HTML(t){return`#${t.map(vi).join("")}`}static T_HTML(){return"#00000000"}static T_rgb(){return[null]}static CMYK_RGB([t,e,i,s]){return["RGB",1-Math.min(1,t+s),1-Math.min(1,i+s),1-Math.min(1,e+s)]}static CMYK_rgb([t,e,i,s]){return[yi(1-Math.min(1,t+s)),yi(1-Math.min(1,i+s)),yi(1-Math.min(1,e+s))]}static CMYK_HTML(t){const e=this.CMYK_RGB(t).slice(1);return this.RGB_HTML(e)}static RGB_CMYK([t,e,i]){const s=1-t,n=1-e,r=1-i;return["CMYK",s,n,r,Math.min(s,n,r)]}}class wi{static setupStorage(t,e,i,s,n){const r=s.getValue(e,{value:null});switch(i.name){case"textarea":if(null!==r.value&&(t.textContent=r.value),"print"===n)break;t.addEventListener("input",(t=>{s.setValue(e,{value:t.target.value})}));break;case"input":if("radio"===i.attributes.type||"checkbox"===i.attributes.type){if(r.value===i.attributes.xfaOn?t.setAttribute("checked",!0):r.value===i.attributes.xfaOff&&t.removeAttribute("checked"),"print"===n)break;t.addEventListener("change",(t=>{s.setValue(e,{value:t.target.checked?t.target.getAttribute("xfaOn"):t.target.getAttribute("xfaOff")})}))}else{if(null!==r.value&&t.setAttribute("value",r.value),"print"===n)break;t.addEventListener("input",(t=>{s.setValue(e,{value:t.target.value})}))}break;case"select":if(null!==r.value){t.setAttribute("value",r.value);for(const t of i.children)t.attributes.value===r.value?t.attributes.selected=!0:t.attributes.hasOwnProperty("selected")&&delete t.attributes.selected}t.addEventListener("input",(t=>{const i=t.target.options,n=-1===i.selectedIndex?"":i[i.selectedIndex].value;s.setValue(e,{value:n})}))}}static setAttributes({html:t,element:e,storage:i=null,intent:s,linkService:n}){const{attributes:r}=e,a=t instanceof HTMLAnchorElement;"radio"===r.type&&(r.name=`${r.name}-${s}`);for(const[e,i]of Object.entries(r))if(null!=i)switch(e){case"class":i.length&&t.setAttribute(e,i.join(" "));break;case"dataId":break;case"id":t.setAttribute("data-element-id",i);break;case"style":Object.assign(t.style,i);break;case"textContent":t.textContent=i;break;default:(!a||"href"!==e&&"newWindow"!==e)&&t.setAttribute(e,i)}a&&n.addLinkAttributes(t,r.href,r.newWindow),i&&r.dataId&&this.setupStorage(t,r.dataId,e,i)}static render(t){const e=t.annotationStorage,i=t.linkService,s=t.xfaHtml,n=t.intent||"display",r=document.createElement(s.name);s.attributes&&this.setAttributes({html:r,element:s,intent:n,linkService:i});const a="richText"!==n,o=t.div;if(o.append(r),t.viewport){const e=`matrix(${t.viewport.transform.join(",")})`;o.style.transform=e}a&&o.setAttribute("class","xfaLayer xfaFont");const h=[];if(0===s.children.length){if(s.value){const t=document.createTextNode(s.value);r.append(t),a&&Qe.shouldBuildText(s.name)&&h.push(t)}return{textDivs:h}}const l=[[s,-1,r]];for(;l.length>0;){const[t,s,r]=l.at(-1);if(s+1===t.children.length){l.pop();continue}const o=t.children[++l.at(-1)[1]];if(null===o)continue;const{name:c}=o;if("#text"===c){const t=document.createTextNode(o.value);h.push(t),r.append(t);continue}const d=o?.attributes?.xmlns?document.createElementNS(o.attributes.xmlns,c):document.createElement(c);if(r.append(d),o.attributes&&this.setAttributes({html:d,element:o,storage:e,intent:n,linkService:i}),o.children?.length>0)l.push([o,-1,d]);else if(o.value){const t=document.createTextNode(o.value);a&&Qe.shouldBuildText(c)&&h.push(t),d.append(t)}}for(const t of o.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea"))t.setAttribute("readOnly",!0);return{textDivs:h}}static update(t){const e=`matrix(${t.viewport.transform.join(",")})`;t.div.style.transform=e,t.div.hidden=!1}}const xi=1e3,_i=new WeakSet;function Ei(t){return{width:t[2]-t[0],height:t[3]-t[1]}}class Ci{static create(t){switch(t.data.annotationType){case 2:return new Ti(t);case 1:return new Mi(t);case 20:switch(t.data.fieldType){case"Tx":return new Ii(t);case"Btn":return t.data.radioButton?new Di(t):t.data.checkBox?new Pi(t):new Li(t);case"Ch":return new Fi(t);case"Sig":return new Ri(t)}return new ki(t);case 16:return new Oi(t);case 3:return new Bi(t);case 4:return new zi(t);case 5:return new Hi(t);case 6:return new ji(t);case 8:return new Ui(t);case 14:return new Wi(t);case 15:return new Gi(t);case 7:return new $i(t);case 9:return new Vi(t);case 10:return new qi(t);case 11:return new Xi(t);case 12:return new Ki(t);case 13:return new Yi(t);case 17:return new Qi(t);default:return new Si(t)}}}class Si{#us=null;#ps=!1;#gs=null;constructor(t,{isRenderable:e=!1,ignoreBorder:i=!1,createQuadrilaterals:s=!1}={}){this.isRenderable=e,this.data=t.data,this.layer=t.layer,this.linkService=t.linkService,this.downloadManager=t.downloadManager,this.imageResourcesPath=t.imageResourcesPath,this.renderForms=t.renderForms,this.svgFactory=t.svgFactory,this.annotationStorage=t.annotationStorage,this.enableScripting=t.enableScripting,this.hasJSActions=t.hasJSActions,this._fieldObjects=t.fieldObjects,this.parent=t.parent,e&&(this.container=this._createContainer(i)),s&&this._createQuadrilaterals()}static _hasPopupData({titleObj:t,contentsObj:e,richText:i}){return!!(t?.str||e?.str||i?.str)}get _isEditable(){return this.data.isEditable}get hasPopupData(){return Si._hasPopupData(this.data)}updateEdited(t){if(!this.container)return;this.#us||={rect:this.data.rect.slice(0)};const{rect:e}=t;e&&this.#fs(e),this.#gs?.popup.updateEdited(t)}resetEdited(){this.#us&&(this.#fs(this.#us.rect),this.#gs?.popup.resetEdited(),this.#us=null)}#fs(t){const{container:{style:e},data:{rect:i,rotation:s},parent:{viewport:{rawDims:{pageWidth:n,pageHeight:r,pageX:a,pageY:o}}}}=this;i?.splice(0,4,...t);const{width:h,height:l}=Ei(t);e.left=100*(t[0]-a)/n+"%",e.top=100*(r-t[3]+o)/r+"%",0===s?(e.width=100*h/n+"%",e.height=100*l/r+"%"):this.setRotation(s)}_createContainer(t){const{data:e,parent:{page:i,viewport:s}}=this,n=document.createElement("section");n.setAttribute("data-annotation-id",e.id),this instanceof ki||(n.tabIndex=xi);const{style:r}=n;if(r.zIndex=this.parent.zIndex++,e.popupRef&&n.setAttribute("aria-haspopup","dialog"),e.alternativeText&&(n.title=e.alternativeText),e.noRotate&&n.classList.add("norotate"),!e.rect||this instanceof Oi){const{rotation:t}=e;return e.hasOwnCanvas||0===t||this.setRotation(t,n),n}const{width:a,height:o}=Ei(e.rect);if(!t&&e.borderStyle.width>0){r.borderWidth=`${e.borderStyle.width}px`;const t=e.borderStyle.horizontalCornerRadius,i=e.borderStyle.verticalCornerRadius;if(t>0||i>0){const e=`calc(${t}px * var(--scale-factor)) / calc(${i}px * var(--scale-factor))`;r.borderRadius=e}else if(this instanceof Di){const t=`calc(${a}px * var(--scale-factor)) / calc(${o}px * var(--scale-factor))`;r.borderRadius=t}switch(e.borderStyle.style){case 1:r.borderStyle="solid";break;case 2:r.borderStyle="dashed";break;case 3:w("Unimplemented border style: beveled");break;case 4:w("Unimplemented border style: inset");break;case 5:r.borderBottomStyle="solid"}const s=e.borderColor||null;s?(this.#ps=!0,r.borderColor=z.makeHexColor(0|s[0],0|s[1],0|s[2])):r.borderWidth=0}const h=z.normalizeRect([e.rect[0],i.view[3]-e.rect[1]+i.view[1],e.rect[2],i.view[3]-e.rect[3]+i.view[1]]),{pageWidth:l,pageHeight:c,pageX:d,pageY:u}=s.rawDims;r.left=100*(h[0]-d)/l+"%",r.top=100*(h[1]-u)/c+"%";const{rotation:p}=e;return e.hasOwnCanvas||0===p?(r.width=100*a/l+"%",r.height=100*o/c+"%"):this.setRotation(p,n),n}setRotation(t,e=this.container){if(!this.data.rect)return;const{pageWidth:i,pageHeight:s}=this.parent.viewport.rawDims,{width:n,height:r}=Ei(this.data.rect);let a,o;t%180==0?(a=100*n/i,o=100*r/s):(a=100*r/i,o=100*n/s),e.style.width=`${a}%`,e.style.height=`${o}%`,e.setAttribute("data-main-rotation",(360-t)%360)}get _commonActions(){const t=(t,e,i)=>{const s=i.detail[t],n=s[0],r=s.slice(1);i.target.style[e]=Ai[`${n}_HTML`](r),this.annotationStorage.setValue(this.data.id,{[e]:Ai[`${n}_rgb`](r)})};return C(this,"_commonActions",{display:t=>{const{display:e}=t.detail,i=e%2==1;this.container.style.visibility=i?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noView:i,noPrint:1===e||2===e})},print:t=>{this.annotationStorage.setValue(this.data.id,{noPrint:!t.detail.print})},hidden:t=>{const{hidden:e}=t.detail;this.container.style.visibility=e?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noPrint:e,noView:e})},focus:t=>{setTimeout((()=>t.target.focus({preventScroll:!1})),0)},userName:t=>{t.target.title=t.detail.userName},readonly:t=>{t.target.disabled=t.detail.readonly},required:t=>{this._setRequired(t.target,t.detail.required)},bgColor:e=>{t("bgColor","backgroundColor",e)},fillColor:e=>{t("fillColor","backgroundColor",e)},fgColor:e=>{t("fgColor","color",e)},textColor:e=>{t("textColor","color",e)},borderColor:e=>{t("borderColor","borderColor",e)},strokeColor:e=>{t("strokeColor","borderColor",e)},rotation:t=>{const e=t.detail.rotation;this.setRotation(e),this.annotationStorage.setValue(this.data.id,{rotation:e})}})}_dispatchEventFromSandbox(t,e){const i=this._commonActions;for(const s of Object.keys(e.detail)){const n=t[s]||i[s];n?.(e)}}_setDefaultPropertiesFromJS(t){if(!this.enableScripting)return;const e=this.annotationStorage.getRawValue(this.data.id);if(!e)return;const i=this._commonActions;for(const[s,n]of Object.entries(e)){const r=i[s];r&&(r({detail:{[s]:n},target:t}),delete e[s])}}_createQuadrilaterals(){if(!this.container)return;const{quadPoints:t}=this.data;if(!t)return;const[e,i,s,n]=this.data.rect.map((t=>Math.fround(t)));if(8===t.length){const[r,a,o,h]=t.subarray(2,6);if(s===r&&n===a&&e===o&&i===h)return}const{style:r}=this.container;let a;if(this.#ps){const{borderColor:t,borderWidth:e}=r;r.borderWidth=0,a=["url('data:image/svg+xml;utf8,",'<svg xmlns="http://www.w3.org/2000/svg"',' preserveAspectRatio="none" viewBox="0 0 1 1">',`<g fill="transparent" stroke="${t}" stroke-width="${e}">`],this.container.classList.add("hasBorder")}const o=s-e,h=n-i,{svgFactory:l}=this,c=l.createElement("svg");c.classList.add("quadrilateralsContainer"),c.setAttribute("width",0),c.setAttribute("height",0);const d=l.createElement("defs");c.append(d);const u=l.createElement("clipPath"),p=`clippath_${this.data.id}`;u.setAttribute("id",p),u.setAttribute("clipPathUnits","objectBoundingBox"),d.append(u);for(let i=2,s=t.length;i<s;i+=8){const s=t[i],r=t[i+1],c=t[i+2],d=t[i+3],p=l.createElement("rect"),g=(c-e)/o,f=(n-r)/h,m=(s-c)/o,b=(r-d)/h;p.setAttribute("x",g),p.setAttribute("y",f),p.setAttribute("width",m),p.setAttribute("height",b),u.append(p),a?.push(`<rect vector-effect="non-scaling-stroke" x="${g}" y="${f}" width="${m}" height="${b}"/>`)}this.#ps&&(a.push("</g></svg>')"),r.backgroundImage=a.join("")),this.container.append(c),this.container.style.clipPath=`url(#${p})`}_createPopup(){const{container:t,data:e}=this;t.setAttribute("aria-haspopup","dialog");const i=this.#gs=new Oi({data:{color:e.color,titleObj:e.titleObj,modificationDate:e.modificationDate,contentsObj:e.contentsObj,richText:e.richText,parentRect:e.rect,borderStyle:0,id:`popup_${e.id}`,rotation:e.rotation},parent:this.parent,elements:[this]});this.parent.div.append(i.render())}render(){x("Abstract method `AnnotationElement.render` called")}_getElementsByName(t,e=null){const i=[];if(this._fieldObjects){const s=this._fieldObjects[t];if(s)for(const{page:t,id:n,exportValues:r}of s){if(-1===t)continue;if(n===e)continue;const s="string"==typeof r?r:null,a=document.querySelector(`[data-element-id="${n}"]`);!a||_i.has(a)?i.push({id:n,exportValue:s,domElement:a}):w(`_getElementsByName - element not allowed: ${n}`)}return i}for(const s of document.getElementsByName(t)){const{exportValue:t}=s,n=s.getAttribute("data-element-id");n!==e&&_i.has(s)&&i.push({id:n,exportValue:t,domElement:s})}return i}show(){this.container&&(this.container.hidden=!1),this.popup?.maybeShow()}hide(){this.container&&(this.container.hidden=!0),this.popup?.forceHide()}getElementsToTriggerPopup(){return this.container}addHighlightArea(){const t=this.getElementsToTriggerPopup();if(Array.isArray(t))for(const e of t)e.classList.add("highlightArea");else t.classList.add("highlightArea")}_editOnDoubleClick(){if(!this._isEditable)return;const{annotationEditorType:t,data:{id:e}}=this;this.container.addEventListener("dblclick",(()=>{this.linkService.eventBus?.dispatch("switchannotationeditormode",{source:this,mode:t,editId:e})}))}}class Ti extends Si{constructor(t,e=null){super(t,{isRenderable:!0,ignoreBorder:!!e?.ignoreBorder,createQuadrilaterals:!0}),this.isTooltipOnly=t.data.isTooltipOnly}render(){const{data:t,linkService:e}=this,i=document.createElement("a");i.setAttribute("data-element-id",t.id);let s=!1;return t.url?(e.addLinkAttributes(i,t.url,t.newWindow),s=!0):t.action?(this._bindNamedAction(i,t.action),s=!0):t.attachment?(this.#ms(i,t.attachment,t.attachmentDest),s=!0):t.setOCGState?(this.#bs(i,t.setOCGState),s=!0):t.dest?(this._bindLink(i,t.dest),s=!0):(t.actions&&(t.actions.Action||t.actions["Mouse Up"]||t.actions["Mouse Down"])&&this.enableScripting&&this.hasJSActions&&(this._bindJSAction(i,t),s=!0),t.resetForm?(this._bindResetFormAction(i,t.resetForm),s=!0):this.isTooltipOnly&&!s&&(this._bindLink(i,""),s=!0)),this.container.classList.add("linkAnnotation"),s&&this.container.append(i),this.container}#vs(){this.container.setAttribute("data-internal-link","")}_bindLink(t,e){t.href=this.linkService.getDestinationHash(e),t.onclick=()=>(e&&this.linkService.goToDestination(e),!1),(e||""===e)&&this.#vs()}_bindNamedAction(t,e){t.href=this.linkService.getAnchorUrl(""),t.onclick=()=>(this.linkService.executeNamedAction(e),!1),this.#vs()}#ms(t,e,i=null){t.href=this.linkService.getAnchorUrl(""),e.description&&(t.title=e.description),t.onclick=()=>(this.downloadManager?.openOrDownloadData(e.content,e.filename,i),!1),this.#vs()}#bs(t,e){t.href=this.linkService.getAnchorUrl(""),t.onclick=()=>(this.linkService.executeSetOCGState(e),!1),this.#vs()}_bindJSAction(t,e){t.href=this.linkService.getAnchorUrl("");const i=new Map([["Action","onclick"],["Mouse Up","onmouseup"],["Mouse Down","onmousedown"]]);for(const s of Object.keys(e.actions)){const n=i.get(s);n&&(t[n]=()=>(this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e.id,name:s}}),!1))}t.onclick||(t.onclick=()=>!1),this.#vs()}_bindResetFormAction(t,e){const i=t.onclick;if(i||(t.href=this.linkService.getAnchorUrl("")),this.#vs(),!this._fieldObjects)return w('_bindResetFormAction - "resetForm" action not supported, ensure that the `fieldObjects` parameter is provided.'),void(i||(t.onclick=()=>!1));t.onclick=()=>{i?.();const{fields:t,refs:s,include:n}=e,r=[];if(0!==t.length||0!==s.length){const e=new Set(s);for(const i of t){const t=this._fieldObjects[i]||[];for(const{id:i}of t)e.add(i)}for(const t of Object.values(this._fieldObjects))for(const i of t)e.has(i.id)===n&&r.push(i)}else for(const t of Object.values(this._fieldObjects))r.push(...t);const a=this.annotationStorage,o=[];for(const t of r){const{id:e}=t;switch(o.push(e),t.type){case"text":{const i=t.defaultValue||"";a.setValue(e,{value:i});break}case"checkbox":case"radiobutton":{const i=t.defaultValue===t.exportValues;a.setValue(e,{value:i});break}case"combobox":case"listbox":{const i=t.defaultValue||"";a.setValue(e,{value:i});break}default:continue}const i=document.querySelector(`[data-element-id="${e}"]`);i&&(_i.has(i)?i.dispatchEvent(new Event("resetform")):w(`_bindResetFormAction - element not allowed: ${e}`))}return this.enableScripting&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:"app",ids:o,name:"ResetForm"}}),!1}}}class Mi extends Si{constructor(t){super(t,{isRenderable:!0})}render(){this.container.classList.add("textAnnotation");const t=document.createElement("img");return t.src=this.imageResourcesPath+"annotation-"+this.data.name.toLowerCase()+".svg",t.setAttribute("data-l10n-id","pdfjs-text-annotation-type"),t.setAttribute("data-l10n-args",JSON.stringify({type:this.data.name})),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.append(t),this.container}}class ki extends Si{render(){return this.container}showElementAndHideCanvas(t){this.data.hasOwnCanvas&&("CANVAS"===t.previousSibling?.nodeName&&(t.previousSibling.hidden=!0),t.hidden=!1)}_getKeyModifier(t){return N.platform.isMac?t.metaKey:t.ctrlKey}_setEventListener(t,e,i,s,n){i.includes("mouse")?t.addEventListener(i,(t=>{this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:s,value:n(t),shift:t.shiftKey,modifier:this._getKeyModifier(t)}})})):t.addEventListener(i,(t=>{if("blur"===i){if(!e.focused||!t.relatedTarget)return;e.focused=!1}else if("focus"===i){if(e.focused)return;e.focused=!0}n&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:s,value:n(t)}})}))}_setEventListeners(t,e,i,s){for(const[n,r]of i)("Action"===r||this.data.actions?.[r])&&("Focus"!==r&&"Blur"!==r||(e||={focused:!1}),this._setEventListener(t,e,n,r,s),"Focus"!==r||this.data.actions?.Blur?"Blur"!==r||this.data.actions?.Focus||this._setEventListener(t,e,"focus","Focus",null):this._setEventListener(t,e,"blur","Blur",null))}_setBackgroundColor(t){const e=this.data.backgroundColor||null;t.style.backgroundColor=null===e?"transparent":z.makeHexColor(e[0],e[1],e[2])}_setTextStyle(t){const{fontColor:e}=this.data.defaultAppearanceData,i=this.data.defaultAppearanceData.fontSize||9,s=t.style;let n;const r=t=>Math.round(10*t)/10;if(this.data.multiLine){const t=Math.abs(this.data.rect[3]-this.data.rect[1]-2),e=t/(Math.round(t/(o*i))||1);n=Math.min(i,r(e/o))}else{const t=Math.abs(this.data.rect[3]-this.data.rect[1]-2);n=Math.min(i,r(t/o))}s.fontSize=`calc(${n}px * var(--scale-factor))`,s.color=z.makeHexColor(e[0],e[1],e[2]),null!==this.data.textAlignment&&(s.textAlign=["left","center","right"][this.data.textAlignment])}_setRequired(t,e){e?t.setAttribute("required",!0):t.removeAttribute("required"),t.setAttribute("aria-required",e)}}class Ii extends ki{constructor(t){super(t,{isRenderable:t.renderForms||t.data.hasOwnCanvas||!t.data.hasAppearance&&!!t.data.fieldValue})}setPropertyOnSiblings(t,e,i,s){const n=this.annotationStorage;for(const r of this._getElementsByName(t.name,t.id))r.domElement&&(r.domElement[e]=i),n.setValue(r.id,{[s]:i})}render(){const t=this.annotationStorage,e=this.data.id;this.container.classList.add("textWidgetAnnotation");let i=null;if(this.renderForms){const s=t.getValue(e,{value:this.data.fieldValue});let n=s.value||"";const r=t.getValue(e,{charLimit:this.data.maxLen}).charLimit;r&&n.length>r&&(n=n.slice(0,r));let a=s.formattedValue||this.data.textContent?.join("\n")||null;a&&this.data.comb&&(a=a.replaceAll(/\s+/g,""));const o={userValue:n,formattedValue:a,lastCommittedValue:null,commitKey:1,focused:!1};this.data.multiLine?(i=document.createElement("textarea"),i.textContent=a??n,this.data.doNotScroll&&(i.style.overflowY="hidden")):(i=document.createElement("input"),i.type="text",i.setAttribute("value",a??n),this.data.doNotScroll&&(i.style.overflowX="hidden")),this.data.hasOwnCanvas&&(i.hidden=!0),_i.add(i),i.setAttribute("data-element-id",e),i.disabled=this.data.readOnly,i.name=this.data.fieldName,i.tabIndex=xi,this._setRequired(i,this.data.required),r&&(i.maxLength=r),i.addEventListener("input",(s=>{t.setValue(e,{value:s.target.value}),this.setPropertyOnSiblings(i,"value",s.target.value,"value"),o.formattedValue=null})),i.addEventListener("resetform",(t=>{const e=this.data.defaultFieldValue??"";i.value=o.userValue=e,o.formattedValue=null}));let h=t=>{const{formattedValue:e}=o;null!=e&&(t.target.value=e),t.target.scrollLeft=0};if(this.enableScripting&&this.hasJSActions){i.addEventListener("focus",(t=>{if(o.focused)return;const{target:e}=t;o.userValue&&(e.value=o.userValue),o.lastCommittedValue=e.value,o.commitKey=1,this.data.actions?.Focus||(o.focused=!0)})),i.addEventListener("updatefromsandbox",(i=>{this.showElementAndHideCanvas(i.target);const s={value(i){o.userValue=i.detail.value??"",t.setValue(e,{value:o.userValue.toString()}),i.target.value=o.userValue},formattedValue(i){const{formattedValue:s}=i.detail;o.formattedValue=s,null!=s&&i.target!==document.activeElement&&(i.target.value=s),t.setValue(e,{formattedValue:s})},selRange(t){t.target.setSelectionRange(...t.detail.selRange)},charLimit:i=>{const{charLimit:s}=i.detail,{target:n}=i;if(0===s)return void n.removeAttribute("maxLength");n.setAttribute("maxLength",s);let r=o.userValue;!r||r.length<=s||(r=r.slice(0,s),n.value=o.userValue=r,t.setValue(e,{value:r}),this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e,name:"Keystroke",value:r,willCommit:!0,commitKey:1,selStart:n.selectionStart,selEnd:n.selectionEnd}}))}};this._dispatchEventFromSandbox(s,i)})),i.addEventListener("keydown",(t=>{o.commitKey=1;let i=-1;if("Escape"===t.key?i=0:"Enter"!==t.key||this.data.multiLine?"Tab"===t.key&&(o.commitKey=3):i=2,-1===i)return;const{value:s}=t.target;o.lastCommittedValue!==s&&(o.lastCommittedValue=s,o.userValue=s,this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e,name:"Keystroke",value:s,willCommit:!0,commitKey:i,selStart:t.target.selectionStart,selEnd:t.target.selectionEnd}}))}));const s=h;h=null,i.addEventListener("blur",(t=>{if(!o.focused||!t.relatedTarget)return;this.data.actions?.Blur||(o.focused=!1);const{value:i}=t.target;o.userValue=i,o.lastCommittedValue!==i&&this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e,name:"Keystroke",value:i,willCommit:!0,commitKey:o.commitKey,selStart:t.target.selectionStart,selEnd:t.target.selectionEnd}}),s(t)})),this.data.actions?.Keystroke&&i.addEventListener("beforeinput",(t=>{o.lastCommittedValue=null;const{data:i,target:s}=t,{value:n,selectionStart:r,selectionEnd:a}=s;let h=r,l=a;switch(t.inputType){case"deleteWordBackward":{const t=n.substring(0,r).match(/\w*[^\w]*$/);t&&(h-=t[0].length);break}case"deleteWordForward":{const t=n.substring(r).match(/^[^\w]*\w*/);t&&(l+=t[0].length);break}case"deleteContentBackward":r===a&&(h-=1);break;case"deleteContentForward":r===a&&(l+=1)}t.preventDefault(),this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e,name:"Keystroke",value:n,change:i||"",willCommit:!1,selStart:h,selEnd:l}})})),this._setEventListeners(i,o,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(t=>t.target.value))}if(h&&i.addEventListener("blur",h),this.data.comb){const t=(this.data.rect[2]-this.data.rect[0])/r;i.classList.add("comb"),i.style.letterSpacing=`calc(${t}px * var(--scale-factor) - 1ch)`}}else i=document.createElement("div"),i.textContent=this.data.fieldValue,i.style.verticalAlign="middle",i.style.display="table-cell",this.data.hasOwnCanvas&&(i.hidden=!0);return this._setTextStyle(i),this._setBackgroundColor(i),this._setDefaultPropertiesFromJS(i),this.container.append(i),this.container}}class Ri extends ki{constructor(t){super(t,{isRenderable:!!t.data.hasOwnCanvas})}}class Pi extends ki{constructor(t){super(t,{isRenderable:t.renderForms})}render(){const t=this.annotationStorage,e=this.data,i=e.id;let s=t.getValue(i,{value:e.exportValue===e.fieldValue}).value;"string"==typeof s&&(s="Off"!==s,t.setValue(i,{value:s})),this.container.classList.add("buttonWidgetAnnotation","checkBox");const n=document.createElement("input");return _i.add(n),n.setAttribute("data-element-id",i),n.disabled=e.readOnly,this._setRequired(n,this.data.required),n.type="checkbox",n.name=e.fieldName,s&&n.setAttribute("checked",!0),n.setAttribute("exportValue",e.exportValue),n.tabIndex=xi,n.addEventListener("change",(s=>{const{name:n,checked:r}=s.target;for(const s of this._getElementsByName(n,i)){const i=r&&s.exportValue===e.exportValue;s.domElement&&(s.domElement.checked=i),t.setValue(s.id,{value:i})}t.setValue(i,{value:r})})),n.addEventListener("resetform",(t=>{const i=e.defaultFieldValue||"Off";t.target.checked=i===e.exportValue})),this.enableScripting&&this.hasJSActions&&(n.addEventListener("updatefromsandbox",(e=>{const s={value(e){e.target.checked="Off"!==e.detail.value,t.setValue(i,{value:e.target.checked})}};this._dispatchEventFromSandbox(s,e)})),this._setEventListeners(n,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(t=>t.target.checked))),this._setBackgroundColor(n),this._setDefaultPropertiesFromJS(n),this.container.append(n),this.container}}class Di extends ki{constructor(t){super(t,{isRenderable:t.renderForms})}render(){this.container.classList.add("buttonWidgetAnnotation","radioButton");const t=this.annotationStorage,e=this.data,i=e.id;let s=t.getValue(i,{value:e.fieldValue===e.buttonValue}).value;if("string"==typeof s&&(s=s!==e.buttonValue,t.setValue(i,{value:s})),s)for(const s of this._getElementsByName(e.fieldName,i))t.setValue(s.id,{value:!1});const n=document.createElement("input");if(_i.add(n),n.setAttribute("data-element-id",i),n.disabled=e.readOnly,this._setRequired(n,this.data.required),n.type="radio",n.name=e.fieldName,s&&n.setAttribute("checked",!0),n.tabIndex=xi,n.addEventListener("change",(e=>{const{name:s,checked:n}=e.target;for(const e of this._getElementsByName(s,i))t.setValue(e.id,{value:!1});t.setValue(i,{value:n})})),n.addEventListener("resetform",(t=>{const i=e.defaultFieldValue;t.target.checked=null!=i&&i===e.buttonValue})),this.enableScripting&&this.hasJSActions){const s=e.buttonValue;n.addEventListener("updatefromsandbox",(e=>{const n={value:e=>{const n=s===e.detail.value;for(const s of this._getElementsByName(e.target.name)){const e=n&&s.id===i;s.domElement&&(s.domElement.checked=e),t.setValue(s.id,{value:e})}}};this._dispatchEventFromSandbox(n,e)})),this._setEventListeners(n,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(t=>t.target.checked))}return this._setBackgroundColor(n),this._setDefaultPropertiesFromJS(n),this.container.append(n),this.container}}class Li extends Ti{constructor(t){super(t,{ignoreBorder:t.data.hasAppearance})}render(){const t=super.render();t.classList.add("buttonWidgetAnnotation","pushButton");const e=t.lastChild;return this.enableScripting&&this.hasJSActions&&e&&(this._setDefaultPropertiesFromJS(e),e.addEventListener("updatefromsandbox",(t=>{this._dispatchEventFromSandbox({},t)}))),t}}class Fi extends ki{constructor(t){super(t,{isRenderable:t.renderForms})}render(){this.container.classList.add("choiceWidgetAnnotation");const t=this.annotationStorage,e=this.data.id,i=t.getValue(e,{value:this.data.fieldValue}),s=document.createElement("select");_i.add(s),s.setAttribute("data-element-id",e),s.disabled=this.data.readOnly,this._setRequired(s,this.data.required),s.name=this.data.fieldName,s.tabIndex=xi;let n=this.data.combo&&this.data.options.length>0;this.data.combo||(s.size=this.data.options.length,this.data.multiSelect&&(s.multiple=!0)),s.addEventListener("resetform",(t=>{const e=this.data.defaultFieldValue;for(const t of s.options)t.selected=t.value===e}));for(const t of this.data.options){const e=document.createElement("option");e.textContent=t.displayValue,e.value=t.exportValue,i.value.includes(t.exportValue)&&(e.setAttribute("selected",!0),n=!1),s.append(e)}let r=null;if(n){const t=document.createElement("option");t.value=" ",t.setAttribute("hidden",!0),t.setAttribute("selected",!0),s.prepend(t),r=()=>{t.remove(),s.removeEventListener("input",r),r=null},s.addEventListener("input",r)}const a=t=>{const e=t?"value":"textContent",{options:i,multiple:n}=s;return n?Array.prototype.filter.call(i,(t=>t.selected)).map((t=>t[e])):-1===i.selectedIndex?null:i[i.selectedIndex][e]};let o=a(!1);const h=t=>{const e=t.target.options;return Array.prototype.map.call(e,(t=>({displayValue:t.textContent,exportValue:t.value})))};return this.enableScripting&&this.hasJSActions?(s.addEventListener("updatefromsandbox",(i=>{const n={value(i){r?.();const n=i.detail.value,h=new Set(Array.isArray(n)?n:[n]);for(const t of s.options)t.selected=h.has(t.value);t.setValue(e,{value:a(!0)}),o=a(!1)},multipleSelection(t){s.multiple=!0},remove(i){const n=s.options,r=i.detail.remove;n[r].selected=!1,s.remove(r),n.length>0&&-1===Array.prototype.findIndex.call(n,(t=>t.selected))&&(n[0].selected=!0),t.setValue(e,{value:a(!0),items:h(i)}),o=a(!1)},clear(i){for(;0!==s.length;)s.remove(0);t.setValue(e,{value:null,items:[]}),o=a(!1)},insert(i){const{index:n,displayValue:r,exportValue:l}=i.detail.insert,c=s.children[n],d=document.createElement("option");d.textContent=r,d.value=l,c?c.before(d):s.append(d),t.setValue(e,{value:a(!0),items:h(i)}),o=a(!1)},items(i){const{items:n}=i.detail;for(;0!==s.length;)s.remove(0);for(const t of n){const{displayValue:e,exportValue:i}=t,n=document.createElement("option");n.textContent=e,n.value=i,s.append(n)}s.options.length>0&&(s.options[0].selected=!0),t.setValue(e,{value:a(!0),items:h(i)}),o=a(!1)},indices(i){const s=new Set(i.detail.indices);for(const t of i.target.options)t.selected=s.has(t.index);t.setValue(e,{value:a(!0)}),o=a(!1)},editable(t){t.target.disabled=!t.detail.editable}};this._dispatchEventFromSandbox(n,i)})),s.addEventListener("input",(i=>{const s=a(!0),n=a(!1);t.setValue(e,{value:s}),i.preventDefault(),this.linkService.eventBus?.dispatch("dispatcheventinsandbox",{source:this,detail:{id:e,name:"Keystroke",value:o,change:n,changeEx:s,willCommit:!1,commitKey:1,keyDown:!1}})})),this._setEventListeners(s,null,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"],["input","Action"],["input","Validate"]],(t=>t.target.value))):s.addEventListener("input",(function(i){t.setValue(e,{value:a(!0)})})),this.data.combo&&this._setTextStyle(s),this._setBackgroundColor(s),this._setDefaultPropertiesFromJS(s),this.container.append(s),this.container}}class Oi extends Si{constructor(t){const{data:e,elements:i}=t;super(t,{isRenderable:Si._hasPopupData(e)}),this.elements=i,this.popup=null}render(){this.container.classList.add("popupAnnotation");const t=this.popup=new Ni({container:this.container,color:this.data.color,titleObj:this.data.titleObj,modificationDate:this.data.modificationDate,contentsObj:this.data.contentsObj,richText:this.data.richText,rect:this.data.rect,parentRect:this.data.parentRect||null,parent:this.parent,elements:this.elements,open:this.data.open}),e=[];for(const i of this.elements)i.popup=t,e.push(i.data.id),i.addHighlightArea();return this.container.setAttribute("aria-controls",e.map((t=>`${$}${t}`)).join(",")),this.container}}class Ni{#ys=this.#As.bind(this);#ws=this.#xs.bind(this);#_s=this.#Es.bind(this);#Cs=this.#Ss.bind(this);#Ts=null;#ut=null;#Ms=null;#ks=null;#Is=null;#Rs=null;#Ps=null;#Ds=!1;#Ls=null;#S=null;#Fs=null;#Os=null;#Ns=null;#us=null;#Bs=!1;constructor({container:t,color:e,elements:i,titleObj:s,modificationDate:n,contentsObj:r,richText:a,parent:o,rect:h,parentRect:l,open:c}){this.#ut=t,this.#Ns=s,this.#Ms=r,this.#Os=a,this.#Rs=o,this.#Ts=e,this.#Fs=h,this.#Ps=l,this.#Is=i,this.#ks=ut.toDateObject(n),this.trigger=i.flatMap((t=>t.getElementsToTriggerPopup()));for(const t of this.trigger)t.addEventListener("click",this.#Cs),t.addEventListener("mouseenter",this.#_s),t.addEventListener("mouseleave",this.#ws),t.classList.add("popupTriggerArea");for(const t of i)t.container?.addEventListener("keydown",this.#ys);this.#ut.hidden=!0,c&&this.#Ss()}render(){if(this.#Ls)return;const t=this.#Ls=document.createElement("div");if(t.className="popup",this.#Ts){const e=t.style.outlineColor=z.makeHexColor(...this.#Ts);if(CSS.supports("background-color","color-mix(in srgb, red 30%, white)"))t.style.backgroundColor=`color-mix(in srgb, ${e} 30%, white)`;else{const e=.7;t.style.backgroundColor=z.makeHexColor(...this.#Ts.map((t=>Math.floor(e*(255-t)+t))))}}const e=document.createElement("span");e.className="header";const i=document.createElement("h1");if(e.append(i),({dir:i.dir,str:i.textContent}=this.#Ns),t.append(e),this.#ks){const t=document.createElement("span");t.classList.add("popupDate"),t.setAttribute("data-l10n-id","pdfjs-annotation-date-time-string"),t.setAttribute("data-l10n-args",JSON.stringify({dateObj:this.#ks.valueOf()})),e.append(t)}const s=this.#zs;if(s)wi.render({xfaHtml:s,intent:"richText",div:t}),t.lastChild.classList.add("richText","popupContent");else{const e=this._formatContents(this.#Ms);t.append(e)}this.#ut.append(t)}get#zs(){const t=this.#Os,e=this.#Ms;return!t?.str||e?.str&&e.str!==t.str?null:this.#Os.html||null}get#Hs(){return this.#zs?.attributes?.style?.fontSize||0}get#js(){return this.#zs?.attributes?.style?.color||null}#Us(t){const e=[],i={str:t,html:{name:"div",attributes:{dir:"auto"},children:[{name:"p",children:e}]}},s={style:{color:this.#js,fontSize:this.#Hs?`calc(${this.#Hs}px * var(--scale-factor))`:""}};for(const i of t.split("\n"))e.push({name:"span",value:i,attributes:s});return i}_formatContents({str:t,dir:e}){const i=document.createElement("p");i.classList.add("popupContent"),i.dir=e;const s=t.split(/(?:\r\n?|\n)/);for(let t=0,e=s.length;t<e;++t){const n=s[t];i.append(document.createTextNode(n)),t<e-1&&i.append(document.createElement("br"))}return i}#As(t){t.altKey||t.shiftKey||t.ctrlKey||t.metaKey||("Enter"===t.key||"Escape"===t.key&&this.#Ds)&&this.#Ss()}updateEdited({rect:t,popupContent:e}){this.#us||={contentsObj:this.#Ms,richText:this.#Os},t&&(this.#S=null),e&&(this.#Os=this.#Us(e),this.#Ms=null),this.#Ls?.remove(),this.#Ls=null}resetEdited(){this.#us&&(({contentsObj:this.#Ms,richText:this.#Os}=this.#us),this.#us=null,this.#Ls?.remove(),this.#Ls=null,this.#S=null)}#$s(){if(null!==this.#S)return;const{page:{view:t},viewport:{rawDims:{pageWidth:e,pageHeight:i,pageX:s,pageY:n}}}=this.#Rs;let r=!!this.#Ps,a=r?this.#Ps:this.#Fs;for(const t of this.#Is)if(!a||null!==z.intersect(t.data.rect,a)){a=t.data.rect,r=!0;break}const o=z.normalizeRect([a[0],t[3]-a[1]+t[1],a[2],t[3]-a[3]+t[1]]),h=r?a[2]-a[0]+5:0,l=o[0]+h,c=o[1];this.#S=[100*(l-s)/e,100*(c-n)/i];const{style:d}=this.#ut;d.left=`${this.#S[0]}%`,d.top=`${this.#S[1]}%`}#Ss(){this.#Ds=!this.#Ds,this.#Ds?(this.#Es(),this.#ut.addEventListener("click",this.#Cs),this.#ut.addEventListener("keydown",this.#ys)):(this.#xs(),this.#ut.removeEventListener("click",this.#Cs),this.#ut.removeEventListener("keydown",this.#ys))}#Es(){this.#Ls||this.render(),this.isVisible?this.#Ds&&this.#ut.classList.add("focused"):(this.#$s(),this.#ut.hidden=!1,this.#ut.style.zIndex=parseInt(this.#ut.style.zIndex)+1e3)}#xs(){this.#ut.classList.remove("focused"),!this.#Ds&&this.isVisible&&(this.#ut.hidden=!0,this.#ut.style.zIndex=parseInt(this.#ut.style.zIndex)-1e3)}forceHide(){this.#Bs=this.isVisible,this.#Bs&&(this.#ut.hidden=!0)}maybeShow(){this.#Bs&&(this.#Ls||this.#Es(),this.#Bs=!1,this.#ut.hidden=!1)}get isVisible(){return!1===this.#ut.hidden}}class Bi extends Si{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0}),this.textContent=t.data.textContent,this.textPosition=t.data.textPosition,this.annotationEditorType=l.FREETEXT}render(){if(this.container.classList.add("freeTextAnnotation"),this.textContent){const t=document.createElement("div");t.classList.add("annotationTextContent"),t.setAttribute("role","comment");for(const e of this.textContent){const i=document.createElement("span");i.textContent=e,t.append(i)}this.container.append(t)}return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this._editOnDoubleClick(),this.container}}class zi extends Si{#Ws=null;constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("lineAnnotation");const t=this.data,{width:e,height:i}=Ei(t.rect),s=this.svgFactory.create(e,i,!0),n=this.#Ws=this.svgFactory.createElement("svg:line");return n.setAttribute("x1",t.rect[2]-t.lineCoordinates[0]),n.setAttribute("y1",t.rect[3]-t.lineCoordinates[1]),n.setAttribute("x2",t.rect[2]-t.lineCoordinates[2]),n.setAttribute("y2",t.rect[3]-t.lineCoordinates[3]),n.setAttribute("stroke-width",t.borderStyle.width||1),n.setAttribute("stroke","transparent"),n.setAttribute("fill","transparent"),s.append(n),this.container.append(s),!t.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#Ws}addHighlightArea(){this.container.classList.add("highlightArea")}}class Hi extends Si{#Gs=null;constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("squareAnnotation");const t=this.data,{width:e,height:i}=Ei(t.rect),s=this.svgFactory.create(e,i,!0),n=t.borderStyle.width,r=this.#Gs=this.svgFactory.createElement("svg:rect");return r.setAttribute("x",n/2),r.setAttribute("y",n/2),r.setAttribute("width",e-n),r.setAttribute("height",i-n),r.setAttribute("stroke-width",n||1),r.setAttribute("stroke","transparent"),r.setAttribute("fill","transparent"),s.append(r),this.container.append(s),!t.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#Gs}addHighlightArea(){this.container.classList.add("highlightArea")}}class ji extends Si{#Vs=null;constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0})}render(){this.container.classList.add("circleAnnotation");const t=this.data,{width:e,height:i}=Ei(t.rect),s=this.svgFactory.create(e,i,!0),n=t.borderStyle.width,r=this.#Vs=this.svgFactory.createElement("svg:ellipse");return r.setAttribute("cx",e/2),r.setAttribute("cy",i/2),r.setAttribute("rx",e/2-n/2),r.setAttribute("ry",i/2-n/2),r.setAttribute("stroke-width",n||1),r.setAttribute("stroke","transparent"),r.setAttribute("fill","transparent"),s.append(r),this.container.append(s),!t.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#Vs}addHighlightArea(){this.container.classList.add("highlightArea")}}class Ui extends Si{#qs=null;constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0}),this.containerClassName="polylineAnnotation",this.svgElementName="svg:polyline"}render(){this.container.classList.add(this.containerClassName);const{data:{rect:t,vertices:e,borderStyle:i,popupRef:s}}=this;if(!e)return this.container;const{width:n,height:r}=Ei(t),a=this.svgFactory.create(n,r,!0);let o=[];for(let i=0,s=e.length;i<s;i+=2){const s=e[i]-t[0],n=t[3]-e[i+1];o.push(`${s},${n}`)}o=o.join(" ");const h=this.#qs=this.svgFactory.createElement(this.svgElementName);return h.setAttribute("points",o),h.setAttribute("stroke-width",i.width||1),h.setAttribute("stroke","transparent"),h.setAttribute("fill","transparent"),a.append(h),this.container.append(a),!s&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return this.#qs}addHighlightArea(){this.container.classList.add("highlightArea")}}class $i extends Ui{constructor(t){super(t),this.containerClassName="polygonAnnotation",this.svgElementName="svg:polygon"}}class Wi extends Si{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0})}render(){return this.container.classList.add("caretAnnotation"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container}}class Gi extends Si{#Xs=[];constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0}),this.containerClassName="inkAnnotation",this.svgElementName="svg:polyline",this.annotationEditorType="InkHighlight"===this.data.it?l.HIGHLIGHT:l.INK}render(){this.container.classList.add(this.containerClassName);const{data:{rect:t,inkLists:e,borderStyle:i,popupRef:s}}=this,{width:n,height:r}=Ei(t),a=this.svgFactory.create(n,r,!0);for(const n of e){let e=[];for(let i=0,s=n.length;i<s;i+=2){const s=n[i]-t[0],r=t[3]-n[i+1];e.push(`${s},${r}`)}e=e.join(" ");const r=this.svgFactory.createElement(this.svgElementName);this.#Xs.push(r),r.setAttribute("points",e),r.setAttribute("stroke-width",i.width||1),r.setAttribute("stroke","transparent"),r.setAttribute("fill","transparent"),!s&&this.hasPopupData&&this._createPopup(),a.append(r)}return this.container.append(a),this._editOnDoubleClick(),this.container}getElementsToTriggerPopup(){return this.#Xs}addHighlightArea(){this.container.classList.add("highlightArea")}}class Vi extends Si{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0}),this.annotationEditorType=l.HIGHLIGHT}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("highlightAnnotation"),this._editOnDoubleClick(),this.container}}class qi extends Si{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("underlineAnnotation"),this.container}}class Xi extends Si{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("squigglyAnnotation"),this.container}}class Ki extends Si{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("strikeoutAnnotation"),this.container}}class Yi extends Si{constructor(t){super(t,{isRenderable:!0,ignoreBorder:!0}),this.annotationEditorType=l.STAMP}render(){return this.container.classList.add("stampAnnotation"),this.container.setAttribute("role","img"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this._editOnDoubleClick(),this.container}}class Qi extends Si{#Ks=null;constructor(t){super(t,{isRenderable:!0});const{file:e}=this.data;this.filename=e.filename,this.content=e.content,this.linkService.eventBus?.dispatch("fileattachmentannotation",{source:this,...e})}render(){this.container.classList.add("fileAttachmentAnnotation");const{container:t,data:e}=this;let i;e.hasAppearance||0===e.fillAlpha?i=document.createElement("div"):(i=document.createElement("img"),i.src=`${this.imageResourcesPath}annotation-${/paperclip/i.test(e.name)?"paperclip":"pushpin"}.svg`,e.fillAlpha&&e.fillAlpha<1&&(i.style=`filter: opacity(${Math.round(100*e.fillAlpha)}%);`)),i.addEventListener("dblclick",this.#Ys.bind(this)),this.#Ks=i;const{isMac:s}=N.platform;return t.addEventListener("keydown",(t=>{"Enter"===t.key&&(s?t.metaKey:t.ctrlKey)&&this.#Ys()})),!e.popupRef&&this.hasPopupData?this._createPopup():i.classList.add("popupTriggerArea"),t.append(i),t}getElementsToTriggerPopup(){return this.#Ks}addHighlightArea(){this.container.classList.add("highlightArea")}#Ys(){this.downloadManager?.openOrDownloadData(this.content,this.filename)}}class Ji{#Qs=null;#Js=null;#Zs=new Map;#tn=null;constructor({div:t,accessibilityManager:e,annotationCanvasMap:i,annotationEditorUIManager:s,page:n,viewport:r,structTreeLayer:a}){this.div=t,this.#Qs=e,this.#Js=i,this.#tn=a||null,this.page=n,this.viewport=r,this.zIndex=0,this._annotationEditorUIManager=s}hasEditableAnnotations(){return this.#Zs.size>0}async#en(t,e){const i=t.firstChild||t,s=i.id=`${$}${e}`,n=await(this.#tn?.getAriaAttributes(s));if(n)for(const[t,e]of n)i.setAttribute(t,e);this.div.append(t),this.#Qs?.moveElementInDOM(this.div,t,i,!1)}async render(t){const{annotations:e}=t,i=this.div;bt(i,this.viewport);const s=new Map,n={data:null,layer:i,linkService:t.linkService,downloadManager:t.downloadManager,imageResourcesPath:t.imageResourcesPath||"",renderForms:!1!==t.renderForms,svgFactory:new tt,annotationStorage:t.annotationStorage||new Ot,enableScripting:!0===t.enableScripting,hasJSActions:t.hasJSActions,fieldObjects:t.fieldObjects,parent:this,elements:null};for(const t of e){if(t.noHTML)continue;const e=16===t.annotationType;if(e){const e=s.get(t.id);if(!e)continue;n.elements=e}else{const{width:e,height:i}=Ei(t.rect);if(e<=0||i<=0)continue}n.data=t;const i=Ci.create(n);if(!i.isRenderable)continue;if(!e&&t.popupRef){const e=s.get(t.popupRef);e?e.push(i):s.set(t.popupRef,[i])}const r=i.render();t.hidden&&(r.style.visibility="hidden"),await this.#en(r,t.id),i._isEditable&&(this.#Zs.set(i.data.id,i),this._annotationEditorUIManager?.renderAnnotationElement(i))}this.#in()}update({viewport:t}){const e=this.div;this.viewport=t,bt(e,{rotation:t.rotation}),this.#in(),e.hidden=!1}#in(){if(!this.#Js)return;const t=this.div;for(const[e,i]of this.#Js){const s=t.querySelector(`[data-annotation-id="${e}"]`);if(!s)continue;i.className="annotationContent";const{firstChild:n}=s;n?"CANVAS"===n.nodeName?n.replaceWith(i):n.classList.contains("annotationContent")?n.after(i):n.before(i):s.append(i)}this.#Js.clear()}getEditableAnnotations(){return Array.from(this.#Zs.values())}getEditableAnnotation(t){return this.#Zs.get(t)}}const Zi=/\r\n?|\n/g;class ts extends kt{#Ts;#sn="";#nn=`${this.id}-editor`;#rn=null;#Hs;static _freeTextDefaultContent="";static _internalPadding=0;static _defaultColor=null;static _defaultFontSize=10;static get _keyboardManager(){const t=ts.prototype,e=t=>t.isEmpty(),i=Tt.TRANSLATE_SMALL,s=Tt.TRANSLATE_BIG;return C(this,"_keyboardManager",new Ct([[["ctrl+s","mac+meta+s","ctrl+p","mac+meta+p"],t.commitOrRemove,{bubbles:!0}],[["ctrl+Enter","mac+meta+Enter","Escape","mac+Escape"],t.commitOrRemove],[["ArrowLeft","mac+ArrowLeft"],t._translateEmpty,{args:[-i,0],checker:e}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],t._translateEmpty,{args:[-s,0],checker:e}],[["ArrowRight","mac+ArrowRight"],t._translateEmpty,{args:[i,0],checker:e}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],t._translateEmpty,{args:[s,0],checker:e}],[["ArrowUp","mac+ArrowUp"],t._translateEmpty,{args:[0,-i],checker:e}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],t._translateEmpty,{args:[0,-s],checker:e}],[["ArrowDown","mac+ArrowDown"],t._translateEmpty,{args:[0,i],checker:e}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],t._translateEmpty,{args:[0,s],checker:e}]]))}static _type="freetext";static _editorType=l.FREETEXT;constructor(t){super({...t,name:"freeTextEditor"}),this.#Ts=t.color||ts._defaultColor||kt._defaultLineColor,this.#Hs=t.fontSize||ts._defaultFontSize}static initialize(t,e){kt.initialize(t,e,{strings:["pdfjs-free-text-default-content"]});const i=getComputedStyle(document.documentElement);this._internalPadding=parseFloat(i.getPropertyValue("--freetext-padding"))}static updateDefaultParams(t,e){switch(t){case c.FREETEXT_SIZE:ts._defaultFontSize=e;break;case c.FREETEXT_COLOR:ts._defaultColor=e}}updateParams(t,e){switch(t){case c.FREETEXT_SIZE:this.#an(e);break;case c.FREETEXT_COLOR:this.#on(e)}}static get defaultPropertiesToUpdate(){return[[c.FREETEXT_SIZE,ts._defaultFontSize],[c.FREETEXT_COLOR,ts._defaultColor||kt._defaultLineColor]]}get propertiesToUpdate(){return[[c.FREETEXT_SIZE,this.#Hs],[c.FREETEXT_COLOR,this.#Ts]]}#an(t){const e=t=>{this.editorDiv.style.fontSize=`calc(${t}px * var(--scale-factor))`,this.translate(0,-(t-this.#Hs)*this.parentScale),this.#Hs=t,this.#hn()},i=this.#Hs;this.addCommands({cmd:e.bind(this,t),undo:e.bind(this,i),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:c.FREETEXT_SIZE,overwriteIfSameType:!0,keepUndo:!0})}#on(t){const e=t=>{this.#Ts=this.editorDiv.style.color=t},i=this.#Ts;this.addCommands({cmd:e.bind(this,t),undo:e.bind(this,i),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:c.FREETEXT_COLOR,overwriteIfSameType:!0,keepUndo:!0})}_translateEmpty(t,e){this._uiManager.translateSelectedEditors(t,e,!0)}getInitialTranslation(){const t=this.parentScale;return[-ts._internalPadding*t,-(ts._internalPadding+this.#Hs)*t]}rebuild(){this.parent&&(super.rebuild(),null!==this.div&&(this.isAttachedToDOM||this.parent.add(this)))}enableEditMode(){if(this.isInEditMode())return;this.parent.setEditingState(!1),this.parent.updateToolbar(l.FREETEXT),super.enableEditMode(),this.overlayDiv.classList.remove("enabled"),this.editorDiv.contentEditable=!0,this._isDraggable=!1,this.div.removeAttribute("aria-activedescendant"),this.#rn=new AbortController;const t=this._uiManager.combinedSignal(this.#rn);this.editorDiv.addEventListener("keydown",this.editorDivKeydown.bind(this),{signal:t}),this.editorDiv.addEventListener("focus",this.editorDivFocus.bind(this),{signal:t}),this.editorDiv.addEventListener("blur",this.editorDivBlur.bind(this),{signal:t}),this.editorDiv.addEventListener("input",this.editorDivInput.bind(this),{signal:t}),this.editorDiv.addEventListener("paste",this.editorDivPaste.bind(this),{signal:t})}disableEditMode(){this.isInEditMode()&&(this.parent.setEditingState(!0),super.disableEditMode(),this.overlayDiv.classList.add("enabled"),this.editorDiv.contentEditable=!1,this.div.setAttribute("aria-activedescendant",this.#nn),this._isDraggable=!0,this.#rn?.abort(),this.#rn=null,this.div.focus({preventScroll:!0}),this.isEditing=!1,this.parent.div.classList.add("freetextEditing"))}focusin(t){this._focusEventsAllowed&&(super.focusin(t),t.target!==this.editorDiv&&this.editorDiv.focus())}onceAdded(){this.width||(this.enableEditMode(),this.editorDiv.focus(),this._initialOptions?.isCentered&&this.center(),this._initialOptions=null)}isEmpty(){return!this.editorDiv||""===this.editorDiv.innerText.trim()}remove(){this.isEditing=!1,this.parent&&(this.parent.setEditingState(!0),this.parent.div.classList.add("freetextEditing")),super.remove()}#ln(){const t=[];this.editorDiv.normalize();let e=null;for(const i of this.editorDiv.childNodes)e?.nodeType===Node.TEXT_NODE&&"BR"===i.nodeName||(t.push(ts.#cn(i)),e=i);return t.join("\n")}#hn(){const[t,e]=this.parentDimensions;let i;if(this.isAttachedToDOM)i=this.div.getBoundingClientRect();else{const{currentLayer:t,div:e}=this,s=e.style.display,n=e.classList.contains("hidden");e.classList.remove("hidden"),e.style.display="hidden",t.div.append(this.div),i=e.getBoundingClientRect(),e.remove(),e.style.display=s,e.classList.toggle("hidden",n)}this.rotation%180==this.parentRotation%180?(this.width=i.width/t,this.height=i.height/e):(this.width=i.height/t,this.height=i.width/e),this.fixAndSetPosition()}commit(){if(!this.isInEditMode())return;super.commit(),this.disableEditMode();const t=this.#sn,e=this.#sn=this.#ln().trimEnd();if(t===e)return;const i=t=>{this.#sn=t,t?(this.#dn(),this._uiManager.rebuild(this),this.#hn()):this.remove()};this.addCommands({cmd:()=>{i(e)},undo:()=>{i(t)},mustExec:!1}),this.#hn()}shouldGetKeyboardEvents(){return this.isInEditMode()}enterInEditMode(){this.enableEditMode(),this.editorDiv.focus()}dblclick(t){this.enterInEditMode()}keydown(t){t.target===this.div&&"Enter"===t.key&&(this.enterInEditMode(),t.preventDefault())}editorDivKeydown(t){ts._keyboardManager.exec(this,t)}editorDivFocus(t){this.isEditing=!0}editorDivBlur(t){this.isEditing=!1}editorDivInput(t){this.parent.div.classList.toggle("freetextEditing",this.isEmpty())}disableEditing(){this.editorDiv.setAttribute("role","comment"),this.editorDiv.removeAttribute("aria-multiline")}enableEditing(){this.editorDiv.setAttribute("role","textbox"),this.editorDiv.setAttribute("aria-multiline",!0)}render(){if(this.div)return this.div;let t,e;this.width&&(t=this.x,e=this.y),super.render(),this.editorDiv=document.createElement("div"),this.editorDiv.className="internal",this.editorDiv.setAttribute("id",this.#nn),this.editorDiv.setAttribute("data-l10n-id","pdfjs-free-text"),this.enableEditing(),kt._l10nPromise.get("pdfjs-free-text-default-content").then((t=>this.editorDiv?.setAttribute("default-content",t))),this.editorDiv.contentEditable=!0;const{style:i}=this.editorDiv;if(i.fontSize=`calc(${this.#Hs}px * var(--scale-factor))`,i.color=this.#Ts,this.div.append(this.editorDiv),this.overlayDiv=document.createElement("div"),this.overlayDiv.classList.add("overlay","enabled"),this.div.append(this.overlayDiv),wt(this,this.div,["dblclick","keydown"]),this.width){const[i,s]=this.parentDimensions;if(this.annotationElementId){const{position:n}=this._initialData;let[r,a]=this.getInitialTranslation();[r,a]=this.pageTranslationToScreen(r,a);const[o,h]=this.pageDimensions,[l,c]=this.pageTranslation;let d,u;switch(this.rotation){case 0:d=t+(n[0]-l)/o,u=e+this.height-(n[1]-c)/h;break;case 90:d=t+(n[0]-l)/o,u=e-(n[1]-c)/h,[r,a]=[a,-r];break;case 180:d=t-this.width+(n[0]-l)/o,u=e-(n[1]-c)/h,[r,a]=[-r,-a];break;case 270:d=t+(n[0]-l-this.height*h)/o,u=e+(n[1]-c-this.width*o)/h,[r,a]=[-a,r]}this.setAt(d*i,u*s,r,a)}else this.setAt(t*i,e*s,this.width*i,this.height*s);this.#dn(),this._isDraggable=!0,this.editorDiv.contentEditable=!1}else this._isDraggable=!1,this.editorDiv.contentEditable=!0;return this.div}static#cn(t){return(t.nodeType===Node.TEXT_NODE?t.nodeValue:t.innerText).replaceAll(Zi,"")}editorDivPaste(t){const e=t.clipboardData||window.clipboardData,{types:i}=e;if(1===i.length&&"text/plain"===i[0])return;t.preventDefault();const s=ts.#un(e.getData("text")||"").replaceAll(Zi,"\n");if(!s)return;const n=window.getSelection();if(!n.rangeCount)return;this.editorDiv.normalize(),n.deleteFromDocument();const r=n.getRangeAt(0);if(!s.includes("\n"))return r.insertNode(document.createTextNode(s)),this.editorDiv.normalize(),void n.collapseToStart();const{startContainer:a,startOffset:o}=r,h=[],l=[];if(a.nodeType===Node.TEXT_NODE){const t=a.parentElement;if(l.push(a.nodeValue.slice(o).replaceAll(Zi,"")),t!==this.editorDiv){let e=h;for(const i of this.editorDiv.childNodes)i!==t?e.push(ts.#cn(i)):e=l}h.push(a.nodeValue.slice(0,o).replaceAll(Zi,""))}else if(a===this.editorDiv){let t=h,e=0;for(const i of this.editorDiv.childNodes)e++===o&&(t=l),t.push(ts.#cn(i))}this.#sn=`${h.join("\n")}${s}${l.join("\n")}`,this.#dn();const c=new Range;let d=h.reduce(((t,e)=>t+e.length),0);for(const{firstChild:t}of this.editorDiv.childNodes)if(t.nodeType===Node.TEXT_NODE){const e=t.nodeValue.length;if(d<=e){c.setStart(t,d),c.setEnd(t,d);break}d-=e}n.removeAllRanges(),n.addRange(c)}#dn(){if(this.editorDiv.replaceChildren(),this.#sn)for(const t of this.#sn.split("\n")){const e=document.createElement("div");e.append(t?document.createTextNode(t):document.createElement("br")),this.editorDiv.append(e)}}#pn(){return this.#sn.replaceAll(" "," ")}static#un(t){return t.replaceAll(" "," ")}get contentDiv(){return this.editorDiv}static async deserialize(t,e,i){let s=null;if(t instanceof Bi){const{data:{defaultAppearanceData:{fontSize:e,fontColor:i},rect:n,rotation:r,id:a,popupRef:o},textContent:h,textPosition:c,parent:{page:{pageNumber:d}}}=t;if(!h||0===h.length)return null;s=t={annotationType:l.FREETEXT,color:Array.from(i),fontSize:e,value:h.join("\n"),position:c,pageIndex:d-1,rect:n.slice(0),rotation:r,id:a,deleted:!1,popupRef:o}}const n=await super.deserialize(t,e,i);return n.#Hs=t.fontSize,n.#Ts=z.makeHexColor(...t.color),n.#sn=ts.#un(t.value),n.annotationElementId=t.id||null,n._initialData=s,n}serialize(t=!1){if(this.isEmpty())return null;if(this.deleted)return this.serializeDeleted();const e=ts._internalPadding*this.parentScale,i=this.getRect(e,e),s=kt._colorManager.convert(this.isAttachedToDOM?getComputedStyle(this.editorDiv).color:this.#Ts),n={annotationType:l.FREETEXT,color:s,fontSize:this.#Hs,value:this.#pn(),pageIndex:this.pageIndex,rect:i,rotation:this.rotation,structTreeParentId:this._structTreeParentId};return t?n:this.annotationElementId&&!this.#gn(n)?null:(n.id=this.annotationElementId,n)}#gn(t){const{value:e,fontSize:i,color:s,pageIndex:n}=this._initialData;return this._hasBeenMoved||t.value!==e||t.fontSize!==i||t.color.some(((t,e)=>t!==s[e]))||t.pageIndex!==n}renderAnnotationElement(t){const e=super.renderAnnotationElement(t);if(this.deleted)return e;const{style:i}=e;i.fontSize=`calc(${this.#Hs}px * var(--scale-factor))`,i.color=this.#Ts,e.replaceChildren();for(const t of this.#sn.split("\n")){const i=document.createElement("div");i.append(t?document.createTextNode(t):document.createElement("br")),e.append(i)}const s=ts._internalPadding*this.parentScale;return t.updateEdited({rect:this.getRect(s,s),popupContent:this.#sn}),e}resetAnnotationElement(t){super.resetAnnotationElement(t),t.resetEdited()}}class es{#fn;#mn=[];#bn=[];constructor(t,e=0,i=0,s=!0){let n=1/0,r=-1/0,a=1/0,o=-1/0;const h=10**-4;for(const{x:i,y:s,width:l,height:c}of t){const t=Math.floor((i-e)/h)*h,d=Math.ceil((i+l+e)/h)*h,u=Math.floor((s-e)/h)*h,p=Math.ceil((s+c+e)/h)*h,g=[t,u,p,!0],f=[d,u,p,!1];this.#mn.push(g,f),n=Math.min(n,t),r=Math.max(r,d),a=Math.min(a,u),o=Math.max(o,p)}const l=r-n+2*i,c=o-a+2*i,d=n-i,u=a-i,p=this.#mn.at(s?-1:-2),g=[p[0],p[2]];for(const t of this.#mn){const[e,i,s]=t;t[0]=(e-d)/l,t[1]=(i-u)/c,t[2]=(s-u)/c}this.#fn={x:d,y:u,width:l,height:c,lastPoint:g}}getOutlines(){this.#mn.sort(((t,e)=>t[0]-e[0]||t[1]-e[1]||t[2]-e[2]));const t=[];for(const e of this.#mn)e[3]?(t.push(...this.#vn(e)),this.#yn(e)):(this.#An(e),t.push(...this.#vn(e)));return this.#wn(t)}#wn(t){const e=[],i=new Set;for(const i of t){const[t,s,n]=i;e.push([t,s,i],[t,n,i])}e.sort(((t,e)=>t[1]-e[1]||t[0]-e[0]));for(let t=0,s=e.length;t<s;t+=2){const s=e[t][2],n=e[t+1][2];s.push(n),n.push(s),i.add(s),i.add(n)}const s=[];let n;for(;i.size>0;){const t=i.values().next().value;let[e,r,a,o,h]=t;i.delete(t);let l=e,c=r;for(n=[e,a],s.push(n);;){let t;if(i.has(o))t=o;else{if(!i.has(h))break;t=h}i.delete(t),[e,r,a,o,h]=t,l!==e&&(n.push(l,c,e,c===r?r:a),l=e),c=c===r?a:r}n.push(l,c)}return new ss(s,this.#fn)}#xn(t){const e=this.#bn;let i=0,s=e.length-1;for(;i<=s;){const n=i+s>>1,r=e[n][0];if(r===t)return n;r<t?i=n+1:s=n-1}return s+1}#yn([,t,e]){const i=this.#xn(t);this.#bn.splice(i,0,[t,e])}#An([,t,e]){const i=this.#xn(t);for(let s=i;s<this.#bn.length;s++){const[i,n]=this.#bn[s];if(i!==t)break;if(i===t&&n===e)return void this.#bn.splice(s,1)}for(let s=i-1;s>=0;s--){const[i,n]=this.#bn[s];if(i!==t)break;if(i===t&&n===e)return void this.#bn.splice(s,1)}}#vn(t){const[e,i,s]=t,n=[[e,i,s]],r=this.#xn(s);for(let t=0;t<r;t++){const[i,s]=this.#bn[t];for(let t=0,r=n.length;t<r;t++){const[,a,o]=n[t];if(!(s<=a||o<=i))if(a>=i)if(o>s)n[t][1]=s;else{if(1===r)return[];n.splice(t,1),t--,r--}else n[t][2]=i,o>s&&n.push([e,s,o])}}return n}}class is{toSVGPath(){throw new Error("Abstract method `toSVGPath` must be implemented.")}get box(){throw new Error("Abstract getter `box` must be implemented.")}serialize(t,e){throw new Error("Abstract method `serialize` must be implemented.")}get free(){return this instanceof rs}}class ss extends is{#fn;#_n;constructor(t,e){super(),this.#_n=t,this.#fn=e}toSVGPath(){const t=[];for(const e of this.#_n){let[i,s]=e;t.push(`M${i} ${s}`);for(let n=2;n<e.length;n+=2){const r=e[n],a=e[n+1];r===i?(t.push(`V${a}`),s=a):a===s&&(t.push(`H${r}`),i=r)}t.push("Z")}return t.join(" ")}serialize([t,e,i,s],n){const r=[],a=i-t,o=s-e;for(const e of this.#_n){const i=new Array(e.length);for(let n=0;n<e.length;n+=2)i[n]=t+e[n]*a,i[n+1]=s-e[n+1]*o;r.push(i)}return r}get box(){return this.#fn}}class ns{#fn;#En=[];#Cn;#Sn;#Tn=[];#Mn=new Float64Array(18);#kn;#In;#Rn;#Pn;#Dn;#Ln;#Fn=[];static#On=8;static#Nn=2;static#Bn=ns.#On+ns.#Nn;constructor({x:t,y:e},i,s,n,r,a=0){this.#fn=i,this.#Ln=n*s,this.#Sn=r,this.#Mn.set([NaN,NaN,NaN,NaN,t,e],6),this.#Cn=a,this.#Pn=ns.#On*s,this.#Rn=ns.#Bn*s,this.#Dn=s,this.#Fn.push(t,e)}get free(){return!0}isEmpty(){return isNaN(this.#Mn[8])}#zn(){const t=this.#Mn.subarray(4,6),e=this.#Mn.subarray(16,18),[i,s,n,r]=this.#fn;return[(this.#kn+(t[0]-e[0])/2-i)/n,(this.#In+(t[1]-e[1])/2-s)/r,(this.#kn+(e[0]-t[0])/2-i)/n,(this.#In+(e[1]-t[1])/2-s)/r]}add({x:t,y:e}){this.#kn=t,this.#In=e;const[i,s,n,r]=this.#fn;let[a,o,h,l]=this.#Mn.subarray(8,12);const c=t-h,d=e-l,u=Math.hypot(c,d);if(u<this.#Rn)return!1;const p=u-this.#Pn,g=p/u,f=g*c,m=g*d;let b=a,v=o;a=h,o=l,h+=f,l+=m,this.#Fn?.push(t,e);const y=f/p,A=-m/p*this.#Ln,w=y*this.#Ln;return this.#Mn.set(this.#Mn.subarray(2,8),0),this.#Mn.set([h+A,l+w],4),this.#Mn.set(this.#Mn.subarray(14,18),12),this.#Mn.set([h-A,l-w],16),isNaN(this.#Mn[6])?(0===this.#Tn.length&&(this.#Mn.set([a+A,o+w],2),this.#Tn.push(NaN,NaN,NaN,NaN,(a+A-i)/n,(o+w-s)/r),this.#Mn.set([a-A,o-w],14),this.#En.push(NaN,NaN,NaN,NaN,(a-A-i)/n,(o-w-s)/r)),this.#Mn.set([b,v,a,o,h,l],6),!this.isEmpty()):(this.#Mn.set([b,v,a,o,h,l],6),Math.abs(Math.atan2(v-o,b-a)-Math.atan2(m,f))<Math.PI/2?([a,o,h,l]=this.#Mn.subarray(2,6),this.#Tn.push(NaN,NaN,NaN,NaN,((a+h)/2-i)/n,((o+l)/2-s)/r),[a,o,b,v]=this.#Mn.subarray(14,18),this.#En.push(NaN,NaN,NaN,NaN,((b+a)/2-i)/n,((v+o)/2-s)/r),!0):([b,v,a,o,h,l]=this.#Mn.subarray(0,6),this.#Tn.push(((b+5*a)/6-i)/n,((v+5*o)/6-s)/r,((5*a+h)/6-i)/n,((5*o+l)/6-s)/r,((a+h)/2-i)/n,((o+l)/2-s)/r),[h,l,a,o,b,v]=this.#Mn.subarray(12,18),this.#En.push(((b+5*a)/6-i)/n,((v+5*o)/6-s)/r,((5*a+h)/6-i)/n,((5*o+l)/6-s)/r,((a+h)/2-i)/n,((o+l)/2-s)/r),!0))}toSVGPath(){if(this.isEmpty())return"";const t=this.#Tn,e=this.#En,i=this.#Mn.subarray(4,6),s=this.#Mn.subarray(16,18),[n,r,a,o]=this.#fn,[h,l,c,d]=this.#zn();if(isNaN(this.#Mn[6])&&!this.isEmpty())return`M${(this.#Mn[2]-n)/a} ${(this.#Mn[3]-r)/o} L${(this.#Mn[4]-n)/a} ${(this.#Mn[5]-r)/o} L${h} ${l} L${c} ${d} L${(this.#Mn[16]-n)/a} ${(this.#Mn[17]-r)/o} L${(this.#Mn[14]-n)/a} ${(this.#Mn[15]-r)/o} Z`;const u=[];u.push(`M${t[4]} ${t[5]}`);for(let e=6;e<t.length;e+=6)isNaN(t[e])?u.push(`L${t[e+4]} ${t[e+5]}`):u.push(`C${t[e]} ${t[e+1]} ${t[e+2]} ${t[e+3]} ${t[e+4]} ${t[e+5]}`);u.push(`L${(i[0]-n)/a} ${(i[1]-r)/o} L${h} ${l} L${c} ${d} L${(s[0]-n)/a} ${(s[1]-r)/o}`);for(let t=e.length-6;t>=6;t-=6)isNaN(e[t])?u.push(`L${e[t+4]} ${e[t+5]}`):u.push(`C${e[t]} ${e[t+1]} ${e[t+2]} ${e[t+3]} ${e[t+4]} ${e[t+5]}`);return u.push(`L${e[4]} ${e[5]} Z`),u.join(" ")}getOutlines(){const t=this.#Tn,e=this.#En,i=this.#Mn,s=i.subarray(4,6),n=i.subarray(16,18),[r,a,o,h]=this.#fn,l=new Float64Array((this.#Fn?.length??0)+2);for(let t=0,e=l.length-2;t<e;t+=2)l[t]=(this.#Fn[t]-r)/o,l[t+1]=(this.#Fn[t+1]-a)/h;l[l.length-2]=(this.#kn-r)/o,l[l.length-1]=(this.#In-a)/h;const[c,d,u,p]=this.#zn();if(isNaN(i[6])&&!this.isEmpty()){const t=new Float64Array(36);return t.set([NaN,NaN,NaN,NaN,(i[2]-r)/o,(i[3]-a)/h,NaN,NaN,NaN,NaN,(i[4]-r)/o,(i[5]-a)/h,NaN,NaN,NaN,NaN,c,d,NaN,NaN,NaN,NaN,u,p,NaN,NaN,NaN,NaN,(i[16]-r)/o,(i[17]-a)/h,NaN,NaN,NaN,NaN,(i[14]-r)/o,(i[15]-a)/h],0),new rs(t,l,this.#fn,this.#Dn,this.#Cn,this.#Sn)}const g=new Float64Array(this.#Tn.length+24+this.#En.length);let f=t.length;for(let e=0;e<f;e+=2)isNaN(t[e])?g[e]=g[e+1]=NaN:(g[e]=t[e],g[e+1]=t[e+1]);g.set([NaN,NaN,NaN,NaN,(s[0]-r)/o,(s[1]-a)/h,NaN,NaN,NaN,NaN,c,d,NaN,NaN,NaN,NaN,u,p,NaN,NaN,NaN,NaN,(n[0]-r)/o,(n[1]-a)/h],f),f+=24;for(let t=e.length-6;t>=6;t-=6)for(let i=0;i<6;i+=2)isNaN(e[t+i])?(g[f]=g[f+1]=NaN,f+=2):(g[f]=e[t+i],g[f+1]=e[t+i+1],f+=2);return g.set([NaN,NaN,NaN,NaN,e[4],e[5]],f),new rs(g,l,this.#fn,this.#Dn,this.#Cn,this.#Sn)}}class rs extends is{#fn;#Hn=null;#Cn;#Sn;#Fn;#Dn;#jn;constructor(t,e,i,s,n,r){super(),this.#jn=t,this.#Fn=e,this.#fn=i,this.#Dn=s,this.#Cn=n,this.#Sn=r,this.#Un(r);const{x:a,y:o,width:h,height:l}=this.#Hn;for(let e=0,i=t.length;e<i;e+=2)t[e]=(t[e]-a)/h,t[e+1]=(t[e+1]-o)/l;for(let t=0,i=e.length;t<i;t+=2)e[t]=(e[t]-a)/h,e[t+1]=(e[t+1]-o)/l}toSVGPath(){const t=[`M${this.#jn[4]} ${this.#jn[5]}`];for(let e=6,i=this.#jn.length;e<i;e+=6)isNaN(this.#jn[e])?t.push(`L${this.#jn[e+4]} ${this.#jn[e+5]}`):t.push(`C${this.#jn[e]} ${this.#jn[e+1]} ${this.#jn[e+2]} ${this.#jn[e+3]} ${this.#jn[e+4]} ${this.#jn[e+5]}`);return t.push("Z"),t.join(" ")}serialize([t,e,i,s],n){const r=i-t,a=s-e;let o,h;switch(n){case 0:o=this.#$n(this.#jn,t,s,r,-a),h=this.#$n(this.#Fn,t,s,r,-a);break;case 90:o=this.#Wn(this.#jn,t,e,r,a),h=this.#Wn(this.#Fn,t,e,r,a);break;case 180:o=this.#$n(this.#jn,i,e,-r,a),h=this.#$n(this.#Fn,i,e,-r,a);break;case 270:o=this.#Wn(this.#jn,i,s,-r,-a),h=this.#Wn(this.#Fn,i,s,-r,-a)}return{outline:Array.from(o),points:[Array.from(h)]}}#$n(t,e,i,s,n){const r=new Float64Array(t.length);for(let a=0,o=t.length;a<o;a+=2)r[a]=e+t[a]*s,r[a+1]=i+t[a+1]*n;return r}#Wn(t,e,i,s,n){const r=new Float64Array(t.length);for(let a=0,o=t.length;a<o;a+=2)r[a]=e+t[a+1]*s,r[a+1]=i+t[a]*n;return r}#Un(t){const e=this.#jn;let i=e[4],s=e[5],n=i,r=s,a=i,o=s,h=i,l=s;const c=t?Math.max:Math.min;for(let t=6,d=e.length;t<d;t+=6){if(isNaN(e[t]))n=Math.min(n,e[t+4]),r=Math.min(r,e[t+5]),a=Math.max(a,e[t+4]),o=Math.max(o,e[t+5]),l<e[t+5]?(h=e[t+4],l=e[t+5]):l===e[t+5]&&(h=c(h,e[t+4]));else{const d=z.bezierBoundingBox(i,s,...e.slice(t,t+6));n=Math.min(n,d[0]),r=Math.min(r,d[1]),a=Math.max(a,d[2]),o=Math.max(o,d[3]),l<d[3]?(h=d[2],l=d[3]):l===d[3]&&(h=c(h,d[2]))}i=e[t+4],s=e[t+5]}const d=n-this.#Cn,u=r-this.#Cn,p=a-n+2*this.#Cn,g=o-r+2*this.#Cn;this.#Hn={x:d,y:u,width:p,height:g,lastPoint:[h,l]}}get box(){return this.#Hn}getNewOutline(t,e){const{x:i,y:s,width:n,height:r}=this.#Hn,[a,o,h,l]=this.#fn,c=n*h,d=r*l,u=i*h+a,p=s*l+o,g=new ns({x:this.#Fn[0]*c+u,y:this.#Fn[1]*d+p},this.#fn,this.#Dn,t,this.#Sn,e??this.#Cn);for(let t=2;t<this.#Fn.length;t+=2)g.add({x:this.#Fn[t]*c+u,y:this.#Fn[t+1]*d+p});return g.getOutlines()}}class as{#ys=this.#As.bind(this);#Gn=this.#l.bind(this);#Vn=null;#qn=null;#Xn;#Kn=null;#Yn=!1;#Qn=!1;#r=null;#Jn;#f=null;#Zn;static#tr=null;static get _keyboardManager(){return C(this,"_keyboardManager",new Ct([[["Escape","mac+Escape"],as.prototype._hideDropdownFromKeyboard],[[" ","mac+ "],as.prototype._colorSelectFromKeyboard],[["ArrowDown","ArrowRight","mac+ArrowDown","mac+ArrowRight"],as.prototype._moveToNext],[["ArrowUp","ArrowLeft","mac+ArrowUp","mac+ArrowLeft"],as.prototype._moveToPrevious],[["Home","mac+Home"],as.prototype._moveToBeginning],[["End","mac+End"],as.prototype._moveToEnd]]))}constructor({editor:t=null,uiManager:e=null}){t?(this.#Qn=!1,this.#Zn=c.HIGHLIGHT_COLOR,this.#r=t):(this.#Qn=!0,this.#Zn=c.HIGHLIGHT_DEFAULT_COLOR),this.#f=t?._uiManager||e,this.#Jn=this.#f._eventBus,this.#Xn=t?.color||this.#f?.highlightColors.values().next().value||"#FFFF98",as.#tr||=Object.freeze({blue:"pdfjs-editor-colorpicker-blue",green:"pdfjs-editor-colorpicker-green",pink:"pdfjs-editor-colorpicker-pink",red:"pdfjs-editor-colorpicker-red",yellow:"pdfjs-editor-colorpicker-yellow"})}renderButton(){const t=this.#Vn=document.createElement("button");t.className="colorPicker",t.tabIndex="0",t.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-button"),t.setAttribute("aria-haspopup",!0);const e=this.#f._signal;t.addEventListener("click",this.#er.bind(this),{signal:e}),t.addEventListener("keydown",this.#ys,{signal:e});const i=this.#qn=document.createElement("span");return i.className="swatch",i.setAttribute("aria-hidden",!0),i.style.backgroundColor=this.#Xn,t.append(i),t}renderMainDropdown(){const t=this.#Kn=this.#ir();return t.setAttribute("aria-orientation","horizontal"),t.setAttribute("aria-labelledby","highlightColorPickerLabel"),t}#ir(){const t=document.createElement("div"),e=this.#f._signal;t.addEventListener("contextmenu",lt,{signal:e}),t.className="dropdown",t.role="listbox",t.setAttribute("aria-multiselectable",!1),t.setAttribute("aria-orientation","vertical"),t.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-dropdown");for(const[i,s]of this.#f.highlightColors){const n=document.createElement("button");n.tabIndex="0",n.role="option",n.setAttribute("data-color",s),n.title=i,n.setAttribute("data-l10n-id",as.#tr[i]);const r=document.createElement("span");n.append(r),r.className="swatch",r.style.backgroundColor=s,n.setAttribute("aria-selected",s===this.#Xn),n.addEventListener("click",this.#sr.bind(this,s),{signal:e}),t.append(n)}return t.addEventListener("keydown",this.#ys,{signal:e}),t}#sr(t,e){e.stopPropagation(),this.#Jn.dispatch("switchannotationeditorparams",{source:this,type:this.#Zn,value:t})}_colorSelectFromKeyboard(t){if(t.target===this.#Vn)return void this.#er(t);const e=t.target.getAttribute("data-color");e&&this.#sr(e,t)}_moveToNext(t){this.#nr?t.target!==this.#Vn?t.target.nextSibling?.focus():this.#Kn.firstChild?.focus():this.#er(t)}_moveToPrevious(t){t.target!==this.#Kn?.firstChild&&t.target!==this.#Vn?(this.#nr||this.#er(t),t.target.previousSibling?.focus()):this.#nr&&this._hideDropdownFromKeyboard()}_moveToBeginning(t){this.#nr?this.#Kn.firstChild?.focus():this.#er(t)}_moveToEnd(t){this.#nr?this.#Kn.lastChild?.focus():this.#er(t)}#As(t){as._keyboardManager.exec(this,t)}#er(t){if(this.#nr)return void this.hideDropdown();if(this.#Yn=0===t.detail,window.addEventListener("pointerdown",this.#Gn,{signal:this.#f._signal}),this.#Kn)return void this.#Kn.classList.remove("hidden");const e=this.#Kn=this.#ir();this.#Vn.append(e)}#l(t){this.#Kn?.contains(t.target)||this.hideDropdown()}hideDropdown(){this.#Kn?.classList.add("hidden"),window.removeEventListener("pointerdown",this.#Gn)}get#nr(){return this.#Kn&&!this.#Kn.classList.contains("hidden")}_hideDropdownFromKeyboard(){this.#Qn||(this.#nr?(this.hideDropdown(),this.#Vn.focus({preventScroll:!0,focusVisible:this.#Yn})):this.#r?.unselect())}updateColor(t){if(this.#qn&&(this.#qn.style.backgroundColor=t),!this.#Kn)return;const e=this.#f.highlightColors.values();for(const i of this.#Kn.children)i.setAttribute("aria-selected",e.next().value===t)}destroy(){this.#Vn?.remove(),this.#Vn=null,this.#qn=null,this.#Kn?.remove(),this.#Kn=null}}class os extends kt{#rr=null;#ar=0;#or;#hr=null;#n=null;#lr=null;#cr=null;#dr=0;#ur=null;#pr=null;#y=null;#gr=!1;#fr=null;#mr;#br=null;#vr="";#Ln;#yr="";static _defaultColor=null;static _defaultOpacity=1;static _defaultThickness=12;static _type="highlight";static _editorType=l.HIGHLIGHT;static _freeHighlightId=-1;static _freeHighlight=null;static _freeHighlightClipId="";static get _keyboardManager(){const t=os.prototype;return C(this,"_keyboardManager",new Ct([[["ArrowLeft","mac+ArrowLeft"],t._moveCaret,{args:[0]}],[["ArrowRight","mac+ArrowRight"],t._moveCaret,{args:[1]}],[["ArrowUp","mac+ArrowUp"],t._moveCaret,{args:[2]}],[["ArrowDown","mac+ArrowDown"],t._moveCaret,{args:[3]}]]))}constructor(t){super({...t,name:"highlightEditor"}),this.color=t.color||os._defaultColor,this.#Ln=t.thickness||os._defaultThickness,this.#mr=t.opacity||os._defaultOpacity,this.#or=t.boxes||null,this.#yr=t.methodOfCreation||"",this.#vr=t.text||"",this._isDraggable=!1,t.highlightId>-1?(this.#gr=!0,this.#Ar(t),this.#wr()):this.#or&&(this.#rr=t.anchorNode,this.#ar=t.anchorOffset,this.#cr=t.focusNode,this.#dr=t.focusOffset,this.#xr(),this.#wr(),this.rotate(this.rotation))}get telemetryInitialData(){return{action:"added",type:this.#gr?"free_highlight":"highlight",color:this._uiManager.highlightColorNames.get(this.color),thickness:this.#Ln,methodOfCreation:this.#yr}}get telemetryFinalData(){return{type:"highlight",color:this._uiManager.highlightColorNames.get(this.color)}}static computeTelemetryFinalData(t){return{numberOfColors:t.get("color").size}}#xr(){const t=new es(this.#or,.001);this.#pr=t.getOutlines(),({x:this.x,y:this.y,width:this.width,height:this.height}=this.#pr.box);const e=new es(this.#or,.0025,.001,"ltr"===this._uiManager.direction);this.#lr=e.getOutlines();const{lastPoint:i}=this.#lr.box;this.#fr=[(i[0]-this.x)/this.width,(i[1]-this.y)/this.height]}#Ar({highlightOutlines:t,highlightId:e,clipPathId:i}){if(this.#pr=t,this.#lr=t.getNewOutline(this.#Ln/2+1.5,.0025),e>=0)this.#y=e,this.#hr=i,this.parent.drawLayer.finalizeLine(e,t),this.#br=this.parent.drawLayer.highlightOutline(this.#lr);else if(this.parent){const e=this.parent.viewport.rotation;this.parent.drawLayer.updateLine(this.#y,t),this.parent.drawLayer.updateBox(this.#y,os.#_r(this.#pr.box,(e-this.rotation+360)%360)),this.parent.drawLayer.updateLine(this.#br,this.#lr),this.parent.drawLayer.updateBox(this.#br,os.#_r(this.#lr.box,e))}const{x:s,y:n,width:r,height:a}=t.box;switch(this.rotation){case 0:this.x=s,this.y=n,this.width=r,this.height=a;break;case 90:{const[t,e]=this.parentDimensions;this.x=n,this.y=1-s,this.width=r*e/t,this.height=a*t/e;break}case 180:this.x=1-s,this.y=1-n,this.width=r,this.height=a;break;case 270:{const[t,e]=this.parentDimensions;this.x=1-n,this.y=s,this.width=r*e/t,this.height=a*t/e;break}}const{lastPoint:o}=this.#lr.box;this.#fr=[(o[0]-s)/r,(o[1]-n)/a]}static initialize(t,e){kt.initialize(t,e),os._defaultColor||=e.highlightColors?.values().next().value||"#fff066"}static updateDefaultParams(t,e){switch(t){case c.HIGHLIGHT_DEFAULT_COLOR:os._defaultColor=e;break;case c.HIGHLIGHT_THICKNESS:os._defaultThickness=e}}translateInPage(t,e){}get toolbarPosition(){return this.#fr}updateParams(t,e){switch(t){case c.HIGHLIGHT_COLOR:this.#on(e);break;case c.HIGHLIGHT_THICKNESS:this.#Er(e)}}static get defaultPropertiesToUpdate(){return[[c.HIGHLIGHT_DEFAULT_COLOR,os._defaultColor],[c.HIGHLIGHT_THICKNESS,os._defaultThickness]]}get propertiesToUpdate(){return[[c.HIGHLIGHT_COLOR,this.color||os._defaultColor],[c.HIGHLIGHT_THICKNESS,this.#Ln||os._defaultThickness],[c.HIGHLIGHT_FREE,this.#gr]]}#on(t){const e=(t,e)=>{this.color=t,this.parent?.drawLayer.changeColor(this.#y,t),this.#n?.updateColor(t),this.#mr=e,this.parent?.drawLayer.changeOpacity(this.#y,e)},i=this.color,s=this.#mr;this.addCommands({cmd:e.bind(this,t,os._defaultOpacity),undo:e.bind(this,i,s),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:c.HIGHLIGHT_COLOR,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"color_changed",color:this._uiManager.highlightColorNames.get(t)},!0)}#Er(t){const e=this.#Ln,i=t=>{this.#Ln=t,this.#Cr(t)};this.addCommands({cmd:i.bind(this,t),undo:i.bind(this,e),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:c.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"thickness_changed",thickness:t},!0)}async addEditToolbar(){const t=await super.addEditToolbar();return t?(this._uiManager.highlightColors&&(this.#n=new as({editor:this}),t.addColorPicker(this.#n)),t):null}disableEditing(){super.disableEditing(),this.div.classList.toggle("disabled",!0)}enableEditing(){super.enableEditing(),this.div.classList.toggle("disabled",!1)}fixAndSetPosition(){return super.fixAndSetPosition(this.#Sr())}getBaseTranslation(){return[0,0]}getRect(t,e){return super.getRect(t,e,this.#Sr())}onceAdded(){this.annotationElementId||this.parent.addUndoableEditor(this),this.div.focus()}remove(){this.#Tr(),this._reportTelemetry({action:"deleted"}),super.remove()}rebuild(){this.parent&&(super.rebuild(),null!==this.div&&(this.#wr(),this.isAttachedToDOM||this.parent.add(this)))}setParent(t){let e=!1;this.parent&&!t?this.#Tr():t&&(this.#wr(t),e=!this.parent&&this.div?.classList.contains("selectedEditor")),super.setParent(t),this.show(this._isVisible),e&&this.select()}#Cr(t){if(!this.#gr)return;this.#Ar({highlightOutlines:this.#pr.getNewOutline(t/2)}),this.fixAndSetPosition();const[e,i]=this.parentDimensions;this.setDims(this.width*e,this.height*i)}#Tr(){null!==this.#y&&this.parent&&(this.parent.drawLayer.remove(this.#y),this.#y=null,this.parent.drawLayer.remove(this.#br),this.#br=null)}#wr(t=this.parent){null===this.#y&&(({id:this.#y,clipPathId:this.#hr}=t.drawLayer.highlight(this.#pr,this.color,this.#mr)),this.#br=t.drawLayer.highlightOutline(this.#lr),this.#ur&&(this.#ur.style.clipPath=this.#hr))}static#_r({x:t,y:e,width:i,height:s},n){switch(n){case 90:return{x:1-e-s,y:t,width:s,height:i};case 180:return{x:1-t-i,y:1-e-s,width:i,height:s};case 270:return{x:e,y:1-t-i,width:s,height:i}}return{x:t,y:e,width:i,height:s}}rotate(t){const{drawLayer:e}=this.parent;let i;this.#gr?(t=(t-this.rotation+360)%360,i=os.#_r(this.#pr.box,t)):i=os.#_r(this,t),e.rotate(this.#y,t),e.rotate(this.#br,t),e.updateBox(this.#y,i),e.updateBox(this.#br,os.#_r(this.#lr.box,t))}render(){if(this.div)return this.div;const t=super.render();this.#vr&&(t.setAttribute("aria-label",this.#vr),t.setAttribute("role","mark")),this.#gr?t.classList.add("free"):this.div.addEventListener("keydown",this.#Mr.bind(this),{signal:this._uiManager._signal});const e=this.#ur=document.createElement("div");t.append(e),e.setAttribute("aria-hidden","true"),e.className="internal",e.style.clipPath=this.#hr;const[i,s]=this.parentDimensions;return this.setDims(this.width*i,this.height*s),wt(this,this.#ur,["pointerover","pointerleave"]),this.enableEditing(),t}pointerover(){this.parent.drawLayer.addClass(this.#br,"hovered")}pointerleave(){this.parent.drawLayer.removeClass(this.#br,"hovered")}#Mr(t){os._keyboardManager.exec(this,t)}_moveCaret(t){switch(this.parent.unselect(this),t){case 0:case 2:this.#kr(!0);break;case 1:case 3:this.#kr(!1)}}#kr(t){if(!this.#rr)return;const e=window.getSelection();t?e.setPosition(this.#rr,this.#ar):e.setPosition(this.#cr,this.#dr)}select(){super.select(),this.#br&&(this.parent?.drawLayer.removeClass(this.#br,"hovered"),this.parent?.drawLayer.addClass(this.#br,"selected"))}unselect(){super.unselect(),this.#br&&(this.parent?.drawLayer.removeClass(this.#br,"selected"),this.#gr||this.#kr(!1))}get _mustFixPosition(){return!this.#gr}show(t=this._isVisible){super.show(t),this.parent&&(this.parent.drawLayer.show(this.#y,t),this.parent.drawLayer.show(this.#br,t))}#Sr(){return this.#gr?this.rotation:0}#Ir(){if(this.#gr)return null;const[t,e]=this.pageDimensions,[i,s]=this.pageTranslation,n=this.#or,r=new Float32Array(8*n.length);let a=0;for(const{x:o,y:h,width:l,height:c}of n){const n=o*t+i,d=(1-h-c)*e+s;r[a]=r[a+4]=n,r[a+1]=r[a+3]=d,r[a+2]=r[a+6]=n+l*t,r[a+5]=r[a+7]=d+c*e,a+=8}return r}#Rr(t){return this.#pr.serialize(t,this.#Sr())}static startHighlighting(t,e,{target:i,x:s,y:n}){const{x:r,y:a,width:o,height:h}=i.getBoundingClientRect(),l=new AbortController,c=t.combinedSignal(l),d=e=>{l.abort(),this.#Pr(t,e)};window.addEventListener("blur",d,{signal:c}),window.addEventListener("pointerup",d,{signal:c}),window.addEventListener("pointerdown",(t=>{t.preventDefault(),t.stopPropagation()}),{capture:!0,passive:!1,signal:c}),window.addEventListener("contextmenu",lt,{signal:c}),i.addEventListener("pointermove",this.#Dr.bind(this,t),{signal:c}),this._freeHighlight=new ns({x:s,y:n},[r,a,o,h],t.scale,this._defaultThickness/2,e,.001),({id:this._freeHighlightId,clipPathId:this._freeHighlightClipId}=t.drawLayer.highlight(this._freeHighlight,this._defaultColor,this._defaultOpacity,!0))}static#Dr(t,e){this._freeHighlight.add(e)&&t.drawLayer.updatePath(this._freeHighlightId,this._freeHighlight)}static#Pr(t,e){this._freeHighlight.isEmpty()?t.drawLayer.removeFreeHighlight(this._freeHighlightId):t.createAndAddNewEditor(e,!1,{highlightId:this._freeHighlightId,highlightOutlines:this._freeHighlight.getOutlines(),clipPathId:this._freeHighlightClipId,methodOfCreation:"main_toolbar"}),this._freeHighlightId=-1,this._freeHighlight=null,this._freeHighlightClipId=""}static async deserialize(t,e,i){let s=null;if(t instanceof Vi){const{data:{quadPoints:e,rect:i,rotation:n,id:r,color:a,opacity:o,popupRef:h},parent:{page:{pageNumber:c}}}=t;s=t={annotationType:l.HIGHLIGHT,color:Array.from(a),opacity:o,quadPoints:e,boxes:null,pageIndex:c-1,rect:i.slice(0),rotation:n,id:r,deleted:!1,popupRef:h}}else if(t instanceof Gi){const{data:{inkLists:e,rect:i,rotation:n,id:r,color:a,borderStyle:{rawWidth:o},popupRef:h},parent:{page:{pageNumber:c}}}=t;s=t={annotationType:l.HIGHLIGHT,color:Array.from(a),thickness:o,inkLists:e,boxes:null,pageIndex:c-1,rect:i.slice(0),rotation:n,id:r,deleted:!1,popupRef:h}}const{color:n,quadPoints:r,inkLists:a,opacity:o}=t,h=await super.deserialize(t,e,i);h.color=z.makeHexColor(...n),h.#mr=o||1,a&&(h.#Ln=t.thickness),h.annotationElementId=t.id||null,h._initialData=s;const[c,d]=h.pageDimensions,[u,p]=h.pageTranslation;if(r){const t=h.#or=[];for(let e=0;e<r.length;e+=8)t.push({x:(r[e]-u)/c,y:1-(r[e+1]-p)/d,width:(r[e+2]-r[e])/c,height:(r[e+1]-r[e+5])/d});h.#xr(),h.#wr(),h.rotate(h.rotation)}else if(a){h.#gr=!0;const t=a[0],i={x:t[0]-u,y:d-(t[1]-p)},s=new ns(i,[0,0,c,d],1,h.#Ln/2,!0,.001);for(let e=0,n=t.length;e<n;e+=2)i.x=t[e]-u,i.y=d-(t[e+1]-p),s.add(i);const{id:n,clipPathId:r}=e.drawLayer.highlight(s,h.color,h._defaultOpacity,!0);h.#Ar({highlightOutlines:s.getOutlines(),highlightId:n,clipPathId:r}),h.#wr()}return h}serialize(t=!1){if(this.isEmpty()||t)return null;if(this.deleted)return this.serializeDeleted();const e=this.getRect(0,0),i=kt._colorManager.convert(this.color),s={annotationType:l.HIGHLIGHT,color:i,opacity:this.#mr,thickness:this.#Ln,quadPoints:this.#Ir(),outlines:this.#Rr(e),pageIndex:this.pageIndex,rect:e,rotation:this.#Sr(),structTreeParentId:this._structTreeParentId};return this.annotationElementId&&!this.#gn(s)?null:(s.id=this.annotationElementId,s)}#gn(t){const{color:e}=this._initialData;return t.color.some(((t,i)=>t!==e[i]))}renderAnnotationElement(t){return t.updateEdited({rect:this.getRect(0,0)}),null}static canCreateNewEmptyEditor(){return!1}}class hs extends kt{#Lr=0;#Fr=0;#Or=null;#Nr=new Path2D;#Br=!1;#zr=null;#Hr=!1;#jr=!1;#Ur=null;#$r=null;#Wr=0;#Gr=0;#Vr=null;static _defaultColor=null;static _defaultOpacity=1;static _defaultThickness=1;static _type="ink";static _editorType=l.INK;constructor(t){super({...t,name:"inkEditor"}),this.color=t.color||null,this.thickness=t.thickness||null,this.opacity=t.opacity||null,this.paths=[],this.bezierPath2D=[],this.allRawPaths=[],this.currentPath=[],this.scaleFactor=1,this.translationX=this.translationY=0,this.x=0,this.y=0,this._willKeepAspectRatio=!0}static initialize(t,e){kt.initialize(t,e)}static updateDefaultParams(t,e){switch(t){case c.INK_THICKNESS:hs._defaultThickness=e;break;case c.INK_COLOR:hs._defaultColor=e;break;case c.INK_OPACITY:hs._defaultOpacity=e/100}}updateParams(t,e){switch(t){case c.INK_THICKNESS:this.#Er(e);break;case c.INK_COLOR:this.#on(e);break;case c.INK_OPACITY:this.#qr(e)}}static get defaultPropertiesToUpdate(){return[[c.INK_THICKNESS,hs._defaultThickness],[c.INK_COLOR,hs._defaultColor||kt._defaultLineColor],[c.INK_OPACITY,Math.round(100*hs._defaultOpacity)]]}get propertiesToUpdate(){return[[c.INK_THICKNESS,this.thickness||hs._defaultThickness],[c.INK_COLOR,this.color||hs._defaultColor||kt._defaultLineColor],[c.INK_OPACITY,Math.round(100*(this.opacity??hs._defaultOpacity))]]}#Er(t){const e=t=>{this.thickness=t,this.#Xr()},i=this.thickness;this.addCommands({cmd:e.bind(this,t),undo:e.bind(this,i),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:c.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0})}#on(t){const e=t=>{this.color=t,this.#Kr()},i=this.color;this.addCommands({cmd:e.bind(this,t),undo:e.bind(this,i),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:c.INK_COLOR,overwriteIfSameType:!0,keepUndo:!0})}#qr(t){const e=t=>{this.opacity=t,this.#Kr()};t/=100;const i=this.opacity;this.addCommands({cmd:e.bind(this,t),undo:e.bind(this,i),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:c.INK_OPACITY,overwriteIfSameType:!0,keepUndo:!0})}rebuild(){this.parent&&(super.rebuild(),null!==this.div&&(this.canvas||(this.#Yr(),this.#Qr()),this.isAttachedToDOM||(this.parent.add(this),this.#Jr()),this.#Xr()))}remove(){null!==this.canvas&&(this.isEmpty()||this.commit(),this.canvas.width=this.canvas.height=0,this.canvas.remove(),this.canvas=null,this.#Or&&(clearTimeout(this.#Or),this.#Or=null),this.#Ur?.disconnect(),this.#Ur=null,super.remove())}setParent(t){!this.parent&&t?this._uiManager.removeShouldRescale(this):this.parent&&null===t&&this._uiManager.addShouldRescale(this),super.setParent(t)}onScaleChanging(){const[t,e]=this.parentDimensions,i=this.width*t,s=this.height*e;this.setDimensions(i,s)}enableEditMode(){this.#Br||null===this.canvas||(super.enableEditMode(),this._isDraggable=!1,this.#Zr())}disableEditMode(){this.isInEditMode()&&null!==this.canvas&&(super.disableEditMode(),this._isDraggable=!this.isEmpty(),this.div.classList.remove("editing"),this.#ta())}onceAdded(){this._isDraggable=!this.isEmpty()}isEmpty(){return 0===this.paths.length||1===this.paths.length&&0===this.paths[0].length}#ea(){const{parentRotation:t,parentDimensions:[e,i]}=this;switch(t){case 90:return[0,i,i,e];case 180:return[e,i,e,i];case 270:return[e,0,i,e];default:return[0,0,e,i]}}#ia(){const{ctx:t,color:e,opacity:i,thickness:s,parentScale:n,scaleFactor:r}=this;t.lineWidth=s*n/r,t.lineCap="round",t.lineJoin="round",t.miterLimit=10,t.strokeStyle=`${e}${function(t){return Math.round(Math.min(255,Math.max(1,255*t))).toString(16).padStart(2,"0")}(i)}`}#sa(t,e){this.canvas.addEventListener("contextmenu",lt,{signal:this._uiManager._signal}),this.#ta(),this.#zr=new AbortController;const i=this._uiManager.combinedSignal(this.#zr);this.canvas.addEventListener("pointerleave",this.canvasPointerleave.bind(this),{signal:i}),this.canvas.addEventListener("pointermove",this.canvasPointermove.bind(this),{signal:i}),this.canvas.addEventListener("pointerup",this.canvasPointerup.bind(this),{signal:i}),this.isEditing=!0,this.#jr||(this.#jr=!0,this.#Jr(),this.thickness||=hs._defaultThickness,this.color||=hs._defaultColor||kt._defaultLineColor,this.opacity??=hs._defaultOpacity),this.currentPath.push([t,e]),this.#Hr=!1,this.#ia(),this.#Vr=()=>{this.#na(),this.#Vr&&window.requestAnimationFrame(this.#Vr)},window.requestAnimationFrame(this.#Vr)}#ra(t,e){const[i,s]=this.currentPath.at(-1);if(this.currentPath.length>1&&t===i&&e===s)return;const n=this.currentPath;let r=this.#Nr;if(n.push([t,e]),this.#Hr=!0,n.length<=2)return r.moveTo(...n[0]),void r.lineTo(t,e);3===n.length&&(this.#Nr=r=new Path2D,r.moveTo(...n[0])),this.#aa(r,...n.at(-3),...n.at(-2),t,e)}#oa(){if(0===this.currentPath.length)return;const t=this.currentPath.at(-1);this.#Nr.lineTo(...t)}#ha(t,e){let i;if(this.#Vr=null,t=Math.min(Math.max(t,0),this.canvas.width),e=Math.min(Math.max(e,0),this.canvas.height),this.#ra(t,e),this.#oa(),1!==this.currentPath.length)i=this.#la();else{const s=[t,e];i=[[s,s.slice(),s.slice(),s]]}const s=this.#Nr,n=this.currentPath;this.currentPath=[],this.#Nr=new Path2D,this.addCommands({cmd:()=>{this.allRawPaths.push(n),this.paths.push(i),this.bezierPath2D.push(s),this._uiManager.rebuild(this)},undo:()=>{this.allRawPaths.pop(),this.paths.pop(),this.bezierPath2D.pop(),0===this.paths.length?this.remove():(this.canvas||(this.#Yr(),this.#Qr()),this.#Xr())},mustExec:!0})}#na(){if(!this.#Hr)return;this.#Hr=!1;Math.ceil(this.thickness*this.parentScale);const t=this.currentPath.slice(-3),e=t.map((t=>t[0])),i=t.map((t=>t[1])),{ctx:s}=(Math.min(...e),Math.max(...e),Math.min(...i),Math.max(...i),this);s.save(),s.clearRect(0,0,this.canvas.width,this.canvas.height);for(const t of this.bezierPath2D)s.stroke(t);s.stroke(this.#Nr),s.restore()}#aa(t,e,i,s,n,r,a){const o=(e+s)/2,h=(i+n)/2,l=(s+r)/2,c=(n+a)/2;t.bezierCurveTo(o+2*(s-o)/3,h+2*(n-h)/3,l+2*(s-l)/3,c+2*(n-c)/3,l,c)}#la(){const t=this.currentPath;if(t.length<=2)return[[t[0],t[0],t.at(-1),t.at(-1)]];const e=[];let i,[s,n]=t[0];for(i=1;i<t.length-2;i++){const[r,a]=t[i],[o,h]=t[i+1],l=(r+o)/2,c=(a+h)/2,d=[s+2*(r-s)/3,n+2*(a-n)/3],u=[l+2*(r-l)/3,c+2*(a-c)/3];e.push([[s,n],d,u,[l,c]]),[s,n]=[l,c]}const[r,a]=t[i],[o,h]=t[i+1],l=[s+2*(r-s)/3,n+2*(a-n)/3],c=[o+2*(r-o)/3,h+2*(a-h)/3];return e.push([[s,n],l,c,[o,h]]),e}#Kr(){if(this.isEmpty())return void this.#ca();this.#ia();const{canvas:t,ctx:e}=this;e.setTransform(1,0,0,1,0,0),e.clearRect(0,0,t.width,t.height),this.#ca();for(const t of this.bezierPath2D)e.stroke(t)}commit(){this.#Br||(super.commit(),this.isEditing=!1,this.disableEditMode(),this.setInForeground(),this.#Br=!0,this.div.classList.add("disabled"),this.#Xr(!0),this.select(),this.parent.addInkEditorIfNeeded(!0),this.moveInDOM(),this.div.focus({preventScroll:!0}))}focusin(t){this._focusEventsAllowed&&(super.focusin(t),this.enableEditMode())}#Zr(){if(this.#$r)return;this.#$r=new AbortController;const t=this._uiManager.combinedSignal(this.#$r);this.canvas.addEventListener("pointerdown",this.canvasPointerdown.bind(this),{signal:t})}#ta(){this.pointerdownAC?.abort(),this.pointerdownAC=null}canvasPointerdown(t){0===t.button&&this.isInEditMode()&&!this.#Br&&(this.setInForeground(),t.preventDefault(),this.div.contains(document.activeElement)||this.div.focus({preventScroll:!0}),this.#sa(t.offsetX,t.offsetY))}canvasPointermove(t){t.preventDefault(),this.#ra(t.offsetX,t.offsetY)}canvasPointerup(t){t.preventDefault(),this.#da(t)}canvasPointerleave(t){this.#da(t)}#da(t){this.#zr?.abort(),this.#zr=null,this.#Zr(),this.#Or&&clearTimeout(this.#Or),this.#Or=setTimeout((()=>{this.#Or=null,this.canvas.removeEventListener("contextmenu",lt)}),10),this.#ha(t.offsetX,t.offsetY),this.addToAnnotationStorage(),this.setInBackground()}#Yr(){this.canvas=document.createElement("canvas"),this.canvas.width=this.canvas.height=0,this.canvas.className="inkEditorCanvas",this.canvas.setAttribute("data-l10n-id","pdfjs-ink-canvas"),this.div.append(this.canvas),this.ctx=this.canvas.getContext("2d")}#Qr(){this.#Ur=new ResizeObserver((t=>{const e=t[0].contentRect;e.width&&e.height&&this.setDimensions(e.width,e.height)})),this.#Ur.observe(this.div),this._uiManager._signal.addEventListener("abort",(()=>{this.#Ur?.disconnect(),this.#Ur=null}),{once:!0})}get isResizable(){return!this.isEmpty()&&this.#Br}render(){if(this.div)return this.div;let t,e;this.width&&(t=this.x,e=this.y),super.render(),this.div.setAttribute("data-l10n-id","pdfjs-ink");const[i,s,n,r]=this.#ea();if(this.setAt(i,s,0,0),this.setDims(n,r),this.#Yr(),this.width){const[i,s]=this.parentDimensions;this.setAspectRatio(this.width*i,this.height*s),this.setAt(t*i,e*s,this.width*i,this.height*s),this.#jr=!0,this.#Jr(),this.setDims(this.width*i,this.height*s),this.#Kr(),this.div.classList.add("disabled")}else this.div.classList.add("editing"),this.enableEditMode();return this.#Qr(),this.div}#Jr(){if(!this.#jr)return;const[t,e]=this.parentDimensions;this.canvas.width=Math.ceil(this.width*t),this.canvas.height=Math.ceil(this.height*e),this.#ca()}setDimensions(t,e){const i=Math.round(t),s=Math.round(e);if(this.#Wr===i&&this.#Gr===s)return;this.#Wr=i,this.#Gr=s,this.canvas.style.visibility="hidden";const[n,r]=this.parentDimensions;this.width=t/n,this.height=e/r,this.fixAndSetPosition(),this.#Br&&this.#ua(t,e),this.#Jr(),this.#Kr(),this.canvas.style.visibility="visible",this.fixDims()}#ua(t,e){const i=this.#pa(),s=(t-i)/this.#Fr,n=(e-i)/this.#Lr;this.scaleFactor=Math.min(s,n)}#ca(){const t=this.#pa()/2;this.ctx.setTransform(this.scaleFactor,0,0,this.scaleFactor,this.translationX*this.scaleFactor+t,this.translationY*this.scaleFactor+t)}static#ga(t){const e=new Path2D;for(let i=0,s=t.length;i<s;i++){const[s,n,r,a]=t[i];0===i&&e.moveTo(...s),e.bezierCurveTo(n[0],n[1],r[0],r[1],a[0],a[1])}return e}static#fa(t,e,i){const[s,n,r,a]=e;switch(i){case 0:for(let e=0,i=t.length;e<i;e+=2)t[e]+=s,t[e+1]=a-t[e+1];break;case 90:for(let e=0,i=t.length;e<i;e+=2){const i=t[e];t[e]=t[e+1]+s,t[e+1]=i+n}break;case 180:for(let e=0,i=t.length;e<i;e+=2)t[e]=r-t[e],t[e+1]+=n;break;case 270:for(let e=0,i=t.length;e<i;e+=2){const i=t[e];t[e]=r-t[e+1],t[e+1]=a-i}break;default:throw new Error("Invalid rotation")}return t}static#ma(t,e,i){const[s,n,r,a]=e;switch(i){case 0:for(let e=0,i=t.length;e<i;e+=2)t[e]-=s,t[e+1]=a-t[e+1];break;case 90:for(let e=0,i=t.length;e<i;e+=2){const i=t[e];t[e]=t[e+1]-n,t[e+1]=i-s}break;case 180:for(let e=0,i=t.length;e<i;e+=2)t[e]=r-t[e],t[e+1]-=n;break;case 270:for(let e=0,i=t.length;e<i;e+=2){const i=t[e];t[e]=a-t[e+1],t[e+1]=r-i}break;default:throw new Error("Invalid rotation")}return t}#ba(t,e,i,s){const n=[],r=this.thickness/2,a=t*e+r,o=t*i+r;for(const e of this.paths){const i=[],r=[];for(let s=0,n=e.length;s<n;s++){const[h,l,c,d]=e[s];if(h[0]===d[0]&&h[1]===d[1]&&1===n){const e=t*h[0]+a,s=t*h[1]+o;i.push(e,s),r.push(e,s);break}const u=t*h[0]+a,p=t*h[1]+o,g=t*l[0]+a,f=t*l[1]+o,m=t*c[0]+a,b=t*c[1]+o,v=t*d[0]+a,y=t*d[1]+o;0===s&&(i.push(u,p),r.push(u,p)),i.push(g,f,m,b,v,y),r.push(g,f),s===n-1&&r.push(v,y)}n.push({bezier:hs.#fa(i,s,this.rotation),points:hs.#fa(r,s,this.rotation)})}return n}#va(){let t=1/0,e=-1/0,i=1/0,s=-1/0;for(const n of this.paths)for(const[r,a,o,h]of n){const n=z.bezierBoundingBox(...r,...a,...o,...h);t=Math.min(t,n[0]),i=Math.min(i,n[1]),e=Math.max(e,n[2]),s=Math.max(s,n[3])}return[t,i,e,s]}#pa(){return this.#Br?Math.ceil(this.thickness*this.parentScale):0}#Xr(t=!1){if(this.isEmpty())return;if(!this.#Br)return void this.#Kr();const e=this.#va(),i=this.#pa();this.#Fr=Math.max(kt.MIN_SIZE,e[2]-e[0]),this.#Lr=Math.max(kt.MIN_SIZE,e[3]-e[1]);const s=Math.ceil(i+this.#Fr*this.scaleFactor),n=Math.ceil(i+this.#Lr*this.scaleFactor),[r,a]=this.parentDimensions;this.width=s/r,this.height=n/a,this.setAspectRatio(s,n);const o=this.translationX,h=this.translationY;this.translationX=-e[0],this.translationY=-e[1],this.#Jr(),this.#Kr(),this.#Wr=s,this.#Gr=n,this.setDims(s,n);const l=t?i/this.scaleFactor/2:0;this.translate(o-this.translationX-l,h-this.translationY-l)}static async deserialize(t,e,i){if(t instanceof Gi)return null;const s=await super.deserialize(t,e,i);s.thickness=t.thickness,s.color=z.makeHexColor(...t.color),s.opacity=t.opacity;const[n,r]=s.pageDimensions,a=s.width*n,o=s.height*r,h=s.parentScale,l=t.thickness/2;s.#Br=!0,s.#Wr=Math.round(a),s.#Gr=Math.round(o);const{paths:c,rect:d,rotation:u}=t;for(let{bezier:t}of c){t=hs.#ma(t,d,u);const e=[];s.paths.push(e);let i=h*(t[0]-l),n=h*(t[1]-l);for(let s=2,r=t.length;s<r;s+=6){const r=h*(t[s]-l),a=h*(t[s+1]-l),o=h*(t[s+2]-l),c=h*(t[s+3]-l),d=h*(t[s+4]-l),u=h*(t[s+5]-l);e.push([[i,n],[r,a],[o,c],[d,u]]),i=d,n=u}const r=this.#ga(e);s.bezierPath2D.push(r)}const p=s.#va();return s.#Fr=Math.max(kt.MIN_SIZE,p[2]-p[0]),s.#Lr=Math.max(kt.MIN_SIZE,p[3]-p[1]),s.#ua(a,o),s}serialize(){if(this.isEmpty())return null;const t=this.getRect(0,0),e=kt._colorManager.convert(this.ctx.strokeStyle);return{annotationType:l.INK,color:e,thickness:this.thickness,opacity:this.opacity,paths:this.#ba(this.scaleFactor/this.parentScale,this.translationX,this.translationY,t),pageIndex:this.pageIndex,rect:t,rotation:this.rotation,structTreeParentId:this._structTreeParentId}}}class ls extends kt{#ya=null;#Aa=null;#wa=null;#xa=null;#_a=null;#Ea="";#Ca=null;#Ur=null;#Sa=null;#Ta=!1;#Ma=!1;static _type="stamp";static _editorType=l.STAMP;constructor(t){super({...t,name:"stampEditor"}),this.#xa=t.bitmapUrl,this.#_a=t.bitmapFile}static initialize(t,e){kt.initialize(t,e)}static get supportedTypes(){return C(this,"supportedTypes",["apng","avif","bmp","gif","jpeg","png","svg+xml","webp","x-icon"].map((t=>`image/${t}`)))}static get supportedTypesStr(){return C(this,"supportedTypesStr",this.supportedTypes.join(","))}static isHandlingMimeForPasting(t){return this.supportedTypes.includes(t)}static paste(t,e){e.pasteEditor(l.STAMP,{bitmapFile:t.getAsFile()})}altTextFinish(){this._uiManager.useNewAltTextFlow&&(this.div.hidden=!1),super.altTextFinish()}get telemetryFinalData(){return{type:"stamp",hasAltText:!!this.altTextData?.altText}}static computeTelemetryFinalData(t){const e=t.get("hasAltText");return{hasAltText:e.get(!0)??0,hasNoAltText:e.get(!1)??0}}#ka(t,e=!1){t?(this.#ya=t.bitmap,e||(this.#Aa=t.id,this.#Ta=t.isSvg),t.file&&(this.#Ea=t.file.name),this.#Yr()):this.remove()}#Ia(){if(this.#wa=null,this._uiManager.enableWaiting(!1),this.#Ca){if(this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow&&this.#ya)return this._editToolbar.hide(),void this._uiManager.editAltText(this,!0);if(!this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow&&this.#ya){this._reportTelemetry({action:"pdfjs.image.image_added",data:{alt_text_modal:!1,alt_text_type:"empty"}});try{this.mlGuessAltText()}catch{}}this.div.focus()}}async mlGuessAltText(t=null,e=!0){if(this.hasAltTextData())return null;const{mlManager:i}=this._uiManager;if(!i)throw new Error("No ML.");if(!await i.isEnabledFor("altText"))throw new Error("ML isn't enabled for alt text.");const{data:s,width:n,height:r}=t||this.copyCanvas(null,null,!0).imageData,a=await i.guess({name:"altText",request:{data:s,width:n,height:r,channels:s.length/(n*r)}});if(!a)throw new Error("No response from the AI service.");if(a.error)throw new Error("Error from the AI service.");if(a.cancel)return null;if(!a.output)throw new Error("No valid response from the AI service.");const o=a.output;return await this.setGuessedAltText(o),e&&!this.hasAltTextData()&&(this.altTextData={alt:o,decorative:!1}),o}#Ra(){if(this.#Aa)return this._uiManager.enableWaiting(!0),void this._uiManager.imageManager.getFromId(this.#Aa).then((t=>this.#ka(t,!0))).finally((()=>this.#Ia()));if(this.#xa){const t=this.#xa;return this.#xa=null,this._uiManager.enableWaiting(!0),void(this.#wa=this._uiManager.imageManager.getFromUrl(t).then((t=>this.#ka(t))).finally((()=>this.#Ia())))}if(this.#_a){const t=this.#_a;return this.#_a=null,this._uiManager.enableWaiting(!0),void(this.#wa=this._uiManager.imageManager.getFromFile(t).then((t=>this.#ka(t))).finally((()=>this.#Ia())))}const t=document.createElement("input");t.type="file",t.accept=ls.supportedTypesStr;const e=this._uiManager._signal;this.#wa=new Promise((i=>{t.addEventListener("change",(async()=>{if(t.files&&0!==t.files.length){this._uiManager.enableWaiting(!0);const e=await this._uiManager.imageManager.getFromFile(t.files[0]);this._reportTelemetry({action:"pdfjs.image.image_selected",data:{alt_text_modal:this._uiManager.useNewAltTextFlow}}),this.#ka(e)}else this.remove();i()}),{signal:e}),t.addEventListener("cancel",(()=>{this.remove(),i()}),{signal:e})})).finally((()=>this.#Ia())),t.click()}remove(){this.#Aa&&(this.#ya=null,this._uiManager.imageManager.deleteId(this.#Aa),this.#Ca?.remove(),this.#Ca=null,this.#Ur?.disconnect(),this.#Ur=null,this.#Sa&&(clearTimeout(this.#Sa),this.#Sa=null)),super.remove()}rebuild(){this.parent?(super.rebuild(),null!==this.div&&(this.#Aa&&null===this.#Ca&&this.#Ra(),this.isAttachedToDOM||this.parent.add(this))):this.#Aa&&this.#Ra()}onceAdded(){this._isDraggable=!0,this.div.focus()}isEmpty(){return!(this.#wa||this.#ya||this.#xa||this.#_a||this.#Aa)}get isResizable(){return!0}render(){if(this.div)return this.div;let t,e;if(this.width&&(t=this.x,e=this.y),super.render(),this.div.hidden=!0,this.div.setAttribute("role","figure"),this.addAltTextButton(),this.#ya?this.#Yr():this.#Ra(),this.width&&!this.annotationElementId){const[i,s]=this.parentDimensions;this.setAt(t*i,e*s,this.width*i,this.height*s)}return this.div}#Yr(){const{div:t}=this;let{width:e,height:i}=this.#ya;const[s,n]=this.pageDimensions,r=.75;if(this.width)e=this.width*s,i=this.height*n;else if(e>r*s||i>r*n){const t=Math.min(r*s/e,r*n/i);e*=t,i*=t}const[a,o]=this.parentDimensions;this.setDims(e*a/s,i*o/n),this._uiManager.enableWaiting(!1);const h=this.#Ca=document.createElement("canvas");h.setAttribute("role","img"),this.addContainer(h),this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow&&!this.annotationElementId||(t.hidden=!1),this.#Pa(e,i),this.#Qr(),this.#Ma||(this.parent.addUndoableEditor(this),this.#Ma=!0),this._reportTelemetry({action:"inserted_image"}),this.#Ea&&h.setAttribute("aria-label",this.#Ea)}copyCanvas(t,e,i=!1){t||(t=224);const{width:s,height:n}=this.#ya,r=new vt;let a=this.#ya,o=s,h=n,l=null;if(e){if(s>e||n>e){const t=Math.min(e/s,e/n);o=Math.floor(s*t),h=Math.floor(n*t)}l=document.createElement("canvas");const t=l.width=Math.ceil(o*r.sx),i=l.height=Math.ceil(h*r.sy);this.#Ta||(a=this.#Da(t,i));const c=l.getContext("2d");c.filter=this._uiManager.hcmFilter;let d="white",u="#cfcfd8";"none"!==this._uiManager.hcmFilter?u="black":window.matchMedia?.("(prefers-color-scheme: dark)").matches&&(d="#8f8f9d",u="#42414d");const p=15,g=p*r.sx,f=p*r.sy,m=new OffscreenCanvas(2*g,2*f),b=m.getContext("2d");b.fillStyle=d,b.fillRect(0,0,2*g,2*f),b.fillStyle=u,b.fillRect(0,0,g,f),b.fillRect(g,f,g,f),c.fillStyle=c.createPattern(m,"repeat"),c.fillRect(0,0,t,i),c.drawImage(a,0,0,a.width,a.height,0,0,t,i)}let c=null;if(i){let e,i;if(r.symmetric&&a.width<t&&a.height<t)e=a.width,i=a.height;else if(a=this.#ya,s>t||n>t){const r=Math.min(t/s,t/n);e=Math.floor(s*r),i=Math.floor(n*r),this.#Ta||(a=this.#Da(e,i))}const o=new OffscreenCanvas(e,i).getContext("2d",{willReadFrequently:!0});o.drawImage(a,0,0,a.width,a.height,0,0,e,i),c={width:e,height:i,data:o.getImageData(0,0,e,i).data}}return{canvas:l,width:o,height:h,imageData:c}}#La(t,e){const[i,s]=this.parentDimensions;this.width=t/i,this.height=e/s,this._initialOptions?.isCentered?this.center():this.fixAndSetPosition(),this._initialOptions=null,null!==this.#Sa&&clearTimeout(this.#Sa),this.#Sa=setTimeout((()=>{this.#Sa=null,this.#Pa(t,e)}),200)}#Da(t,e){const{width:i,height:s}=this.#ya;let n=i,r=s,a=this.#ya;for(;n>2*t||r>2*e;){const i=n,s=r;n>2*t&&(n=n>=16384?Math.floor(n/2)-1:Math.ceil(n/2)),r>2*e&&(r=r>=16384?Math.floor(r/2)-1:Math.ceil(r/2));const o=new OffscreenCanvas(n,r);o.getContext("2d").drawImage(a,0,0,i,s,0,0,n,r),a=o.transferToImageBitmap()}return a}#Pa(t,e){const i=new vt,s=Math.ceil(t*i.sx),n=Math.ceil(e*i.sy),r=this.#Ca;if(!r||r.width===s&&r.height===n)return;r.width=s,r.height=n;const a=this.#Ta?this.#ya:this.#Da(s,n),o=r.getContext("2d");o.filter=this._uiManager.hcmFilter,o.drawImage(a,0,0,a.width,a.height,0,0,s,n)}getImageForAltText(){return this.#Ca}#Fa(t){if(t){if(this.#Ta){const t=this._uiManager.imageManager.getSvgUrl(this.#Aa);if(t)return t}const t=document.createElement("canvas");return({width:t.width,height:t.height}=this.#ya),t.getContext("2d").drawImage(this.#ya,0,0),t.toDataURL()}if(this.#Ta){const[t,e]=this.pageDimensions,i=Math.round(this.width*t*Y.PDF_TO_CSS_UNITS),s=Math.round(this.height*e*Y.PDF_TO_CSS_UNITS),n=new OffscreenCanvas(i,s);return n.getContext("2d").drawImage(this.#ya,0,0,this.#ya.width,this.#ya.height,0,0,i,s),n.transferToImageBitmap()}return structuredClone(this.#ya)}#Qr(){this._uiManager._signal&&(this.#Ur=new ResizeObserver((t=>{const e=t[0].contentRect;e.width&&e.height&&this.#La(e.width,e.height)})),this.#Ur.observe(this.div),this._uiManager._signal.addEventListener("abort",(()=>{this.#Ur?.disconnect(),this.#Ur=null}),{once:!0}))}static async deserialize(t,e,i){let s=null;if(t instanceof Yi){const{data:{rect:n,rotation:r,id:a,structParent:o,popupRef:h},container:c,parent:{page:{pageNumber:d}}}=t,u=c.querySelector("canvas"),p=i.imageManager.getFromCanvas(c.id,u);u.remove();const g=(await e._structTree.getAriaAttributes(`${$}${a}`))?.get("aria-label")||"";s=t={annotationType:l.STAMP,bitmapId:p.id,bitmap:p.bitmap,pageIndex:d-1,rect:n.slice(0),rotation:r,id:a,deleted:!1,accessibilityData:{decorative:!1,altText:g},isSvg:!1,structParent:o,popupRef:h}}const n=await super.deserialize(t,e,i),{rect:r,bitmap:a,bitmapUrl:o,bitmapId:h,isSvg:c,accessibilityData:d}=t;h&&i.imageManager.isValidId(h)?(n.#Aa=h,a&&(n.#ya=a)):n.#xa=o,n.#Ta=c;const[u,p]=n.pageDimensions;return n.width=(r[2]-r[0])/u,n.height=(r[3]-r[1])/p,n.annotationElementId=t.id||null,d&&(n.altTextData=d),n._initialData=s,n.#Ma=!!s,n}serialize(t=!1,e=null){if(this.isEmpty())return null;if(this.deleted)return this.serializeDeleted();const i={annotationType:l.STAMP,bitmapId:this.#Aa,pageIndex:this.pageIndex,rect:this.getRect(0,0),rotation:this.rotation,isSvg:this.#Ta,structTreeParentId:this._structTreeParentId};if(t)return i.bitmapUrl=this.#Fa(!0),i.accessibilityData=this.serializeAltText(!0),i;const{decorative:s,altText:n}=this.serializeAltText(!1);if(!s&&n&&(i.accessibilityData={type:"Figure",alt:n}),this.annotationElementId){const t=this.#gn(i);if(t.isSame)return null;t.isSameAltText?delete i.accessibilityData:i.accessibilityData.structParent=this._initialData.structParent??-1}if(i.id=this.annotationElementId,null===e)return i;e.stamps||=new Map;const r=this.#Ta?(i.rect[2]-i.rect[0])*(i.rect[3]-i.rect[1]):null;if(e.stamps.has(this.#Aa)){if(this.#Ta){const t=e.stamps.get(this.#Aa);r>t.area&&(t.area=r,t.serialized.bitmap.close(),t.serialized.bitmap=this.#Fa(!1))}}else e.stamps.set(this.#Aa,{area:r,serialized:i}),i.bitmap=this.#Fa(!1);return i}#gn(t){const{rect:e,pageIndex:i,accessibilityData:{altText:s}}=this._initialData,n=t.rect.every(((t,i)=>Math.abs(t-e[i])<1)),r=t.pageIndex===i,a=(t.accessibilityData?.alt||"")===s;return{isSame:n&&r&&a,isSameAltText:a}}renderAnnotationElement(t){return t.updateEdited({rect:this.getRect(0,0)}),null}}class cs{#Qs;#Oa=!1;#Na=null;#Ba=null;#za=null;#Ha=new Map;#ja=!1;#Ua=!1;#$a=!1;#Wa=null;#Ga=null;#f;static _initialized=!1;static#H=new Map([ts,hs,ls,os].map((t=>[t._editorType,t])));constructor({uiManager:t,pageIndex:e,div:i,structTreeLayer:s,accessibilityManager:n,annotationLayer:r,drawLayer:a,textLayer:o,viewport:h,l10n:l}){const c=[...cs.#H.values()];if(!cs._initialized){cs._initialized=!0;for(const e of c)e.initialize(l,t)}t.registerEditorTypes(c),this.#f=t,this.pageIndex=e,this.div=i,this.#Qs=n,this.#Na=r,this.viewport=h,this.#Wa=o,this.drawLayer=a,this._structTree=s,this.#f.addLayer(this)}get isEmpty(){return 0===this.#Ha.size}get isInvisible(){return this.isEmpty&&this.#f.getMode()===l.NONE}updateToolbar(t){this.#f.updateToolbar(t)}updateMode(t=this.#f.getMode()){switch(this.#Va(),t){case l.NONE:return this.disableTextSelection(),this.togglePointerEvents(!1),this.toggleAnnotationLayerPointerEvents(!0),void this.disableClick();case l.INK:this.addInkEditorIfNeeded(!1),this.disableTextSelection(),this.togglePointerEvents(!0),this.disableClick();break;case l.HIGHLIGHT:this.enableTextSelection(),this.togglePointerEvents(!1),this.disableClick();break;default:this.disableTextSelection(),this.togglePointerEvents(!0),this.enableClick()}this.toggleAnnotationLayerPointerEvents(!1);const{classList:e}=this.div;for(const i of cs.#H.values())e.toggle(`${i._type}Editing`,t===i._editorType);this.div.hidden=!1}hasTextLayer(t){return t===this.#Wa?.div}addInkEditorIfNeeded(t){if(this.#f.getMode()===l.INK){if(!t)for(const t of this.#Ha.values())if(t.isEmpty())return void t.setInBackground();this.createAndAddNewEditor({offsetX:0,offsetY:0},!1).setInBackground()}}setEditingState(t){this.#f.setEditingState(t)}addCommands(t){this.#f.addCommands(t)}toggleDrawing(t=!1){this.div.classList.toggle("drawing",!t)}togglePointerEvents(t=!1){this.div.classList.toggle("disabled",!t)}toggleAnnotationLayerPointerEvents(t=!1){this.#Na?.div.classList.toggle("disabled",!t)}async enable(){this.div.tabIndex=0,this.togglePointerEvents(!0);const t=new Set;for(const e of this.#Ha.values())e.enableEditing(),e.show(!0),e.annotationElementId&&(this.#f.removeChangedExistingAnnotation(e),t.add(e.annotationElementId));if(!this.#Na)return;const e=this.#Na.getEditableAnnotations();for(const i of e){if(i.hide(),this.#f.isDeletedAnnotationElement(i.data.id))continue;if(t.has(i.data.id))continue;const e=await this.deserialize(i);e&&(this.addOrRebuild(e),e.enableEditing())}}disable(){this.#$a=!0,this.div.tabIndex=-1,this.togglePointerEvents(!1);const t=new Map,e=new Map;for(const i of this.#Ha.values())i.disableEditing(),i.annotationElementId&&(null===i.serialize()?(e.set(i.annotationElementId,i),this.getEditableAnnotation(i.annotationElementId)?.show(),i.remove()):t.set(i.annotationElementId,i));if(this.#Na){const i=this.#Na.getEditableAnnotations();for(const s of i){const{id:i}=s.data;if(this.#f.isDeletedAnnotationElement(i))continue;let n=e.get(i);n?(n.resetAnnotationElement(s),n.show(!1),s.show()):(n=t.get(i),n&&(this.#f.addChangedExistingAnnotation(n),n.renderAnnotationElement(s)&&n.show(!1)),s.show())}}this.#Va(),this.isEmpty&&(this.div.hidden=!0);const{classList:i}=this.div;for(const t of cs.#H.values())i.remove(`${t._type}Editing`);this.disableTextSelection(),this.toggleAnnotationLayerPointerEvents(!0),this.#$a=!1}getEditableAnnotation(t){return this.#Na?.getEditableAnnotation(t)||null}setActiveEditor(t){this.#f.getActive()!==t&&this.#f.setActiveEditor(t)}enableTextSelection(){if(this.div.tabIndex=-1,this.#Wa?.div&&!this.#Ga){this.#Ga=new AbortController;const t=this.#f.combinedSignal(this.#Ga);this.#Wa.div.addEventListener("pointerdown",this.#qa.bind(this),{signal:t}),this.#Wa.div.classList.add("highlighting")}}disableTextSelection(){this.div.tabIndex=0,this.#Wa?.div&&this.#Ga&&(this.#Ga.abort(),this.#Ga=null,this.#Wa.div.classList.remove("highlighting"))}#qa(t){this.#f.unselectAll();const{target:e}=t;if(e===this.#Wa.div||("img"===e.getAttribute("role")||e.classList.contains("endOfContent"))&&this.#Wa.div.contains(e)){const{isMac:e}=N.platform;if(0!==t.button||t.ctrlKey&&e)return;this.#f.showAllEditors("highlight",!0,!0),this.#Wa.div.classList.add("free"),this.toggleDrawing(),os.startHighlighting(this,"ltr"===this.#f.direction,{target:this.#Wa.div,x:t.x,y:t.y}),this.#Wa.div.addEventListener("pointerup",(()=>{this.#Wa.div.classList.remove("free"),this.toggleDrawing(!0)}),{once:!0,signal:this.#f._signal}),t.preventDefault()}}enableClick(){if(this.#Ba)return;this.#Ba=new AbortController;const t=this.#f.combinedSignal(this.#Ba);this.div.addEventListener("pointerdown",this.pointerdown.bind(this),{signal:t}),this.div.addEventListener("pointerup",this.pointerup.bind(this),{signal:t})}disableClick(){this.#Ba?.abort(),this.#Ba=null}attach(t){this.#Ha.set(t.id,t);const{annotationElementId:e}=t;e&&this.#f.isDeletedAnnotationElement(e)&&this.#f.removeDeletedAnnotationElement(t)}detach(t){this.#Ha.delete(t.id),this.#Qs?.removePointerInTextLayer(t.contentDiv),!this.#$a&&t.annotationElementId&&this.#f.addDeletedAnnotationElement(t)}remove(t){this.detach(t),this.#f.removeEditor(t),t.div.remove(),t.isAttachedToDOM=!1,this.#Ua||this.addInkEditorIfNeeded(!1)}changeParent(t){t.parent!==this&&(t.parent&&t.annotationElementId&&(this.#f.addDeletedAnnotationElement(t.annotationElementId),kt.deleteAnnotationElement(t),t.annotationElementId=null),this.attach(t),t.parent?.detach(t),t.setParent(this),t.div&&t.isAttachedToDOM&&(t.div.remove(),this.div.append(t.div)))}add(t){if(t.parent!==this||!t.isAttachedToDOM){if(this.changeParent(t),this.#f.addEditor(t),this.attach(t),!t.isAttachedToDOM){const e=t.render();this.div.append(e),t.isAttachedToDOM=!0}t.fixAndSetPosition(),t.onceAdded(),this.#f.addToAnnotationStorage(t),t._reportTelemetry(t.telemetryInitialData)}}moveEditorInDOM(t){if(!t.isAttachedToDOM)return;const{activeElement:e}=document;t.div.contains(e)&&!this.#za&&(t._focusEventsAllowed=!1,this.#za=setTimeout((()=>{this.#za=null,t.div.contains(document.activeElement)?t._focusEventsAllowed=!0:(t.div.addEventListener("focusin",(()=>{t._focusEventsAllowed=!0}),{once:!0,signal:this.#f._signal}),e.focus())}),0)),t._structTreeParentId=this.#Qs?.moveElementInDOM(this.div,t.div,t.contentDiv,!0)}addOrRebuild(t){t.needsToBeRebuilt()?(t.parent||=this,t.rebuild(),t.show()):this.add(t)}addUndoableEditor(t){this.addCommands({cmd:()=>t._uiManager.rebuild(t),undo:()=>{t.remove()},mustExec:!1})}getNextId(){return this.#f.getId()}get#Xa(){return cs.#H.get(this.#f.getMode())}combinedSignal(t){return this.#f.combinedSignal(t)}#Ka(t){const e=this.#Xa;return e?new e.prototype.constructor(t):null}canCreateNewEmptyEditor(){return this.#Xa?.canCreateNewEmptyEditor()}pasteEditor(t,e){this.#f.updateToolbar(t),this.#f.updateMode(t);const{offsetX:i,offsetY:s}=this.#Ya(),n=this.getNextId(),r=this.#Ka({parent:this,id:n,x:i,y:s,uiManager:this.#f,isCentered:!0,...e});r&&this.add(r)}async deserialize(t){return await(cs.#H.get(t.annotationType??t.annotationEditorType)?.deserialize(t,this,this.#f))||null}createAndAddNewEditor(t,e,i={}){const s=this.getNextId(),n=this.#Ka({parent:this,id:s,x:t.offsetX,y:t.offsetY,uiManager:this.#f,isCentered:e,...i});return n&&this.add(n),n}#Ya(){const{x:t,y:e,width:i,height:s}=this.div.getBoundingClientRect(),n=Math.max(0,t),r=Math.max(0,e),a=(n+Math.min(window.innerWidth,t+i))/2-t,o=(r+Math.min(window.innerHeight,e+s))/2-e,[h,l]=this.viewport.rotation%180==0?[a,o]:[o,a];return{offsetX:h,offsetY:l}}addNewEditor(){this.createAndAddNewEditor(this.#Ya(),!0)}setSelected(t){this.#f.setSelected(t)}toggleSelected(t){this.#f.toggleSelected(t)}isSelected(t){return this.#f.isSelected(t)}unselect(t){this.#f.unselect(t)}pointerup(t){const{isMac:e}=N.platform;0!==t.button||t.ctrlKey&&e||t.target===this.div&&this.#ja&&(this.#ja=!1,this.#Oa?this.#f.getMode()!==l.STAMP?this.createAndAddNewEditor(t,!1):this.#f.unselectAll():this.#Oa=!0)}pointerdown(t){if(this.#f.getMode()===l.HIGHLIGHT&&this.enableTextSelection(),this.#ja)return void(this.#ja=!1);const{isMac:e}=N.platform;if(0!==t.button||t.ctrlKey&&e)return;if(t.target!==this.div)return;this.#ja=!0;const i=this.#f.getActive();this.#Oa=!i||i.isEmpty()}findNewParent(t,e,i){const s=this.#f.findParent(e,i);return null!==s&&s!==this&&(s.changeParent(t),!0)}destroy(){this.#f.getActive()?.parent===this&&(this.#f.commitOrRemove(),this.#f.setActiveEditor(null)),this.#za&&(clearTimeout(this.#za),this.#za=null);for(const t of this.#Ha.values())this.#Qs?.removePointerInTextLayer(t.contentDiv),t.setParent(null),t.isAttachedToDOM=!1,t.div.remove();this.div=null,this.#Ha.clear(),this.#f.removeLayer(this)}#Va(){this.#Ua=!0;for(const t of this.#Ha.values())t.isEmpty()&&t.remove();this.#Ua=!1}render({viewport:t}){this.viewport=t,bt(this.div,t);for(const t of this.#f.getEditors(this.pageIndex))this.add(t),t.rebuild();this.updateMode()}update({viewport:t}){this.#f.commitOrRemove(),this.#Va();const e=this.viewport.rotation,i=t.rotation;if(this.viewport=t,bt(this.div,{rotation:i}),e!==i)for(const t of this.#Ha.values())t.rotate(i);this.addInkEditorIfNeeded(!1)}get pageDimensions(){const{pageWidth:t,pageHeight:e}=this.viewport.rawDims;return[t,e]}get scale(){return this.#f.viewParameters.realScale}}class ds{#Rs=null;#y=0;#Qa=new Map;#Ja=new Map;constructor({pageIndex:t}){this.pageIndex=t}setParent(t){if(this.#Rs){if(this.#Rs!==t){if(this.#Qa.size>0)for(const e of this.#Qa.values())e.remove(),t.append(e);this.#Rs=t}}else this.#Rs=t}static get _svgFactory(){return C(this,"_svgFactory",new tt)}static#Za(t,{x:e=0,y:i=0,width:s=1,height:n=1}={}){const{style:r}=t;r.top=100*i+"%",r.left=100*e+"%",r.width=100*s+"%",r.height=100*n+"%"}#to(t){const e=ds._svgFactory.create(1,1,!0);return this.#Rs.append(e),e.setAttribute("aria-hidden",!0),ds.#Za(e,t),e}#eo(t,e){const i=ds._svgFactory.createElement("clipPath");t.append(i);const s=`clip_${e}`;i.setAttribute("id",s),i.setAttribute("clipPathUnits","objectBoundingBox");const n=ds._svgFactory.createElement("use");return i.append(n),n.setAttribute("href",`#${e}`),n.classList.add("clip"),s}highlight(t,e,i,s=!1){const n=this.#y++,r=this.#to(t.box);r.classList.add("highlight"),t.free&&r.classList.add("free");const a=ds._svgFactory.createElement("defs");r.append(a);const o=ds._svgFactory.createElement("path");a.append(o);const h=`path_p${this.pageIndex}_${n}`;o.setAttribute("id",h),o.setAttribute("d",t.toSVGPath()),s&&this.#Ja.set(n,o);const l=this.#eo(a,h),c=ds._svgFactory.createElement("use");return r.append(c),r.setAttribute("fill",e),r.setAttribute("fill-opacity",i),c.setAttribute("href",`#${h}`),this.#Qa.set(n,r),{id:n,clipPathId:`url(#${l})`}}highlightOutline(t){const e=this.#y++,i=this.#to(t.box);i.classList.add("highlightOutline");const s=ds._svgFactory.createElement("defs");i.append(s);const n=ds._svgFactory.createElement("path");s.append(n);const r=`path_p${this.pageIndex}_${e}`;let a;if(n.setAttribute("id",r),n.setAttribute("d",t.toSVGPath()),n.setAttribute("vector-effect","non-scaling-stroke"),t.free){i.classList.add("free");const t=ds._svgFactory.createElement("mask");s.append(t),a=`mask_p${this.pageIndex}_${e}`,t.setAttribute("id",a),t.setAttribute("maskUnits","objectBoundingBox");const n=ds._svgFactory.createElement("rect");t.append(n),n.setAttribute("width","1"),n.setAttribute("height","1"),n.setAttribute("fill","white");const o=ds._svgFactory.createElement("use");t.append(o),o.setAttribute("href",`#${r}`),o.setAttribute("stroke","none"),o.setAttribute("fill","black"),o.setAttribute("fill-rule","nonzero"),o.classList.add("mask")}const o=ds._svgFactory.createElement("use");i.append(o),o.setAttribute("href",`#${r}`),a&&o.setAttribute("mask",`url(#${a})`);const h=o.cloneNode();return i.append(h),o.classList.add("mainOutline"),h.classList.add("secondaryOutline"),this.#Qa.set(e,i),e}finalizeLine(t,e){const i=this.#Ja.get(t);this.#Ja.delete(t),this.updateBox(t,e.box),i.setAttribute("d",e.toSVGPath())}updateLine(t,e){this.#Qa.get(t).firstChild.firstChild.setAttribute("d",e.toSVGPath())}removeFreeHighlight(t){this.remove(t),this.#Ja.delete(t)}updatePath(t,e){this.#Ja.get(t).setAttribute("d",e.toSVGPath())}updateBox(t,e){ds.#Za(this.#Qa.get(t),e)}show(t,e){this.#Qa.get(t).classList.toggle("hidden",!e)}rotate(t,e){this.#Qa.get(t).setAttribute("data-main-rotation",e)}changeColor(t,e){this.#Qa.get(t).setAttribute("fill",e)}changeOpacity(t,e){this.#Qa.get(t).setAttribute("fill-opacity",e)}addClass(t,e){this.#Qa.get(t).classList.add(e)}removeClass(t,e){this.#Qa.get(t).classList.remove(e)}getSVGRoot(t){return this.#Qa.get(t)}remove(t){null!==this.#Rs&&(this.#Qa.get(t).remove(),this.#Qa.delete(t))}destroy(){this.#Rs=null;for(const t of this.#Qa.values())t.remove();this.#Qa.clear()}}'